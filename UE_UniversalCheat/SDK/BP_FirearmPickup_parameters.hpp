#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FirearmPickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RepItemInfo_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_RepAttachmentInfo_structs.hpp"
#include "S_ItemStat_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function BP_FirearmPickup.BP_FirearmPickup_C.ChamberWeapon
// 0x0188 (0x0188 - 0x0000)
struct BP_FirearmPickup_C_ChamberWeapon final
{
public:
	class UActorComponent*                        MPComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActiveWeapons;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          FromFireFunction;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BulletID;                                          // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BulletFired;                                       // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChamberIndex;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ChamberC;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1;          // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetJSIContainerByPlayerSlots_Container;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetJSIContainerByPlayerSlots_EquippedItem; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJSIContainerByPlayerSlots_IsPending_;  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUseBullet_Return;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_TryUseBullet_UID;                         // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_TryUseBullet_ItemUsed;                    // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer_1; // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex_1; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerCapacity_Cap;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerCapacity_MaxCapacity;         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_2;          // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallServerChamberWeapon_Result;   // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipItem_Unequipped;                   // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_UnequipItem_SlotRef;                      // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallServerChamberWeapon_Result_1; // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemID_ItemID;                         // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_Equipped;                       // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_EquipItem_SlotItemRef;                    // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_ChamberWeapon) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_ChamberWeapon");
static_assert(sizeof(BP_FirearmPickup_C_ChamberWeapon) == 0x000188, "Wrong size on BP_FirearmPickup_C_ChamberWeapon");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, MPComp) == 0x000000, "Member 'BP_FirearmPickup_C_ChamberWeapon::MPComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, ActiveWeapons) == 0x000008, "Member 'BP_FirearmPickup_C_ChamberWeapon::ActiveWeapons' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, FromFireFunction) == 0x000010, "Member 'BP_FirearmPickup_C_ChamberWeapon::FromFireFunction' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, Result) == 0x000011, "Member 'BP_FirearmPickup_C_ChamberWeapon::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, BulletID) == 0x000014, "Member 'BP_FirearmPickup_C_ChamberWeapon::BulletID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, BulletFired) == 0x00001C, "Member 'BP_FirearmPickup_C_ChamberWeapon::BulletFired' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, ChamberIndex) == 0x000024, "Member 'BP_FirearmPickup_C_ChamberWeapon::ChamberIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, ChamberC) == 0x000028, "Member 'BP_FirearmPickup_C_ChamberWeapon::ChamberC' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000030, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget) == 0x000048, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1) == 0x000050, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000068, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetJSIContainerByPlayerSlots_Container) == 0x000080, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetJSIContainerByPlayerSlots_Container' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetJSIContainerByPlayerSlots_EquippedItem) == 0x000088, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetJSIContainerByPlayerSlots_EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetJSIContainerByPlayerSlots_IsPending_) == 0x000090, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetJSIContainerByPlayerSlots_IsPending_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetContainerOneRef_ContainerRef) == 0x000098, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0000A8, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_BooleanAND_ReturnValue) == 0x0000B9, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetContainerByAttachmentType_JigContainer) == 0x0000C0, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetContainerByAttachmentType_JigContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetContainerByAttachmentType_ContainerIndex) == 0x0000C8, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetContainerByAttachmentType_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetEquippedItemRef_Found_) == 0x0000CC, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000D0, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetEquippedItemRef_IsPending) == 0x0000D8, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x0000E0, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_TryUseBullet_Return) == 0x0000F1, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_TryUseBullet_Return' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_TryUseBullet_UID) == 0x0000F4, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_TryUseBullet_UID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_TryUseBullet_ItemUsed) == 0x000108, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_TryUseBullet_ItemUsed' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetContainerByAttachmentType_JigContainer_1) == 0x000110, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetContainerByAttachmentType_JigContainer_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetContainerByAttachmentType_ContainerIndex_1) == 0x000118, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetContainerByAttachmentType_ContainerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetUniqueID_UniqueServerID) == 0x00011C, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_IsValid_ReturnValue_1) == 0x00012C, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetContainerCapacity_Cap) == 0x000130, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetContainerCapacity_Cap' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetContainerCapacity_MaxCapacity) == 0x000134, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetContainerCapacity_MaxCapacity' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_Greater_IntInt_ReturnValue) == 0x000138, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_2) == 0x000140, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, K2Node_DynamicCast_bSuccess_5) == 0x000150, "Member 'BP_FirearmPickup_C_ChamberWeapon::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_JigComp_CallServerChamberWeapon_Result) == 0x000151, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_JigComp_CallServerChamberWeapon_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x000152, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_UnequipItem_Unequipped) == 0x000153, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_UnequipItem_Unequipped' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_UnequipItem_SlotRef) == 0x000158, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_UnequipItem_SlotRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetEquippedItemRef_Found__1) == 0x000160, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000168, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000170, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_JigComp_CallServerChamberWeapon_Result_1) == 0x000171, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_JigComp_CallServerChamberWeapon_Result_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_GetItemID_ItemID) == 0x000174, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_GetItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_EquipItem_Equipped) == 0x00017C, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_EquipItem_Equipped' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ChamberWeapon, CallFunc_EquipItem_SlotItemRef) == 0x000180, "Member 'BP_FirearmPickup_C_ChamberWeapon::CallFunc_EquipItem_SlotItemRef' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.CheckAttachments
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FirearmPickup_C_CheckAttachments final
{
public:
	struct FS_RepAttachmentInfo                   CallFunc_FindAttachmentDataByType_Output;          // 0x0000(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentDataByType_Found;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RepAttachmentInfo                   CallFunc_FindAttachmentDataByType_Output_1;        // 0x0050(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentDataByType_Found_1;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_CheckAttachments) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_CheckAttachments");
static_assert(sizeof(BP_FirearmPickup_C_CheckAttachments) == 0x0000A0, "Wrong size on BP_FirearmPickup_C_CheckAttachments");
static_assert(offsetof(BP_FirearmPickup_C_CheckAttachments, CallFunc_FindAttachmentDataByType_Output) == 0x000000, "Member 'BP_FirearmPickup_C_CheckAttachments::CallFunc_FindAttachmentDataByType_Output' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CheckAttachments, CallFunc_FindAttachmentDataByType_Found) == 0x000048, "Member 'BP_FirearmPickup_C_CheckAttachments::CallFunc_FindAttachmentDataByType_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CheckAttachments, CallFunc_DoesSocketExist_ReturnValue) == 0x000049, "Member 'BP_FirearmPickup_C_CheckAttachments::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CheckAttachments, CallFunc_FindAttachmentDataByType_Output_1) == 0x000050, "Member 'BP_FirearmPickup_C_CheckAttachments::CallFunc_FindAttachmentDataByType_Output_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CheckAttachments, CallFunc_FindAttachmentDataByType_Found_1) == 0x000098, "Member 'BP_FirearmPickup_C_CheckAttachments::CallFunc_FindAttachmentDataByType_Found_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CheckAttachments, CallFunc_DoesSocketExist_ReturnValue_1) == 0x000099, "Member 'BP_FirearmPickup_C_CheckAttachments::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Client_HitUI
// 0x0018 (0x0018 - 0x0000)
struct BP_FirearmPickup_C_Client_HitUI final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Colour;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Client_HitUI) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Client_HitUI");
static_assert(sizeof(BP_FirearmPickup_C_Client_HitUI) == 0x000018, "Wrong size on BP_FirearmPickup_C_Client_HitUI");
static_assert(offsetof(BP_FirearmPickup_C_Client_HitUI, Damage) == 0x000000, "Member 'BP_FirearmPickup_C_Client_HitUI::Damage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Client_HitUI, Colour) == 0x000008, "Member 'BP_FirearmPickup_C_Client_HitUI::Colour' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.CriticalHit
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FirearmPickup_C_CriticalHit final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewDamage;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FloatingDmgColour;                                 // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found_1;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue_1;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTechnologyUnlocked_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_CriticalHit) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_CriticalHit");
static_assert(sizeof(BP_FirearmPickup_C_CriticalHit) == 0x0000A0, "Wrong size on BP_FirearmPickup_C_CriticalHit");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, Damage) == 0x000000, "Member 'BP_FirearmPickup_C_CriticalHit::Damage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, NewDamage) == 0x000008, "Member 'BP_FirearmPickup_C_CriticalHit::NewDamage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, FloatingDmgColour) == 0x000010, "Member 'BP_FirearmPickup_C_CriticalHit::FloatingDmgColour' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_FindStat_Found) == 0x000020, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_FindStat_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_FindStat_MinValue) == 0x000024, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_FindStat_MinValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_FindStat_MaxValue) == 0x000028, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_FindStat_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_FindStat_Found_1) == 0x000030, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_FindStat_Found_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_FindStat_MinValue_1) == 0x000034, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_FindStat_MinValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_FindStat_MaxValue_1) == 0x000038, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_FindStat_MaxValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_GetSkillTreeManager_TechTree) == 0x000058, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_GetSkillTreeManager_TechTree' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_IsTechnologyUnlocked_ReturnValue) == 0x000060, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_IsTechnologyUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_RandomFloatInRange_ReturnValue) == 0x000078, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_SelectFloat_B_ImplicitCast) == 0x000090, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_CriticalHit, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'BP_FirearmPickup_C_CriticalHit::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.DamageMultiplier
// 0x0080 (0x0080 - 0x0000)
struct BP_FirearmPickup_C_DamageMultiplier final
{
public:
	bool                                          Headshot_;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Damage;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentStats_Found;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindAttachmentStats_StatValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentStats_Found_1;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindAttachmentStats_StatValue_1;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found_1;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue_1;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FirearmTypeMultiplier_Multiplier;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_DamageMultiplier) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_DamageMultiplier");
static_assert(sizeof(BP_FirearmPickup_C_DamageMultiplier) == 0x000080, "Wrong size on BP_FirearmPickup_C_DamageMultiplier");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, Headshot_) == 0x000000, "Member 'BP_FirearmPickup_C_DamageMultiplier::Headshot_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, Damage) == 0x000008, "Member 'BP_FirearmPickup_C_DamageMultiplier::Damage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindAttachmentStats_Found) == 0x000010, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindAttachmentStats_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindAttachmentStats_StatValue) == 0x000018, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindAttachmentStats_StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindAttachmentStats_Found_1) == 0x000020, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindAttachmentStats_Found_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindAttachmentStats_StatValue_1) == 0x000028, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindAttachmentStats_StatValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindStat_Found) == 0x000030, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindStat_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindStat_MinValue) == 0x000034, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindStat_MinValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindStat_MaxValue) == 0x000038, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindStat_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindStat_Found_1) == 0x000040, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindStat_Found_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindStat_MinValue_1) == 0x000044, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindStat_MinValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FindStat_MaxValue_1) == 0x000048, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FindStat_MaxValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_FirearmTypeMultiplier_Multiplier) == 0x000050, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_FirearmTypeMultiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_DamageMultiplier, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000078, "Member 'BP_FirearmPickup_C_DamageMultiplier::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.EffectiveDamage
// 0x00C8 (0x00C8 - 0x0000)
struct BP_FirearmPickup_C_EffectiveDamage final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewDamage;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceMeters;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindSpecificAttachmentStat_Found_;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindSpecificAttachmentStat_StatValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_EffectiveDamage) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_EffectiveDamage");
static_assert(sizeof(BP_FirearmPickup_C_EffectiveDamage) == 0x0000C8, "Wrong size on BP_FirearmPickup_C_EffectiveDamage");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, Damage) == 0x000000, "Member 'BP_FirearmPickup_C_EffectiveDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, NewDamage) == 0x000008, "Member 'BP_FirearmPickup_C_EffectiveDamage::NewDamage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, DistanceMeters) == 0x000010, "Member 'BP_FirearmPickup_C_EffectiveDamage::DistanceMeters' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_FindSpecificAttachmentStat_Found_) == 0x000018, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_FindSpecificAttachmentStat_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_FindSpecificAttachmentStat_StatValue) == 0x000020, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_FindSpecificAttachmentStat_StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_FindStat_Found) == 0x000030, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_FindStat_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_FindStat_MinValue) == 0x000034, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_FindStat_MinValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_FindStat_MaxValue) == 0x000038, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_FindStat_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_FClamp_ReturnValue) == 0x000078, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000080, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Concat_StrStr_ReturnValue) == 0x000090, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_EffectiveDamage, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x0000C0, "Member 'BP_FirearmPickup_C_EffectiveDamage::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.ExecuteUbergraph_BP_FirearmPickup
// 0x0820 (0x0820 - 0x0000)
struct BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGuid>                          K2Node_Event_UID;                                  // 0x0098(0x0010)(ConstParm, ReferenceParm)
	struct FGameplayTag                           K2Node_Event_NewState;                             // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PreExecuteClientSide_;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_MuzzleLocation_1;               // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_EndPointLocation_1;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_5;                     // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                        K2Node_CustomEvent_EmitterTemplate_1;              // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_AttachToComponent_1;            // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AttachPointName_1;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_MuzzleLocation;                 // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_EndPointLocation;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_4;                     // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_PlayerControllerInterface_C> K2Node_DynamicCast_AsBP_Player_Controller_Interface; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_CustomEvent_EmitterTemplate;                // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_AttachToComponent;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AttachPointName;                // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSight_Sight;                           // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSight_LongRange_;                      // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                CallFunc_GetSight_ID;                              // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0290(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found;                           // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue;                        // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue;                        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_1;        // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Started__1;                     // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Started_;                       // 0x0313(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0314(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0344(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Ingame_C*                           CallFunc_GetInGameUI_UI;                           // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DamageMultiplier_Damage;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_1;                 // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DamageMultiplier_Damage_1;                // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Ingame_C*                           CallFunc_GetInGameUI_UI_1;                         // 0x0390(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EffectiveDamage_NewDamage;                // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CriticalHit_NewDamage;                    // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CriticalHit_FloatingDmgColour;            // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Value;                                // 0x03B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EffectiveDamage_NewDamage_1;              // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CriticalHit_NewDamage_1;                  // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CriticalHit_FloatingDmgColour_1;          // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_PassiveSkills_C>  K2Node_DynamicCast_AsInt_Passive_Skills;           // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Headshot;                       // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInt_PassiveSkills_C>  K2Node_DynamicCast_AsInt_Passive_Skills_1;         // 0x0440(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue_1;                // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found_1;                         // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue_1;                      // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindStat_MaxValue_1;                      // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found_2;                         // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue_2;                      // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue_2;                      // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EffectiveDamage_NewDamage_2;              // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EffectiveDamage_NewDamage_3;              // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CriticalHit_NewDamage_2;                  // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CriticalHit_FloatingDmgColour_2;          // 0x0498(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CriticalHit_NewDamage_3;                  // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CriticalHit_FloatingDmgColour_3;          // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_NotifyName;                           // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_3;                     // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_3;                     // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Actor_3;                        // 0x0510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_2;                     // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_2;                     // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Actor_2;                        // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Damage_C>         K2Node_DynamicCast_AsBPI_Damage;                   // 0x0550(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Damage_C>         K2Node_DynamicCast_AsBPI_Damage_1;                 // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectDamageable__Damageable_;          // 0x0579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectDamageable__Damageable__1;        // 0x057A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57B[0x5];                                      // 0x057B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Damage_C>         K2Node_DynamicCast_AsBPI_Damage_2;                 // 0x0580(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_Damage_C>         K2Node_DynamicCast_AsBPI_Damage_3;                 // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_1;                     // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_2;     // 0x0638(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x0640(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_3;     // 0x0648(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0680(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Damage;                         // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Colour;                         // 0x06A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_4;     // 0x06B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x06C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DA[0x2];                                      // 0x06DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x06DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x06E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x06F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x06FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_WeaponRecoilValues_Pitch_Vertical;        // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_WeaponRecoilValues_Yaw_Horizontal;        // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_1;                       // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_2;                       // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_3;                       // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_Alpha_ImplicitCast;                  // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_Alpha_ImplicitCast_1;                // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_Alpha_ImplicitCast_2;                // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_Alpha_ImplicitCast_3;                // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast; // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast;      // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1;    // 0x07BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Client_HitUI_Damage_ImplicitCast;         // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Client_HitUI_Damage_ImplicitCast_1;       // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EffectiveDamage_Damage_ImplicitCast;      // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EffectiveDamage_Damage_ImplicitCast_1;    // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E4[0x4];                                      // 0x07E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2;   // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3;   // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TempYaw_ImplicitCast;           // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TempYaw_ImplicitCast_1;         // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TempPitch_ImplicitCast;         // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TempPitch_ImplicitCast_1;       // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup) == 0x000010, "Wrong alignment on BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup");
static_assert(sizeof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup) == 0x000820, "Wrong size on BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, EntryPoint) == 0x000000, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_int_Variable) == 0x000008, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable) == 0x000010, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_1) == 0x000018, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_2) == 0x000020, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_3) == 0x000028, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_4) == 0x000030, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_5) == 0x000038, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_6) == 0x000040, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_7) == 0x000048, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_int_Variable_1) == 0x000050, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_8) == 0x000058, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_9) == 0x000060, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_10) == 0x000068, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_11) == 0x000070, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_object_Variable_12) == 0x000078, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000080, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000081, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000082, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_IsValid_ReturnValue) == 0x000083, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_NotifyName_2) == 0x000084, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x000090, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_Event_UID) == 0x000098, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_Event_UID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_Event_NewState) == 0x0000A8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_Event_PreExecuteClientSide_) == 0x0000B0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_Event_PreExecuteClientSide_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_MuzzleLocation_1) == 0x0000B8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_MuzzleLocation_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_EndPointLocation_1) == 0x0000D0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_EndPointLocation_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Rotation_5) == 0x0000E8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_EmitterTemplate_1) == 0x000100, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_EmitterTemplate_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_AttachToComponent_1) == 0x000108, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_AttachToComponent_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_AttachPointName_1) == 0x000110, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_AttachPointName_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_MuzzleLocation) == 0x000118, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_EndPointLocation) == 0x000130, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_EndPointLocation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Rotation_4) == 0x000148, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CreateDelegate_OutputDelegate) == 0x000160, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetPlayerController_ReturnValue) == 0x000170, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBP_Player_Controller_Interface) == 0x000178, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBP_Player_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_EmitterTemplate) == 0x000190, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_EmitterTemplate' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_AttachToComponent) == 0x000198, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_AttachPointName) == 0x0001A0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0001A8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_NotifyName_3) == 0x0001B0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetSight_Sight) == 0x0001B8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetSight_Sight' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetSight_LongRange_) == 0x0001B9, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetSight_LongRange_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetSight_ID) == 0x0001C0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetSight_ID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetOwner_ReturnValue) == 0x0001C8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBP_Player_Character) == 0x0001D0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetSocketTransform_ReturnValue) == 0x0001E0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakTransform_Location) == 0x000240, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakTransform_Rotation) == 0x000258, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakTransform_Scale) == 0x000270, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000288, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000290, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_IsValid_ReturnValue_1) == 0x0002A0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_IsValid_ReturnValue_2) == 0x0002A1, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_Found) == 0x0002A2, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_MinValue) == 0x0002A4, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_MinValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_MaxValue) == 0x0002A8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002B0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SelectFloat_ReturnValue) == 0x0002B8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetOwner_ReturnValue_1) == 0x0002C0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBP_Player_Character_1) == 0x0002C8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBP_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_2) == 0x0002D0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0002D8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_IsValid_ReturnValue_3) == 0x0002E0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002E8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetOwner_ReturnValue_2) == 0x000300, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsPawn) == 0x000308, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_3) == 0x000310, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Started__1) == 0x000311, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Started__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_IsLocallyControlled_ReturnValue) == 0x000312, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Started_) == 0x000313, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Started_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_NotifyName_4) == 0x000314, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_RandomFloatInRange_ReturnValue) == 0x000320, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetOwner_ReturnValue_3) == 0x000328, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBPI_Player) == 0x000330, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_4) == 0x000340, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000344, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetInGameUI_UI) == 0x000358, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetInGameUI_UI' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetOwner_ReturnValue_4) == 0x000360, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_DamageMultiplier_Damage) == 0x000368, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_DamageMultiplier_Damage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBPI_Player_1) == 0x000370, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBPI_Player_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_5) == 0x000380, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_DamageMultiplier_Damage_1) == 0x000388, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_DamageMultiplier_Damage_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetInGameUI_UI_1) == 0x000390, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetInGameUI_UI_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_EffectiveDamage_NewDamage) == 0x000398, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_EffectiveDamage_NewDamage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CriticalHit_NewDamage) == 0x0003A0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CriticalHit_NewDamage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CriticalHit_FloatingDmgColour) == 0x0003A8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CriticalHit_FloatingDmgColour' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_Event_Value) == 0x0003B8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetBoolCVar_ReturnValue) == 0x0003C0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetOwner_ReturnValue_5) == 0x0003C8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SelectFloat_ReturnValue_1) == 0x0003D0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetOwner_ReturnValue_6) == 0x0003D8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003E0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0003E8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_EffectiveDamage_NewDamage_1) == 0x0003F0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_EffectiveDamage_NewDamage_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CriticalHit_NewDamage_1) == 0x0003F8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CriticalHit_NewDamage_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CriticalHit_FloatingDmgColour_1) == 0x000400, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CriticalHit_FloatingDmgColour_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsInt_Passive_Skills) == 0x000410, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsInt_Passive_Skills' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_6) == 0x000420, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000428, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Headshot) == 0x000430, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Headshot' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_DamagedActor) == 0x000438, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsInt_Passive_Skills_1) == 0x000440, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsInt_Passive_Skills_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_7) == 0x000450, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_ApplyDamage_ReturnValue) == 0x000454, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_ApplyDamage_ReturnValue_1) == 0x000458, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_ApplyDamage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_Found_1) == 0x00045C, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_Found_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_MinValue_1) == 0x000460, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_MinValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_MaxValue_1) == 0x000468, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_MaxValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_Found_2) == 0x000470, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_Found_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_MinValue_2) == 0x000474, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_MinValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_FindStat_MaxValue_2) == 0x000478, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_FindStat_MaxValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_EffectiveDamage_NewDamage_2) == 0x000480, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_EffectiveDamage_NewDamage_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_EffectiveDamage_NewDamage_3) == 0x000488, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_EffectiveDamage_NewDamage_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CriticalHit_NewDamage_2) == 0x000490, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CriticalHit_NewDamage_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CriticalHit_FloatingDmgColour_2) == 0x000498, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CriticalHit_FloatingDmgColour_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CriticalHit_NewDamage_3) == 0x0004A8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CriticalHit_NewDamage_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CriticalHit_FloatingDmgColour_3) == 0x0004B0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CriticalHit_FloatingDmgColour_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0004C0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_Event_NotifyName) == 0x0004C8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_Event_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0004D0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0004D8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Location_3) == 0x0004E0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Location_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Rotation_3) == 0x0004F8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Actor_3) == 0x000510, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Actor_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Location_2) == 0x000518, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Location_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Rotation_2) == 0x000530, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Actor_2) == 0x000548, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBPI_Damage) == 0x000550, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBPI_Damage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_8) == 0x000560, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBPI_Damage_1) == 0x000568, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBPI_Damage_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_9) == 0x000578, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_IsObjectDamageable__Damageable_) == 0x000579, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_IsObjectDamageable__Damageable_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_IsObjectDamageable__Damageable__1) == 0x00057A, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_IsObjectDamageable__Damageable__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBPI_Damage_2) == 0x000580, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBPI_Damage_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_10) == 0x000590, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakRotator_Roll) == 0x000594, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakRotator_Pitch) == 0x000598, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakRotator_Yaw) == 0x00059C, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_MakeRotator_ReturnValue) == 0x0005A0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_AsBPI_Damage_3) == 0x0005B8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_AsBPI_Damage_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_DynamicCast_bSuccess_11) == 0x0005C8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x0005D0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakRotator_Roll_1) == 0x0005D8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakRotator_Pitch_1) == 0x0005DC, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_BreakRotator_Yaw_1) == 0x0005E0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Location_1) == 0x0005E8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Rotation_1) == 0x000600, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Actor_1) == 0x000618, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_MakeRotator_ReturnValue_1) == 0x000620, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SpawnEmitterAtLocation_ReturnValue_2) == 0x000638, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SpawnEmitterAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x000640, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SpawnEmitterAtLocation_ReturnValue_3) == 0x000648, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SpawnEmitterAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000650, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000654, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_Select_Default) == 0x000658, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_Select_Default_1) == 0x000660, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Location) == 0x000668, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Rotation) == 0x000680, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Actor) == 0x000698, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Damage) == 0x0006A0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_Colour) == 0x0006A8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_Colour' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_SpawnEmitterAtLocation_ReturnValue_4) == 0x0006B8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_SpawnEmitterAtLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CreateDelegate_OutputDelegate_3) == 0x0006C0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, Temp_name_Variable) == 0x0006D0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_IsPlaying_ReturnValue) == 0x0006D8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Not_PreBool_ReturnValue) == 0x0006D9, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_NotifyName) == 0x0006DC, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CreateDelegate_OutputDelegate_4) == 0x0006E4, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CustomEvent_NotifyName_1) == 0x0006F4, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_CreateDelegate_OutputDelegate_5) == 0x0006FC, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_WeaponRecoilValues_Pitch_Vertical) == 0x000710, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_WeaponRecoilValues_Pitch_Vertical' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_WeaponRecoilValues_Yaw_Horizontal) == 0x000718, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_WeaponRecoilValues_Yaw_Horizontal' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Ease_ReturnValue) == 0x000720, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000728, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000730, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Ease_ReturnValue_1) == 0x000738, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000740, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000748, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Ease_ReturnValue_2) == 0x000750, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Ease_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000758, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000760, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Ease_ReturnValue_3) == 0x000768, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Ease_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000770, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000778, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Ease_Alpha_ImplicitCast) == 0x000780, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Ease_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Ease_Alpha_ImplicitCast_1) == 0x000788, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Ease_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Ease_Alpha_ImplicitCast_2) == 0x000790, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Ease_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Ease_Alpha_ImplicitCast_3) == 0x000798, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Ease_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Delay_Duration_ImplicitCast) == 0x0007A0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast) == 0x0007A4, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_CreateProxyObjectForPlayMontage_PlayRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0007A8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0007B0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0007B4, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_ApplyDamage_BaseDamage_ImplicitCast) == 0x0007B8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_ApplyDamage_BaseDamage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1) == 0x0007BC, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_ApplyDamage_BaseDamage_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Client_HitUI_Damage_ImplicitCast) == 0x0007C0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Client_HitUI_Damage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Client_HitUI_Damage_ImplicitCast_1) == 0x0007C8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Client_HitUI_Damage_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_EffectiveDamage_Damage_ImplicitCast) == 0x0007D0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_EffectiveDamage_Damage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_EffectiveDamage_Damage_ImplicitCast_1) == 0x0007D8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_EffectiveDamage_Damage_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x0007E0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0007E8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x0007F0, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2) == 0x0007F8, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3) == 0x000800, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_VariableSet_TempYaw_ImplicitCast) == 0x000808, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_VariableSet_TempYaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_VariableSet_TempYaw_ImplicitCast_1) == 0x00080C, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_VariableSet_TempYaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_VariableSet_TempPitch_ImplicitCast) == 0x000810, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_VariableSet_TempPitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup, K2Node_VariableSet_TempPitch_ImplicitCast_1) == 0x000814, "Member 'BP_FirearmPickup_C_ExecuteUbergraph_BP_FirearmPickup::K2Node_VariableSet_TempPitch_ImplicitCast_1' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.FindAttachmentStats
// 0x0060 (0x0060 - 0x0000)
struct BP_FirearmPickup_C_FindAttachmentStats final
{
public:
	struct FGameplayTag                           Stat;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StatValue;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StatFound;                                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StatsValue;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_FindAttachmentStats) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_FindAttachmentStats");
static_assert(sizeof(BP_FirearmPickup_C_FindAttachmentStats) == 0x000060, "Wrong size on BP_FirearmPickup_C_FindAttachmentStats");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, Stat) == 0x000000, "Member 'BP_FirearmPickup_C_FindAttachmentStats::Stat' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, Found) == 0x000008, "Member 'BP_FirearmPickup_C_FindAttachmentStats::Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, StatValue) == 0x000010, "Member 'BP_FirearmPickup_C_FindAttachmentStats::StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, StatFound) == 0x000018, "Member 'BP_FirearmPickup_C_FindAttachmentStats::StatFound' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, StatsValue) == 0x000020, "Member 'BP_FirearmPickup_C_FindAttachmentStats::StatsValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, Temp_int_Variable) == 0x000028, "Member 'BP_FirearmPickup_C_FindAttachmentStats::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, Temp_bool_Variable) == 0x000030, "Member 'BP_FirearmPickup_C_FindAttachmentStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, Temp_bool_Variable_1) == 0x000032, "Member 'BP_FirearmPickup_C_FindAttachmentStats::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, Temp_int_Variable_1) == 0x000034, "Member 'BP_FirearmPickup_C_FindAttachmentStats::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003C, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000048, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_BooleanAND_ReturnValue_1) == 0x000059, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindAttachmentStats, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00005A, "Member 'BP_FirearmPickup_C_FindAttachmentStats::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.FindSpecificAttachmentStat
// 0x0050 (0x0050 - 0x0000)
struct BP_FirearmPickup_C_FindSpecificAttachmentStat final
{
public:
	struct FGameplayTag                           Attachment;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Stat;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Found_;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StatValue;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_FindSpecificAttachmentStat) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_FindSpecificAttachmentStat");
static_assert(sizeof(BP_FirearmPickup_C_FindSpecificAttachmentStat) == 0x000050, "Wrong size on BP_FirearmPickup_C_FindSpecificAttachmentStat");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, Attachment) == 0x000000, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::Attachment' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, Stat) == 0x000008, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::Stat' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, Found_) == 0x000010, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, StatValue) == 0x000018, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, Temp_bool_Variable) == 0x000020, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, Temp_int_Variable) == 0x000024, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, Temp_int_Variable_1) == 0x000030, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, Temp_bool_Variable_1) == 0x000034, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_Not_PreBool_ReturnValue_1) == 0x000035, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_Array_LastIndex_ReturnValue) == 0x00003C, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000044, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_BooleanAND_ReturnValue_1) == 0x000049, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00004A, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindSpecificAttachmentStat, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x00004B, "Member 'BP_FirearmPickup_C_FindSpecificAttachmentStat::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.FindStat
// 0x00E0 (0x00E0 - 0x0000)
struct BP_FirearmPickup_C_FindStat final
{
public:
	struct FGameplayTag                           StatTag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinValue;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxValue;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetJSIContainerByPlayerSlots_Container;   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetJSIContainerByPlayerSlots_EquippedItem; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJSIContainerByPlayerSlots_IsPending_;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStatByName_Found;                      // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemStat                            CallFunc_GetStatByName_Stat;                       // 0x00B0(0x0028)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_MinValue_ImplicitCast;       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_FindStat) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_FindStat");
static_assert(sizeof(BP_FirearmPickup_C_FindStat) == 0x0000E0, "Wrong size on BP_FirearmPickup_C_FindStat");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, StatTag) == 0x000000, "Member 'BP_FirearmPickup_C_FindStat::StatTag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, Found) == 0x000008, "Member 'BP_FirearmPickup_C_FindStat::Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, MinValue) == 0x00000C, "Member 'BP_FirearmPickup_C_FindStat::MinValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, MaxValue) == 0x000010, "Member 'BP_FirearmPickup_C_FindStat::MaxValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_GetTagName_ReturnValue) == 0x000018, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000060, "Member 'BP_FirearmPickup_C_FindStat::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_FirearmPickup_C_FindStat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget) == 0x000078, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000080, "Member 'BP_FirearmPickup_C_FindStat::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_FirearmPickup_C_FindStat::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_GetJSIContainerByPlayerSlots_Container) == 0x000098, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_GetJSIContainerByPlayerSlots_Container' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_GetJSIContainerByPlayerSlots_EquippedItem) == 0x0000A0, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_GetJSIContainerByPlayerSlots_EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_GetJSIContainerByPlayerSlots_IsPending_) == 0x0000A8, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_GetJSIContainerByPlayerSlots_IsPending_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_GetStatByName_Found) == 0x0000AA, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_GetStatByName_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, CallFunc_GetStatByName_Stat) == 0x0000B0, "Member 'BP_FirearmPickup_C_FindStat::CallFunc_GetStatByName_Stat' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FindStat, K2Node_FunctionResult_MinValue_ImplicitCast) == 0x0000D8, "Member 'BP_FirearmPickup_C_FindStat::K2Node_FunctionResult_MinValue_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.FirearmTypeMultiplier
// 0x00B8 (0x00B8 - 0x0000)
struct BP_FirearmPickup_C_FirearmTypeMultiplier final
{
public:
	bool                                          Headshot_;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Multiplier;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_FirearmTypeMultiplier) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_FirearmTypeMultiplier");
static_assert(sizeof(BP_FirearmPickup_C_FirearmTypeMultiplier) == 0x0000B8, "Wrong size on BP_FirearmPickup_C_FirearmTypeMultiplier");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Headshot_) == 0x000000, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Headshot_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Multiplier) == 0x000008, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_bool_Variable) == 0x000010, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable) == 0x000018, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_1) == 0x000020, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_bool_Variable_1) == 0x000028, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_2) == 0x000030, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_3) == 0x000038, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_bool_Variable_2) == 0x000040, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_4) == 0x000048, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_5) == 0x000050, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_bool_Variable_3) == 0x000058, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_6) == 0x000060, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_7) == 0x000068, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_bool_Variable_4) == 0x000070, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_8) == 0x000078, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, Temp_real_Variable_9) == 0x000080, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, K2Node_Select_Default) == 0x000088, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, K2Node_Select_Default_1) == 0x000098, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, K2Node_Select_Default_2) == 0x0000A0, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, K2Node_Select_Default_3) == 0x0000A8, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FirearmTypeMultiplier, K2Node_Select_Default_4) == 0x0000B0, "Member 'BP_FirearmPickup_C_FirearmTypeMultiplier::K2Node_Select_Default_4' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.FireBullet
// 0x0170 (0x0170 - 0x0000)
struct BP_FirearmPickup_C_FireBullet final
{
public:
	class FName                                   Bullet_ID;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentStats_Found;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindAttachmentStats_StatValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReduceDurability_Reduced_;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found;                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUseBullet_Return;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_TryUseBullet_UID;                         // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_TryUseBullet_ItemUsed;                    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemID_ItemID;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ProjectileTraceFromCamera_Transform;      // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerCharacter_C*                  CallFunc_GetPlayerRef_Player;                      // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileMaster_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChamberWeapon_Result;                     // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ChamberWeapon_BulletID;                   // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallServerConsumeRequest_Result;  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_FireBullet) == 0x000010, "Wrong alignment on BP_FirearmPickup_C_FireBullet");
static_assert(sizeof(BP_FirearmPickup_C_FireBullet) == 0x000170, "Wrong size on BP_FirearmPickup_C_FireBullet");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, Bullet_ID) == 0x000000, "Member 'BP_FirearmPickup_C_FireBullet::Bullet_ID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_FindAttachmentStats_Found) == 0x000008, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_FindAttachmentStats_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_FindAttachmentStats_StatValue) == 0x000010, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_FindAttachmentStats_StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_ReduceDurability_Reduced_) == 0x000040, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_ReduceDurability_Reduced_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_FindStat_Found) == 0x000041, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_FindStat_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_FindStat_MinValue) == 0x000044, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_FindStat_MinValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_FindStat_MaxValue) == 0x000048, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_FindStat_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_MakeLiteralString_ReturnValue) == 0x000050, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_TryUseBullet_Return) == 0x000061, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_TryUseBullet_Return' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_TryUseBullet_UID) == 0x000064, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_TryUseBullet_UID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_TryUseBullet_ItemUsed) == 0x000078, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_TryUseBullet_ItemUsed' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_GetItemID_ItemID) == 0x000080, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_GetItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_SelectFloat_ReturnValue_1) == 0x000088, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_ProjectileTraceFromCamera_Transform) == 0x000090, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_ProjectileTraceFromCamera_Transform' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F0, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_GetOwner_ReturnValue) == 0x0000F8, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, K2Node_DynamicCast_AsBPI_Player) == 0x000100, "Member 'BP_FirearmPickup_C_FireBullet::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_FirearmPickup_C_FireBullet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_GetPlayerRef_Player) == 0x000118, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_GetPlayerRef_Player' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_GetEquippedItemRef_Found_) == 0x000128, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_GetEquippedItemRef_ItemRef) == 0x000130, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_GetEquippedItemRef_IsPending) == 0x000138, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_IsValid_ReturnValue_1) == 0x000139, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_ChamberWeapon_Result) == 0x00013A, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_ChamberWeapon_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_ChamberWeapon_BulletID) == 0x00013C, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_ChamberWeapon_BulletID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000148, "Member 'BP_FirearmPickup_C_FireBullet::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'BP_FirearmPickup_C_FireBullet::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_JigComp_CallServerConsumeRequest_Result) == 0x000159, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_JigComp_CallServerConsumeRequest_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireBullet, CallFunc_SetDoublePropertyByName_Value_ImplicitCast) == 0x000160, "Member 'BP_FirearmPickup_C_FireBullet::CallFunc_SetDoublePropertyByName_Value_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.FireSurfaceHit
// 0x0040 (0x0040 - 0x0000)
struct BP_FirearmPickup_C_FireSurfaceHit final
{
public:
	struct FVector                                ImpactPoint;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              Surface;                                           // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_FireSurfaceHit) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_FireSurfaceHit");
static_assert(sizeof(BP_FirearmPickup_C_FireSurfaceHit) == 0x000040, "Wrong size on BP_FirearmPickup_C_FireSurfaceHit");
static_assert(offsetof(BP_FirearmPickup_C_FireSurfaceHit, ImpactPoint) == 0x000000, "Member 'BP_FirearmPickup_C_FireSurfaceHit::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireSurfaceHit, HitActor) == 0x000018, "Member 'BP_FirearmPickup_C_FireSurfaceHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireSurfaceHit, Rotation) == 0x000020, "Member 'BP_FirearmPickup_C_FireSurfaceHit::Rotation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireSurfaceHit, Surface) == 0x000038, "Member 'BP_FirearmPickup_C_FireSurfaceHit::Surface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireSurfaceHit, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BP_FirearmPickup_C_FireSurfaceHit::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.FireTrace
// 0x0A20 (0x0A20 - 0x0000)
struct BP_FirearmPickup_C_FireTrace final
{
public:
	double                                        Spread;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPrediction;                                  // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0220(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0238(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0328(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x2];                                      // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0418(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit_1;               // 0x0430(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue_1;          // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_519[0x7];                                      // 0x0519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_3;                          // 0x0520(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_532[0x2];                                      // 0x0532(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x05B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit_2;               // 0x0620(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue_2;          // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit_3;               // 0x0710(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue_3;          // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x07FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FB[0x1];                                      // 0x07FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0808(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0820(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0878(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0894(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x08A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x08B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D2[0x2];                                      // 0x08D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DC[0x4];                                      // 0x08DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x0940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x0948(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x0950(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_974[0x4];                                      // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0990(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_AIInterface_C>     K2Node_DynamicCast_AsBP_AIInterface;               // 0x09A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B9[0x7];                                      // 0x09B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_AIInterface_C>     K2Node_DynamicCast_AsBP_AIInterface_1;             // 0x09C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AI_Is_Dead__Dead;                         // 0x09D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AI_Is_Dead__Dead_1;                       // 0x09D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D3[0x5];                                      // 0x09D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x09F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomUnitVectorInConeInDegrees_ConeHalfAngleInDegrees_ImplicitCast; // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_FireTrace) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_FireTrace");
static_assert(sizeof(BP_FirearmPickup_C_FireTrace) == 0x000A20, "Wrong size on BP_FirearmPickup_C_FireTrace");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, Spread) == 0x000000, "Member 'BP_FirearmPickup_C_FireTrace::Spread' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, ImpactPrediction) == 0x000008, "Member 'BP_FirearmPickup_C_FireTrace::ImpactPrediction' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetSocketLocation_ReturnValue) == 0x000038, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000070, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_RandomFloatInRange_ReturnValue) == 0x000088, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000090, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x0000A8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000B8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000D0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x0000F8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000110, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000128, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000140, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000148, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000160, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000178, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000190, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, Temp_int_Variable) == 0x0001A8, "Member 'BP_FirearmPickup_C_FireTrace::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001B0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakVector_X) == 0x0001C8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakVector_Y) == 0x0001D0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakVector_Z) == 0x0001D8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001E0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001F0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Add_IntInt_ReturnValue) == 0x0001F8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_MakeVector_ReturnValue) == 0x000200, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetOwner_ReturnValue) == 0x000218, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, K2Node_MakeArray_Array) == 0x000220, "Member 'BP_FirearmPickup_C_FireTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetOwner_ReturnValue_1) == 0x000230, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_SphereTraceSingle_OutHit) == 0x000238, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_SphereTraceSingle_ReturnValue) == 0x000320, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, K2Node_MakeArray_Array_1) == 0x000328, "Member 'BP_FirearmPickup_C_FireTrace::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000338, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000339, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Time) == 0x00033C, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Distance) == 0x000340, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Location) == 0x000348, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000360, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Normal) == 0x000378, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000390, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_PhysMat) == 0x0003A8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitActor) == 0x0003B0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitComponent) == 0x0003B8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitBoneName) == 0x0003C0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_BoneName) == 0x0003C8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitItem) == 0x0003D0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ElementIndex) == 0x0003D4, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0003D8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_TraceStart) == 0x0003E0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0003F8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetOwner_ReturnValue_2) == 0x000410, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, K2Node_MakeArray_Array_2) == 0x000418, "Member 'BP_FirearmPickup_C_FireTrace::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetOwner_ReturnValue_3) == 0x000428, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_SphereTraceSingle_OutHit_1) == 0x000430, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_SphereTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_SphereTraceSingle_ReturnValue_1) == 0x000518, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_SphereTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, K2Node_MakeArray_Array_3) == 0x000520, "Member 'BP_FirearmPickup_C_FireTrace::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000530, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000531, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Time_1) == 0x000534, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Distance_1) == 0x000538, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Location_1) == 0x000540, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000558, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Normal_1) == 0x000570, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000588, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_PhysMat_1) == 0x0005A0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitActor_1) == 0x0005A8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitComponent_1) == 0x0005B0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitBoneName_1) == 0x0005B8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_BoneName_1) == 0x0005C0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitItem_1) == 0x0005C8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ElementIndex_1) == 0x0005CC, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_FaceIndex_1) == 0x0005D0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_TraceStart_1) == 0x0005D8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_TraceEnd_1) == 0x0005F0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000608, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_SphereTraceSingle_OutHit_2) == 0x000620, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_SphereTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_SphereTraceSingle_ReturnValue_2) == 0x000708, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_SphereTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_SphereTraceSingle_OutHit_3) == 0x000710, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_SphereTraceSingle_OutHit_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_SphereTraceSingle_ReturnValue_3) == 0x0007F8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_SphereTraceSingle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_bBlockingHit_2) == 0x0007F9, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x0007FA, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Time_2) == 0x0007FC, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Distance_2) == 0x000800, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Location_2) == 0x000808, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000820, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Normal_2) == 0x000838, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000850, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_PhysMat_2) == 0x000868, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitActor_2) == 0x000870, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitComponent_2) == 0x000878, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitBoneName_2) == 0x000880, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_BoneName_2) == 0x000888, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitItem_2) == 0x000890, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ElementIndex_2) == 0x000894, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_FaceIndex_2) == 0x000898, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_TraceStart_2) == 0x0008A0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_TraceEnd_2) == 0x0008B8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_bBlockingHit_3) == 0x0008D0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x0008D1, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Time_3) == 0x0008D4, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Distance_3) == 0x0008D8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Location_3) == 0x0008E0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ImpactPoint_3) == 0x0008F8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_Normal_3) == 0x000910, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ImpactNormal_3) == 0x000928, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_PhysMat_3) == 0x000940, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitActor_3) == 0x000948, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitComponent_3) == 0x000950, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitBoneName_3) == 0x000958, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_BoneName_3) == 0x000960, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_HitItem_3) == 0x000968, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_ElementIndex_3) == 0x00096C, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_FaceIndex_3) == 0x000970, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_TraceStart_3) == 0x000978, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_BreakHitResult_TraceEnd_3) == 0x000990, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, K2Node_DynamicCast_AsBP_AIInterface) == 0x0009A8, "Member 'BP_FirearmPickup_C_FireTrace::K2Node_DynamicCast_AsBP_AIInterface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, K2Node_DynamicCast_bSuccess) == 0x0009B8, "Member 'BP_FirearmPickup_C_FireTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, K2Node_DynamicCast_AsBP_AIInterface_1) == 0x0009C0, "Member 'BP_FirearmPickup_C_FireTrace::K2Node_DynamicCast_AsBP_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, K2Node_DynamicCast_bSuccess_1) == 0x0009D0, "Member 'BP_FirearmPickup_C_FireTrace::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_AI_Is_Dead__Dead) == 0x0009D1, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_AI_Is_Dead__Dead' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_AI_Is_Dead__Dead_1) == 0x0009D2, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_AI_Is_Dead__Dead_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_MakeRotFromX_ReturnValue) == 0x0009D8, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_MakeRotFromX_ReturnValue_1) == 0x0009F0, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000A08, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000A10, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_FireTrace, CallFunc_RandomUnitVectorInConeInDegrees_ConeHalfAngleInDegrees_ImplicitCast) == 0x000A18, "Member 'BP_FirearmPickup_C_FireTrace::CallFunc_RandomUnitVectorInConeInDegrees_ConeHalfAngleInDegrees_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.GetHorizontalRecoilStrength
// 0x0038 (0x0038 - 0x0000)
struct BP_FirearmPickup_C_GetHorizontalRecoilStrength final
{
public:
	double                                        Strength;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentStats_Found;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindAttachmentStats_StatValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_GetHorizontalRecoilStrength) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_GetHorizontalRecoilStrength");
static_assert(sizeof(BP_FirearmPickup_C_GetHorizontalRecoilStrength) == 0x000038, "Wrong size on BP_FirearmPickup_C_GetHorizontalRecoilStrength");
static_assert(offsetof(BP_FirearmPickup_C_GetHorizontalRecoilStrength, Strength) == 0x000000, "Member 'BP_FirearmPickup_C_GetHorizontalRecoilStrength::Strength' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetHorizontalRecoilStrength, CallFunc_FindAttachmentStats_Found) == 0x000008, "Member 'BP_FirearmPickup_C_GetHorizontalRecoilStrength::CallFunc_FindAttachmentStats_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetHorizontalRecoilStrength, CallFunc_FindAttachmentStats_StatValue) == 0x000010, "Member 'BP_FirearmPickup_C_GetHorizontalRecoilStrength::CallFunc_FindAttachmentStats_StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetHorizontalRecoilStrength, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_FirearmPickup_C_GetHorizontalRecoilStrength::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetHorizontalRecoilStrength, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_FirearmPickup_C_GetHorizontalRecoilStrength::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetHorizontalRecoilStrength, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_GetHorizontalRecoilStrength::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetHorizontalRecoilStrength, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_FirearmPickup_C_GetHorizontalRecoilStrength::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.GetNewMagInfo
// 0x0050 (0x0050 - 0x0000)
struct BP_FirearmPickup_C_GetNewMagInfo final
{
public:
	class UJSI_Slot_C*                            NewMag;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Multiplier;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ItemStat>                    CallFunc_GetStats_ItemStats;                       // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_GetNewMagInfo) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_GetNewMagInfo");
static_assert(sizeof(BP_FirearmPickup_C_GetNewMagInfo) == 0x000050, "Wrong size on BP_FirearmPickup_C_GetNewMagInfo");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, NewMag) == 0x000000, "Member 'BP_FirearmPickup_C_GetNewMagInfo::NewMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, Multiplier) == 0x000008, "Member 'BP_FirearmPickup_C_GetNewMagInfo::Multiplier' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, Temp_bool_Variable) == 0x000010, "Member 'BP_FirearmPickup_C_GetNewMagInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_GetStats_ItemStats) == 0x000018, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_GetStats_ItemStats' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, Temp_int_Variable) == 0x000030, "Member 'BP_FirearmPickup_C_GetNewMagInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000048, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000049, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetNewMagInfo, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'BP_FirearmPickup_C_GetNewMagInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.GetVerticalRecoilStrength
// 0x0038 (0x0038 - 0x0000)
struct BP_FirearmPickup_C_GetVerticalRecoilStrength final
{
public:
	double                                        Strength;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentStats_Found;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindAttachmentStats_StatValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_GetVerticalRecoilStrength) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_GetVerticalRecoilStrength");
static_assert(sizeof(BP_FirearmPickup_C_GetVerticalRecoilStrength) == 0x000038, "Wrong size on BP_FirearmPickup_C_GetVerticalRecoilStrength");
static_assert(offsetof(BP_FirearmPickup_C_GetVerticalRecoilStrength, Strength) == 0x000000, "Member 'BP_FirearmPickup_C_GetVerticalRecoilStrength::Strength' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetVerticalRecoilStrength, CallFunc_FindAttachmentStats_Found) == 0x000008, "Member 'BP_FirearmPickup_C_GetVerticalRecoilStrength::CallFunc_FindAttachmentStats_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetVerticalRecoilStrength, CallFunc_FindAttachmentStats_StatValue) == 0x000010, "Member 'BP_FirearmPickup_C_GetVerticalRecoilStrength::CallFunc_FindAttachmentStats_StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetVerticalRecoilStrength, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_FirearmPickup_C_GetVerticalRecoilStrength::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetVerticalRecoilStrength, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_FirearmPickup_C_GetVerticalRecoilStrength::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetVerticalRecoilStrength, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_GetVerticalRecoilStrength::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_GetVerticalRecoilStrength, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_FirearmPickup_C_GetVerticalRecoilStrength::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_AttachmentInstalled
// 0x0030 (0x0030 - 0x0000)
struct BP_FirearmPickup_C_Jig_AttachmentInstalled final
{
public:
	struct FGuid                                  MainUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_RepAttachmentInfo>           Attachments;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           AttachmentType;                                    // 0x0024(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_AttachmentInstalled) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_AttachmentInstalled");
static_assert(sizeof(BP_FirearmPickup_C_Jig_AttachmentInstalled) == 0x000030, "Wrong size on BP_FirearmPickup_C_Jig_AttachmentInstalled");
static_assert(offsetof(BP_FirearmPickup_C_Jig_AttachmentInstalled, MainUID) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_AttachmentInstalled::MainUID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_AttachmentInstalled, Attachments) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_AttachmentInstalled::Attachments' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_AttachmentInstalled, Result) == 0x000020, "Member 'BP_FirearmPickup_C_Jig_AttachmentInstalled::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_AttachmentInstalled, AttachmentType) == 0x000024, "Member 'BP_FirearmPickup_C_Jig_AttachmentInstalled::AttachmentType' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_AttachmentRemoved
// 0x0020 (0x0020 - 0x0000)
struct BP_FirearmPickup_C_Jig_AttachmentRemoved final
{
public:
	TArray<struct FS_RepAttachmentInfo>           Attachments;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           AttachmentType;                                    // 0x0014(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_AttachmentRemoved) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_AttachmentRemoved");
static_assert(sizeof(BP_FirearmPickup_C_Jig_AttachmentRemoved) == 0x000020, "Wrong size on BP_FirearmPickup_C_Jig_AttachmentRemoved");
static_assert(offsetof(BP_FirearmPickup_C_Jig_AttachmentRemoved, Attachments) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_AttachmentRemoved::Attachments' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_AttachmentRemoved, Result) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_AttachmentRemoved::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_AttachmentRemoved, AttachmentType) == 0x000014, "Member 'BP_FirearmPickup_C_Jig_AttachmentRemoved::AttachmentType' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_CanChamberWeapon
// 0x00F0 (0x00F0 - 0x0000)
struct BP_FirearmPickup_C_Jig_CanChamberWeapon final
{
public:
	class UActorComponent*                        MPComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerSlots;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetJSIContainerByPlayerSlots_Container;   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetJSIContainerByPlayerSlots_EquippedItem; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJSIContainerByPlayerSlots_IsPending_;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer; // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerCapacity_Cap;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerCapacity_MaxCapacity;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer_1; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex_1; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_CanChamberWeapon) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_CanChamberWeapon");
static_assert(sizeof(BP_FirearmPickup_C_Jig_CanChamberWeapon) == 0x0000F0, "Wrong size on BP_FirearmPickup_C_Jig_CanChamberWeapon");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, MPComp) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::MPComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, PlayerSlots) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::PlayerSlots' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, Result) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget) == 0x000030, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000038, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetJSIContainerByPlayerSlots_Container) == 0x000050, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetJSIContainerByPlayerSlots_Container' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetJSIContainerByPlayerSlots_EquippedItem) == 0x000058, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetJSIContainerByPlayerSlots_EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetJSIContainerByPlayerSlots_IsPending_) == 0x000060, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetJSIContainerByPlayerSlots_IsPending_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetContainerOneRef_ContainerRef) == 0x000068, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000078, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetContainerByAttachmentType_JigContainer) == 0x000090, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetContainerByAttachmentType_JigContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetContainerByAttachmentType_ContainerIndex) == 0x000098, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetContainerByAttachmentType_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_IsValid_ReturnValue_1) == 0x00009C, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetEquippedItemRef_Found_) == 0x00009D, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000A0, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetEquippedItemRef_IsPending) == 0x0000A8, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetContainerCapacity_Cap) == 0x0000AC, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetContainerCapacity_Cap' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetContainerCapacity_MaxCapacity) == 0x0000B0, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetContainerCapacity_MaxCapacity' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x0000B8, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetContainerByAttachmentType_JigContainer_1) == 0x0000D0, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetContainerByAttachmentType_JigContainer_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetContainerByAttachmentType_ContainerIndex_1) == 0x0000D8, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetContainerByAttachmentType_ContainerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetEquippedItemRef_Found__1) == 0x0000DC, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x0000E0, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_GetEquippedItemRef_IsPending_1) == 0x0000E8, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E9, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CanChamberWeapon, CallFunc_IsValid_ReturnValue_2) == 0x0000EA, "Member 'BP_FirearmPickup_C_Jig_CanChamberWeapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_CheckCanReload
// 0x0060 (0x0060 - 0x0000)
struct BP_FirearmPickup_C_Jig_CheckCanReload final
{
public:
	class UActorComponent*                        MPComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerSlots;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        ContainerMag;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ReloadMontage;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasInternalMag;                                    // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanChamber_;                                       // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            ReloadWith;                                        // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           LoopReloadAnim;                                    // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Local_CheckCanReload_Result;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Local_CheckCanReload_ContainerMag;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Local_CheckCanReload_CanChamber_;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Local_CheckCanReload_ReloadWith;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_CheckCanReload) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_CheckCanReload");
static_assert(sizeof(BP_FirearmPickup_C_Jig_CheckCanReload) == 0x000060, "Wrong size on BP_FirearmPickup_C_Jig_CheckCanReload");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, MPComp) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::MPComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, PlayerSlots) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::PlayerSlots' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, Result) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, ContainerMag) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::ContainerMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, ReloadMontage) == 0x000020, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::ReloadMontage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, HasInternalMag) == 0x000028, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::HasInternalMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, CanChamber_) == 0x000029, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::CanChamber_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, ReloadWith) == 0x000030, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::ReloadWith' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, LoopReloadAnim) == 0x000038, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::LoopReloadAnim' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, CallFunc_Local_CheckCanReload_Result) == 0x000040, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::CallFunc_Local_CheckCanReload_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, CallFunc_Local_CheckCanReload_ContainerMag) == 0x000048, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::CallFunc_Local_CheckCanReload_ContainerMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, CallFunc_Local_CheckCanReload_CanChamber_) == 0x000050, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::CallFunc_Local_CheckCanReload_CanChamber_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_CheckCanReload, CallFunc_Local_CheckCanReload_ReloadWith) == 0x000058, "Member 'BP_FirearmPickup_C_Jig_CheckCanReload::CallFunc_Local_CheckCanReload_ReloadWith' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_ExecuteChamberWeapon
// 0x0038 (0x0038 - 0x0000)
struct BP_FirearmPickup_C_Jig_ExecuteChamberWeapon final
{
public:
	class UActorComponent*                        MPComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerSlots;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ChamberMontage;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChamberWeapon_Result;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ChamberWeapon_BulletID;                   // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_ExecuteChamberWeapon");
static_assert(sizeof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon) == 0x000038, "Wrong size on BP_FirearmPickup_C_Jig_ExecuteChamberWeapon");
static_assert(offsetof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon, MPComp) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_ExecuteChamberWeapon::MPComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon, PlayerSlots) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_ExecuteChamberWeapon::PlayerSlots' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon, Result) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_ExecuteChamberWeapon::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon, ChamberMontage) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_ExecuteChamberWeapon::ChamberMontage' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon, Speed) == 0x000020, "Member 'BP_FirearmPickup_C_Jig_ExecuteChamberWeapon::Speed' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon, CallFunc_ChamberWeapon_Result) == 0x000028, "Member 'BP_FirearmPickup_C_Jig_ExecuteChamberWeapon::CallFunc_ChamberWeapon_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_ExecuteChamberWeapon, CallFunc_ChamberWeapon_BulletID) == 0x00002C, "Member 'BP_FirearmPickup_C_Jig_ExecuteChamberWeapon::CallFunc_ChamberWeapon_BulletID' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetADSSocketLocation
// 0x0040 (0x0040 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetADSSocketLocation final
{
public:
	struct FVector                                SocketLoc;                                         // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SocketFound;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetADSSocketLocation) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_GetADSSocketLocation");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetADSSocketLocation) == 0x000040, "Wrong size on BP_FirearmPickup_C_Jig_GetADSSocketLocation");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetADSSocketLocation, SocketLoc) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetADSSocketLocation::SocketLoc' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetADSSocketLocation, SocketFound) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_GetADSSocketLocation::SocketFound' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetADSSocketLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000020, "Member 'BP_FirearmPickup_C_Jig_GetADSSocketLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetADSSocketLocation, CallFunc_DoesSocketExist_ReturnValue) == 0x000038, "Member 'BP_FirearmPickup_C_Jig_GetADSSocketLocation::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetAttachmentActiveState
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetAttachmentActiveState final
{
public:
	struct FGameplayTag                           Result;                                            // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetAttachmentActiveState) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_Jig_GetAttachmentActiveState");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetAttachmentActiveState) == 0x000008, "Wrong size on BP_FirearmPickup_C_Jig_GetAttachmentActiveState");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentActiveState, Result) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentActiveState::Result' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetAttachmentArrayByType
// 0x0038 (0x0038 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetAttachmentArrayByType final
{
public:
	struct FGameplayTag                           Type;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_AMainLocalAttachment_C*>     Attachment;                                        // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Found;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AMainLocalAttachment_C*>     CallFunc_FindAttachmentActorByTypeArr_Attachment;  // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_FindAttachmentActorByTypeArr_Found;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetAttachmentArrayByType) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_GetAttachmentArrayByType");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetAttachmentArrayByType) == 0x000038, "Wrong size on BP_FirearmPickup_C_Jig_GetAttachmentArrayByType");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentArrayByType, Type) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentArrayByType::Type' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentArrayByType, Attachment) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentArrayByType::Attachment' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentArrayByType, Found) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentArrayByType::Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentArrayByType, CallFunc_FindAttachmentActorByTypeArr_Attachment) == 0x000020, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentArrayByType::CallFunc_FindAttachmentActorByTypeArr_Attachment' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentArrayByType, CallFunc_FindAttachmentActorByTypeArr_Found) == 0x000030, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentArrayByType::CallFunc_FindAttachmentActorByTypeArr_Found' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetAttachmentByType
// 0x0028 (0x0028 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetAttachmentByType final
{
public:
	struct FGameplayTag                           Type;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ABP_AMainLocalAttachment_C*             Attachment;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AMainLocalAttachment_C*             CallFunc_FindAttachmentActorByType_Attachment;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentActorByType_Found;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetAttachmentByType) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_GetAttachmentByType");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetAttachmentByType) == 0x000028, "Wrong size on BP_FirearmPickup_C_Jig_GetAttachmentByType");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentByType, Type) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentByType::Type' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentByType, Attachment) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentByType::Attachment' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentByType, Found) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentByType::Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentByType, CallFunc_FindAttachmentActorByType_Attachment) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentByType::CallFunc_FindAttachmentActorByType_Attachment' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentByType, CallFunc_FindAttachmentActorByType_Found) == 0x000020, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentByType::CallFunc_FindAttachmentActorByType_Found' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetAttachmentInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetAttachmentInfo final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                AttachmentInfo;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetAttachmentInfo) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_GetAttachmentInfo");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetAttachmentInfo) == 0x000018, "Wrong size on BP_FirearmPickup_C_Jig_GetAttachmentInfo");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentInfo, UID) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentInfo::UID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAttachmentInfo, AttachmentInfo) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_GetAttachmentInfo::AttachmentInfo' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetAvailableAttachmentStates
// 0x0020 (0x0020 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetAvailableAttachmentStates final
{
public:
	struct FGameplayTagContainer                  States;                                            // 0x0000(0x0020)(Parm, OutParm)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetAvailableAttachmentStates) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_GetAvailableAttachmentStates");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetAvailableAttachmentStates) == 0x000020, "Wrong size on BP_FirearmPickup_C_Jig_GetAvailableAttachmentStates");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetAvailableAttachmentStates, States) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetAvailableAttachmentStates::States' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetEquipMontage
// 0x0010 (0x0010 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetEquipMontage final
{
public:
	bool                                          CanChamber_;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           EquipMontage;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetEquipMontage) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_GetEquipMontage");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetEquipMontage) == 0x000010, "Wrong size on BP_FirearmPickup_C_Jig_GetEquipMontage");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetEquipMontage, CanChamber_) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetEquipMontage::CanChamber_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetEquipMontage, EquipMontage) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_GetEquipMontage::EquipMontage' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetPendingMag
// 0x0020 (0x0020 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetPendingMag final
{
public:
	bool                                          FindMagIfNoPending_;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AMainLocalAttachment_C*             MagRef;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AMainLocalAttachment_C*             CallFunc_FindAttachmentActorByType_Attachment;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentActorByType_Found;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetPendingMag) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_GetPendingMag");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetPendingMag) == 0x000020, "Wrong size on BP_FirearmPickup_C_Jig_GetPendingMag");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetPendingMag, FindMagIfNoPending_) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetPendingMag::FindMagIfNoPending_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetPendingMag, MagRef) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_GetPendingMag::MagRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetPendingMag, CallFunc_FindAttachmentActorByType_Attachment) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_GetPendingMag::CallFunc_FindAttachmentActorByType_Attachment' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetPendingMag, CallFunc_FindAttachmentActorByType_Found) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_GetPendingMag::CallFunc_FindAttachmentActorByType_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetPendingMag, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_FirearmPickup_C_Jig_GetPendingMag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_GetPrimitiveComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_Jig_GetPrimitiveComponent final
{
public:
	class UPrimitiveComponent*                    Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_GetPrimitiveComponent) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_GetPrimitiveComponent");
static_assert(sizeof(BP_FirearmPickup_C_Jig_GetPrimitiveComponent) == 0x000008, "Wrong size on BP_FirearmPickup_C_Jig_GetPrimitiveComponent");
static_assert(offsetof(BP_FirearmPickup_C_Jig_GetPrimitiveComponent, Comp) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_GetPrimitiveComponent::Comp' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_OnMontageNotify
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_Jig_OnMontageNotify final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_OnMontageNotify) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_Jig_OnMontageNotify");
static_assert(sizeof(BP_FirearmPickup_C_Jig_OnMontageNotify) == 0x000008, "Wrong size on BP_FirearmPickup_C_Jig_OnMontageNotify");
static_assert(offsetof(BP_FirearmPickup_C_Jig_OnMontageNotify, NotifyName) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_OnMontageNotify::NotifyName' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_SetAttachmentActiveState
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_Jig_SetAttachmentActiveState final
{
public:
	struct FGameplayTag                           Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_SetAttachmentActiveState) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_Jig_SetAttachmentActiveState");
static_assert(sizeof(BP_FirearmPickup_C_Jig_SetAttachmentActiveState) == 0x000008, "Wrong size on BP_FirearmPickup_C_Jig_SetAttachmentActiveState");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetAttachmentActiveState, Value) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_SetAttachmentActiveState::Value' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_SetAttachmentInfo
// 0x0020 (0x0020 - 0x0000)
struct BP_FirearmPickup_C_Jig_SetAttachmentInfo final
{
public:
	struct FGuid                                  UID;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                AttachmentInfo;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_SetAttachmentInfo) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_SetAttachmentInfo");
static_assert(sizeof(BP_FirearmPickup_C_Jig_SetAttachmentInfo) == 0x000020, "Wrong size on BP_FirearmPickup_C_Jig_SetAttachmentInfo");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetAttachmentInfo, UID) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_SetAttachmentInfo::UID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetAttachmentInfo, AttachmentInfo) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_SetAttachmentInfo::AttachmentInfo' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetAttachmentInfo, Result) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_SetAttachmentInfo::Result' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_SetAttachmentState
// 0x0020 (0x0020 - 0x0000)
struct BP_FirearmPickup_C_Jig_SetAttachmentState final
{
public:
	TArray<struct FGuid>                          UID;                                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           NewState;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          PreExecuteClientSide_;                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_SetAttachmentState) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_SetAttachmentState");
static_assert(sizeof(BP_FirearmPickup_C_Jig_SetAttachmentState) == 0x000020, "Wrong size on BP_FirearmPickup_C_Jig_SetAttachmentState");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetAttachmentState, UID) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_SetAttachmentState::UID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetAttachmentState, NewState) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_SetAttachmentState::NewState' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetAttachmentState, PreExecuteClientSide_) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_SetAttachmentState::PreExecuteClientSide_' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_SetPendingMag
// 0x0030 (0x0030 - 0x0000)
struct BP_FirearmPickup_C_Jig_SetPendingMag final
{
public:
	class ABP_AMainLocalAttachment_C*             MagRef;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UJigsawItem_DataAsset_C*                DA;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_WeaponAttachments_C> CallFunc_Jig_SetAttachmentInfo_self_CastInput;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Jig_SetAttachmentInfo_Result;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_SetPendingMag) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_SetPendingMag");
static_assert(sizeof(BP_FirearmPickup_C_Jig_SetPendingMag) == 0x000030, "Wrong size on BP_FirearmPickup_C_Jig_SetPendingMag");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetPendingMag, MagRef) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_SetPendingMag::MagRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetPendingMag, DA) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_SetPendingMag::DA' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetPendingMag, Result) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_SetPendingMag::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetPendingMag, CallFunc_Jig_SetAttachmentInfo_self_CastInput) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_SetPendingMag::CallFunc_Jig_SetAttachmentInfo_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetPendingMag, CallFunc_Jig_SetAttachmentInfo_Result) == 0x000028, "Member 'BP_FirearmPickup_C_Jig_SetPendingMag::CallFunc_Jig_SetAttachmentInfo_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_SetPendingMag, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_FirearmPickup_C_Jig_SetPendingMag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Jig_StartReloading
// 0x0048 (0x0048 - 0x0000)
struct BP_FirearmPickup_C_Jig_StartReloading final
{
public:
	class UActorComponent*                        MPCom;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        MagContainer;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            WithMag;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LocalStartReload_Result;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInt_PassiveSkills_C>  K2Node_DynamicCast_AsInt_Passive_Skills;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Jig_StartReloading) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Jig_StartReloading");
static_assert(sizeof(BP_FirearmPickup_C_Jig_StartReloading) == 0x000048, "Wrong size on BP_FirearmPickup_C_Jig_StartReloading");
static_assert(offsetof(BP_FirearmPickup_C_Jig_StartReloading, MPCom) == 0x000000, "Member 'BP_FirearmPickup_C_Jig_StartReloading::MPCom' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_StartReloading, MagContainer) == 0x000008, "Member 'BP_FirearmPickup_C_Jig_StartReloading::MagContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_StartReloading, WithMag) == 0x000010, "Member 'BP_FirearmPickup_C_Jig_StartReloading::WithMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_StartReloading, Result) == 0x000018, "Member 'BP_FirearmPickup_C_Jig_StartReloading::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_StartReloading, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'BP_FirearmPickup_C_Jig_StartReloading::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_StartReloading, CallFunc_LocalStartReload_Result) == 0x000028, "Member 'BP_FirearmPickup_C_Jig_StartReloading::CallFunc_LocalStartReload_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_StartReloading, K2Node_DynamicCast_AsInt_Passive_Skills) == 0x000030, "Member 'BP_FirearmPickup_C_Jig_StartReloading::K2Node_DynamicCast_AsInt_Passive_Skills' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Jig_StartReloading, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_FirearmPickup_C_Jig_StartReloading::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.JigMP_OnItemConsumed
// 0x0118 (0x0118 - 0x0000)
struct BP_FirearmPickup_C_JigMP_OnItemConsumed final
{
public:
	struct FRepItemInfo                           ConsumedItem;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining;                                         // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           InsideOf;                                          // 0x0080(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromContainer;                                     // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CustomData;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallbackToPlayer_;                                 // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0111(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_JigMP_OnItemConsumed) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_JigMP_OnItemConsumed");
static_assert(sizeof(BP_FirearmPickup_C_JigMP_OnItemConsumed) == 0x000118, "Wrong size on BP_FirearmPickup_C_JigMP_OnItemConsumed");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnItemConsumed, ConsumedItem) == 0x000000, "Member 'BP_FirearmPickup_C_JigMP_OnItemConsumed::ConsumedItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnItemConsumed, Amount) == 0x000078, "Member 'BP_FirearmPickup_C_JigMP_OnItemConsumed::Amount' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnItemConsumed, Remaining) == 0x00007C, "Member 'BP_FirearmPickup_C_JigMP_OnItemConsumed::Remaining' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnItemConsumed, InsideOf) == 0x000080, "Member 'BP_FirearmPickup_C_JigMP_OnItemConsumed::InsideOf' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnItemConsumed, FromContainer) == 0x0000F8, "Member 'BP_FirearmPickup_C_JigMP_OnItemConsumed::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnItemConsumed, CustomData) == 0x000100, "Member 'BP_FirearmPickup_C_JigMP_OnItemConsumed::CustomData' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnItemConsumed, CallbackToPlayer_) == 0x000110, "Member 'BP_FirearmPickup_C_JigMP_OnItemConsumed::CallbackToPlayer_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnItemConsumed, Result) == 0x000111, "Member 'BP_FirearmPickup_C_JigMP_OnItemConsumed::Result' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.JigMP_OnMainContainerItemRemoved
// 0x00A8 (0x00A8 - 0x0000)
struct BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved final
{
public:
	struct FGuid                                  FromContainerUID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemRemovedInfo;                                   // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved");
static_assert(sizeof(BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved) == 0x0000A8, "Wrong size on BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved, FromContainerUID) == 0x000000, "Member 'BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved, ItemUID) == 0x000010, "Member 'BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved, ContainerName) == 0x000020, "Member 'BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved, ItemRemovedInfo) == 0x000028, "Member 'BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved::ItemRemovedInfo' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved, Result) == 0x0000A0, "Member 'BP_FirearmPickup_C_JigMP_OnMainContainerItemRemoved::Result' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.JigMP_OnUpdateChamberUID
// 0x0014 (0x0014 - 0x0000)
struct BP_FirearmPickup_C_JigMP_OnUpdateChamberUID final
{
public:
	struct FGuid                                  NewUID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_JigMP_OnUpdateChamberUID) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_JigMP_OnUpdateChamberUID");
static_assert(sizeof(BP_FirearmPickup_C_JigMP_OnUpdateChamberUID) == 0x000014, "Wrong size on BP_FirearmPickup_C_JigMP_OnUpdateChamberUID");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnUpdateChamberUID, NewUID) == 0x000000, "Member 'BP_FirearmPickup_C_JigMP_OnUpdateChamberUID::NewUID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_JigMP_OnUpdateChamberUID, Result) == 0x000010, "Member 'BP_FirearmPickup_C_JigMP_OnUpdateChamberUID::Result' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Local_CheckCanReload
// 0x0268 (0x0268 - 0x0000)
struct BP_FirearmPickup_C_Local_CheckCanReload final
{
public:
	class UActorComponent*                        PlayerComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActiveSlot;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        ContainerMag;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanChamber_;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            ReloadWith;                                        // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                    FoundMags;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CanChamber;                                        // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                SearchContainers;                                  // 0x0048(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UJSIContainer_C*                        MagContainer;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            MagToLoad;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            MagToUnload;                                       // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                TargetContainers;                                  // 0x0070(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_Local_CheckCanReloadInternal_Result;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Local_CheckCanReloadInternal_ContainerMag; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Local_CheckCanReloadInternal_CanChamber;  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Local_CheckCanReloadInternal_ReloadWith;  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByIDList_Found_;         // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByIDList_ItemsFound;     // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetHighestCapacityContainer_Output_Get;   // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLenOfItemsInContainer_Output_Get;      // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget; // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetValidReloadContainers_Containers;      // 0x01B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1;          // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget_1; // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetJSIContainerByPlayerSlots_Container;   // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetJSIContainerByPlayerSlots_EquippedItem; // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJSIContainerByPlayerSlots_IsPending_;  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3; // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_4; // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer; // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer_1; // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex_1; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue;                  // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Local_CheckCanReload) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Local_CheckCanReload");
static_assert(sizeof(BP_FirearmPickup_C_Local_CheckCanReload) == 0x000268, "Wrong size on BP_FirearmPickup_C_Local_CheckCanReload");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, PlayerComp) == 0x000000, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::PlayerComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, ActiveSlot) == 0x000008, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::ActiveSlot' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, Result) == 0x000010, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, ContainerMag) == 0x000018, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::ContainerMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CanChamber_) == 0x000020, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CanChamber_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, ReloadWith) == 0x000028, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::ReloadWith' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, FoundMags) == 0x000030, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::FoundMags' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CanChamber) == 0x000040, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CanChamber' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, SearchContainers) == 0x000048, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::SearchContainers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, MagContainer) == 0x000058, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::MagContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, MagToLoad) == 0x000060, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::MagToLoad' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, MagToUnload) == 0x000068, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::MagToUnload' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, TargetContainers) == 0x000070, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::TargetContainers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Local_CheckCanReloadInternal_Result) == 0x000080, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Local_CheckCanReloadInternal_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Local_CheckCanReloadInternal_ContainerMag) == 0x000088, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Local_CheckCanReloadInternal_ContainerMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Local_CheckCanReloadInternal_CanChamber) == 0x000090, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Local_CheckCanReloadInternal_CanChamber' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Local_CheckCanReloadInternal_ReloadWith) == 0x000098, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Local_CheckCanReloadInternal_ReloadWith' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, Temp_int_Loop_Counter_Variable_1) == 0x0000C0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, Temp_int_Array_Index_Variable_1) == 0x0000D4, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_IsEquipTo__ReturnValue) == 0x0000E0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetInventoryItemsByIDList_Found_) == 0x0000E1, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetInventoryItemsByIDList_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetInventoryItemsByIDList_ItemsFound) == 0x0000E8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetInventoryItemsByIDList_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Not_PreBool_ReturnValue_1) == 0x000111, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetEquippedItemRef_Found_) == 0x000112, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetEquippedItemRef_ItemRef) == 0x000118, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetEquippedItemRef_IsPending) == 0x000120, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_BooleanAND_ReturnValue) == 0x000121, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetContainerOneRef_ContainerRef) == 0x000128, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000130, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_IsValid_ReturnValue_2) == 0x000141, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetListOfContainers_Containers) == 0x000148, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Array_Length_ReturnValue_2) == 0x000158, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Greater_IntInt_ReturnValue) == 0x00015C, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetHighestCapacityContainer_Output_Get) == 0x000160, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetHighestCapacityContainer_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000168, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_IsValid_ReturnValue_3) == 0x000169, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetLenOfItemsInContainer_Output_Get) == 0x00016C, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetLenOfItemsInContainer_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000170, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000178, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget) == 0x000190, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000198, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_bSuccess_2) == 0x0001A8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetValidReloadContainers_Containers) == 0x0001B0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetValidReloadContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1) == 0x0001C0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_bSuccess_3) == 0x0001D0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget_1) == 0x0001D8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x0001E0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_bSuccess_4) == 0x0001F0, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetJSIContainerByPlayerSlots_Container) == 0x0001F8, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetJSIContainerByPlayerSlots_Container' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetJSIContainerByPlayerSlots_EquippedItem) == 0x000200, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetJSIContainerByPlayerSlots_EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetJSIContainerByPlayerSlots_IsPending_) == 0x000208, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetJSIContainerByPlayerSlots_IsPending_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Not_PreBool_ReturnValue_2) == 0x000209, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x000210, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3) == 0x000218, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_bSuccess_5) == 0x000228, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_4) == 0x000230, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, K2Node_DynamicCast_bSuccess_6) == 0x000240, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetContainerByAttachmentType_JigContainer) == 0x000248, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetContainerByAttachmentType_JigContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetContainerByAttachmentType_ContainerIndex) == 0x000250, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetContainerByAttachmentType_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetContainerByAttachmentType_JigContainer_1) == 0x000258, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetContainerByAttachmentType_JigContainer_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_GetContainerByAttachmentType_ContainerIndex_1) == 0x000260, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_GetContainerByAttachmentType_ContainerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_IsValid_ReturnValue_4) == 0x000264, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_IsEquipped__ReturnValue) == 0x000265, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_IsEquipped__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReload, CallFunc_Not_PreBool_ReturnValue_3) == 0x000266, "Member 'BP_FirearmPickup_C_Local_CheckCanReload::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Local_CheckCanReloadInternal
// 0x0260 (0x0260 - 0x0000)
struct BP_FirearmPickup_C_Local_CheckCanReloadInternal final
{
public:
	class UActorComponent*                        PlayerComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActiveSlot;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        ContainerMag;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanChamber;                                        // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            ReloadWith;                                        // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanChamber_;                                       // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                SearchContainers;                                  // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UJSI_Slot_C*                            BulletToUse;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          WillBeFull;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    FoundAmmo;                                         // 0x0058(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                TargetContainers;                                  // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UJSIContainer_C*                        MagContainer;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByIDList_Found_;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByIDList_ItemsFound;     // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget; // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_2;                         // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                CallFunc_GetValidReloadContainers_Containers;      // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__2;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_2;             // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_2;           // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerCapacity_Cap;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerCapacity_MaxCapacity;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1;          // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget_1; // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetJSIContainerByPlayerSlots_Container;   // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetJSIContainerByPlayerSlots_EquippedItem; // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJSIContainerByPlayerSlots_IsPending_;  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_2;        // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3; // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_4; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer; // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex; // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer_1; // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex_1; // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped__ReturnValue;                  // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Local_CheckCanReloadInternal) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Local_CheckCanReloadInternal");
static_assert(sizeof(BP_FirearmPickup_C_Local_CheckCanReloadInternal) == 0x000260, "Wrong size on BP_FirearmPickup_C_Local_CheckCanReloadInternal");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, PlayerComp) == 0x000000, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::PlayerComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, ActiveSlot) == 0x000008, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::ActiveSlot' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, Result) == 0x000010, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, ContainerMag) == 0x000018, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::ContainerMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CanChamber) == 0x000020, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CanChamber' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, ReloadWith) == 0x000028, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::ReloadWith' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CanChamber_) == 0x000030, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CanChamber_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, SearchContainers) == 0x000038, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::SearchContainers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, BulletToUse) == 0x000048, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::BulletToUse' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, WillBeFull) == 0x000050, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::WillBeFull' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, FoundAmmo) == 0x000058, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::FoundAmmo' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, TargetContainers) == 0x000068, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::TargetContainers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, MagContainer) == 0x000078, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::MagContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_Found_) == 0x000084, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_ItemRef) == 0x000088, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_IsPending) == 0x000090, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, Temp_int_Array_Index_Variable) == 0x000094, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetInventoryItemsByIDList_Found_) == 0x0000AC, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetInventoryItemsByIDList_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetInventoryItemsByIDList_ItemsFound) == 0x0000B0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetInventoryItemsByIDList_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Greater_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x0000D0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget) == 0x0000E8, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Array_Get_Item_2) == 0x0000F0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_IsEquipTo__ReturnValue) == 0x000108, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Not_PreBool_ReturnValue) == 0x000109, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_Found__1) == 0x00010A, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000110, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000118, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_IsValid_ReturnValue_1) == 0x000119, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerOneRef_ContainerRef) == 0x000120, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Not_PreBool_ReturnValue_1) == 0x000128, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000130, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_BooleanAND_ReturnValue) == 0x000141, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetListOfContainers_Containers) == 0x000148, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000158, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_bSuccess_2) == 0x000168, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Array_Length_ReturnValue_2) == 0x00016C, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetValidReloadContainers_Containers) == 0x000170, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetValidReloadContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, Temp_int_Loop_Counter_Variable_1) == 0x000184, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Less_IntInt_ReturnValue_1) == 0x000188, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Add_IntInt_ReturnValue_1) == 0x00018C, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_Found__2) == 0x000190, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_Found__2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_ItemRef_2) == 0x000198, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_ItemRef_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetEquippedItemRef_IsPending_2) == 0x0001A0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetEquippedItemRef_IsPending_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerCapacity_Cap) == 0x0001A4, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerCapacity_Cap' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerCapacity_MaxCapacity) == 0x0001A8, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerCapacity_MaxCapacity' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1) == 0x0001B0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_bSuccess_3) == 0x0001C0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001C1, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget_1) == 0x0001C8, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x0001D0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_bSuccess_4) == 0x0001E0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetJSIContainerByPlayerSlots_Container) == 0x0001E8, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetJSIContainerByPlayerSlots_Container' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetJSIContainerByPlayerSlots_EquippedItem) == 0x0001F0, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetJSIContainerByPlayerSlots_EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetJSIContainerByPlayerSlots_IsPending_) == 0x0001F8, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetJSIContainerByPlayerSlots_IsPending_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001F9, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x000200, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerOneRef_ContainerRef_2) == 0x000208, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerOneRef_ContainerRef_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3) == 0x000210, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_bSuccess_5) == 0x000220, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_4) == 0x000228, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, K2Node_DynamicCast_bSuccess_6) == 0x000238, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerByAttachmentType_JigContainer) == 0x000240, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerByAttachmentType_JigContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerByAttachmentType_ContainerIndex) == 0x000248, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerByAttachmentType_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerByAttachmentType_JigContainer_1) == 0x000250, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerByAttachmentType_JigContainer_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_GetContainerByAttachmentType_ContainerIndex_1) == 0x000258, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_GetContainerByAttachmentType_ContainerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_IsValid_ReturnValue_2) == 0x00025C, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_IsEquipped__ReturnValue) == 0x00025D, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_IsEquipped__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_CheckCanReloadInternal, CallFunc_Not_PreBool_ReturnValue_3) == 0x00025E, "Member 'BP_FirearmPickup_C_Local_CheckCanReloadInternal::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Local_StartShooting
// 0x01B0 (0x01B0 - 0x0000)
struct BP_FirearmPickup_C_Local_StartShooting final
{
public:
	class UBP_JigMultiplayer_C*                   PlayerMPComp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ActiveWeapon;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          HipFire__0;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalBullets;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStat_Found;                           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindStat_MinValue;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FindStat_MaxValue;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_GetJSIContainerByPlayerSlots_Container;   // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetJSIContainerByPlayerSlots_EquippedItem; // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetJSIContainerByPlayerSlots_IsPending_;  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer; // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer_1; // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex_1; // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerCapacity_Cap;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerCapacity_MaxCapacity;         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerCapacity_Cap_1;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerCapacity_MaxCapacity_1;       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_GetContainerByAttachmentType_JigContainer_2; // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerByAttachmentType_ContainerIndex_2; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__2;              // 0x018F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_2;             // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_2;           // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Local_StartShooting) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Local_StartShooting");
static_assert(sizeof(BP_FirearmPickup_C_Local_StartShooting) == 0x0001B0, "Wrong size on BP_FirearmPickup_C_Local_StartShooting");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, PlayerMPComp) == 0x000000, "Member 'BP_FirearmPickup_C_Local_StartShooting::PlayerMPComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, ActiveWeapon) == 0x000008, "Member 'BP_FirearmPickup_C_Local_StartShooting::ActiveWeapon' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, HipFire__0) == 0x000010, "Member 'BP_FirearmPickup_C_Local_StartShooting::HipFire__0' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, TotalBullets) == 0x000014, "Member 'BP_FirearmPickup_C_Local_StartShooting::TotalBullets' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000020, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget) == 0x000038, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x000040, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_FindStat_Found) == 0x000051, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_FindStat_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_FindStat_MinValue) == 0x000054, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_FindStat_MinValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_FindStat_MaxValue) == 0x000058, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_FindStat_MaxValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_K2_SetTimer_ReturnValue) == 0x000068, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000090, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0000A8, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetJSIContainerByPlayerSlots_Container) == 0x0000C0, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetJSIContainerByPlayerSlots_Container' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetJSIContainerByPlayerSlots_EquippedItem) == 0x0000C8, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetJSIContainerByPlayerSlots_EquippedItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetJSIContainerByPlayerSlots_IsPending_) == 0x0000D0, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetJSIContainerByPlayerSlots_IsPending_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_Not_PreBool_ReturnValue) == 0x0000D1, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000D8, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x0000E0, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x0000E8, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x000100, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_bSuccess_3) == 0x000110, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerByAttachmentType_JigContainer) == 0x000118, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerByAttachmentType_JigContainer' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerByAttachmentType_ContainerIndex) == 0x000120, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerByAttachmentType_ContainerIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerByAttachmentType_JigContainer_1) == 0x000128, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerByAttachmentType_JigContainer_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerByAttachmentType_ContainerIndex_1) == 0x000130, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerByAttachmentType_ContainerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_Found_) == 0x000134, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_ItemRef) == 0x000138, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_IsPending) == 0x000140, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerCapacity_Cap) == 0x000144, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerCapacity_Cap' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerCapacity_MaxCapacity) == 0x000148, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerCapacity_MaxCapacity' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00014C, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_Found__1) == 0x00014D, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000150, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000158, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3) == 0x000160, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, K2Node_DynamicCast_bSuccess_4) == 0x000170, "Member 'BP_FirearmPickup_C_Local_StartShooting::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerCapacity_Cap_1) == 0x000174, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerCapacity_Cap_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerCapacity_MaxCapacity_1) == 0x000178, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerCapacity_MaxCapacity_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerByAttachmentType_JigContainer_2) == 0x000180, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerByAttachmentType_JigContainer_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetContainerByAttachmentType_ContainerIndex_2) == 0x000188, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetContainerByAttachmentType_ContainerIndex_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_IsValid_ReturnValue_1) == 0x00018C, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_BooleanAND_ReturnValue_1) == 0x00018D, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_IsValid_ReturnValue_2) == 0x00018E, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_Found__2) == 0x00018F, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_Found__2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_ItemRef_2) == 0x000190, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_ItemRef_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_GetEquippedItemRef_IsPending_2) == 0x000198, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_GetEquippedItemRef_IsPending_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0001A0, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StartShooting, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0001A8, "Member 'BP_FirearmPickup_C_Local_StartShooting::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Local_StopShooting
// 0x0030 (0x0030 - 0x0000)
struct BP_FirearmPickup_C_Local_StopShooting final
{
public:
	bool                                          DontSendRPC_;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallRequestChamberUID_Result;     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Local_StopShooting) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Local_StopShooting");
static_assert(sizeof(BP_FirearmPickup_C_Local_StopShooting) == 0x000030, "Wrong size on BP_FirearmPickup_C_Local_StopShooting");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, DontSendRPC_) == 0x000000, "Member 'BP_FirearmPickup_C_Local_StopShooting::DontSendRPC_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000008, "Member 'BP_FirearmPickup_C_Local_StopShooting::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FirearmPickup_C_Local_StopShooting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_JigComp_CallRequestChamberUID_Result) == 0x00001A, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_JigComp_CallRequestChamberUID_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_IsValid_ReturnValue_1) == 0x00001B, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_GetEquippedItemRef_Found_) == 0x00001C, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_GetEquippedItemRef_ItemRef) == 0x000020, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_GetEquippedItemRef_IsPending) == 0x000028, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Local_StopShooting, CallFunc_BooleanAND_ReturnValue_1) == 0x000029, "Member 'BP_FirearmPickup_C_Local_StopShooting::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.LocalStartReload
// 0x0340 (0x0340 - 0x0000)
struct BP_FirearmPickup_C_LocalStartReload final
{
public:
	class UActorComponent*                        PlayerComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ContainerMag;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            WithMag;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                SearchContainers;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UJSI_Slot_C*                            MagToLoad;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            MagToUnload;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSI_Slot_C*>                    FoundMags;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                TargetContainers;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_LocalStartReloadInternal_Result;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByIDList_Found_;         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByIDList_ItemsFound;     // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1;          // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_AddNewPendingRequest_Result;      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_2;          // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_AddNewPendingRequest_Result_1;    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_1;             // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallRequestReload_Result;         // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_3;          // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_4;          // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_5;          // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_6;          // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_7;          // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_8;          // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget; // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_2;                         // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0210(0x0010)(ReferenceParm, ContainsInstancedReference)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetValidReloadContainers_Containers;      // 0x0238(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_AddNewPendingRequest_Result_2;    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_AddNewPendingRequest_Result_3;    // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_AddNewPendingRequest_Result_4;    // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_2;             // 0x025C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_3;             // 0x026C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID_4;             // 0x027C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSlotDim_SlotDimension;                 // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallRequestReload_Result_1;       // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Found_;    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex; // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_;  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallRequestReload_Result_2;       // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_3;                         // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue_1;                 // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BF[0x1];                                      // 0x02BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array_1;                          // 0x02C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__2;              // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D3[0x5];                                      // 0x02D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_2;             // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_2;           // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers_1;         // 0x0308(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_4;                         // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetHighestCapacityContainer_Output_Get;   // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_LocalStartReload) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_LocalStartReload");
static_assert(sizeof(BP_FirearmPickup_C_LocalStartReload) == 0x000340, "Wrong size on BP_FirearmPickup_C_LocalStartReload");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, PlayerComp) == 0x000000, "Member 'BP_FirearmPickup_C_LocalStartReload::PlayerComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, ContainerMag) == 0x000008, "Member 'BP_FirearmPickup_C_LocalStartReload::ContainerMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, WithMag) == 0x000010, "Member 'BP_FirearmPickup_C_LocalStartReload::WithMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Result) == 0x000018, "Member 'BP_FirearmPickup_C_LocalStartReload::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, SearchContainers) == 0x000020, "Member 'BP_FirearmPickup_C_LocalStartReload::SearchContainers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, MagToLoad) == 0x000030, "Member 'BP_FirearmPickup_C_LocalStartReload::MagToLoad' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, MagToUnload) == 0x000038, "Member 'BP_FirearmPickup_C_LocalStartReload::MagToUnload' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, FoundMags) == 0x000040, "Member 'BP_FirearmPickup_C_LocalStartReload::FoundMags' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, TargetContainers) == 0x000050, "Member 'BP_FirearmPickup_C_LocalStartReload::TargetContainers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_LocalStartReloadInternal_Result) == 0x000060, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_LocalStartReloadInternal_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_IsValid_ReturnValue_1) == 0x00006C, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_FirearmPickup_C_LocalStartReload::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_FirearmPickup_C_LocalStartReload::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_FirearmPickup_C_LocalStartReload::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'BP_FirearmPickup_C_LocalStartReload::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Temp_int_Array_Index_Variable_2) == 0x00008C, "Member 'BP_FirearmPickup_C_LocalStartReload::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Temp_int_Loop_Counter_Variable_2) == 0x0000A0, "Member 'BP_FirearmPickup_C_LocalStartReload::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A4, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Temp_int_Array_Index_Variable_3) == 0x0000A8, "Member 'BP_FirearmPickup_C_LocalStartReload::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetInventoryItemsByIDList_Found_) == 0x0000AC, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetInventoryItemsByIDList_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetInventoryItemsByIDList_ItemsFound) == 0x0000B0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetInventoryItemsByIDList_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetUniqueID_UniqueServerID) == 0x0000C0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x0000D0, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1) == 0x0000E8, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_AddNewPendingRequest_Result) == 0x0000F9, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_AddNewPendingRequest_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_2) == 0x000100, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_AddNewPendingRequest_Result_1) == 0x000111, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_AddNewPendingRequest_Result_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetUniqueID_UniqueServerID_1) == 0x000114, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetUniqueID_UniqueServerID_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_CallRequestReload_Result) == 0x000124, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_CallRequestReload_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_3) == 0x000128, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_3) == 0x000138, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_4) == 0x000140, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_4) == 0x000150, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_5) == 0x000158, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_5) == 0x000168, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_6) == 0x000170, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_6) == 0x000180, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_7) == 0x000188, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_7' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_7) == 0x000198, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_8) == 0x0001A0, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_8' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_8) == 0x0001B0, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget) == 0x0001B8, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Get_Item_2) == 0x0001C0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_MakeArray_Array) == 0x0001C8, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_IsValid_ReturnValue_2) == 0x0001D8, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_IsEquipTo__ReturnValue) == 0x0001D9, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Not_PreBool_ReturnValue) == 0x0001DA, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001DB, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_Found_) == 0x0001DC, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_ItemRef) == 0x0001E0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_IsPending) == 0x0001E8, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_BooleanAND_ReturnValue) == 0x0001E9, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetContainerOneRef_ContainerRef) == 0x0001F0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0001F8, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_9) == 0x000208, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetListOfContainers_Containers) == 0x000210, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000220, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_10) == 0x000230, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetValidReloadContainers_Containers) == 0x000238, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetValidReloadContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Length_ReturnValue_2) == 0x000248, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Less_IntInt_ReturnValue_1) == 0x00024C, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_Found__1) == 0x00024D, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000250, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000258, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_AddNewPendingRequest_Result_2) == 0x000259, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_AddNewPendingRequest_Result_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_AddNewPendingRequest_Result_3) == 0x00025A, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_AddNewPendingRequest_Result_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_AddNewPendingRequest_Result_4) == 0x00025B, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_AddNewPendingRequest_Result_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetUniqueID_UniqueServerID_2) == 0x00025C, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetUniqueID_UniqueServerID_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetUniqueID_UniqueServerID_3) == 0x00026C, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetUniqueID_UniqueServerID_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetUniqueID_UniqueServerID_4) == 0x00027C, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetUniqueID_UniqueServerID_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetSlotDim_SlotDimension) == 0x000290, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetSlotDim_SlotDimension' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_CallRequestReload_Result_1) == 0x0002A0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_CallRequestReload_Result_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEmptySlotTryRotated_NonPure_Found_) == 0x0002A1, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEmptySlotTryRotated_NonPure_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex) == 0x0002A4, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEmptySlotTryRotated_NonPure_ToSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_) == 0x0002A8, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEmptySlotTryRotated_NonPure_Rotated_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_JigComp_CallRequestReload_Result_2) == 0x0002A9, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_JigComp_CallRequestReload_Result_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, Temp_int_Loop_Counter_Variable_3) == 0x0002AC, "Member 'BP_FirearmPickup_C_LocalStartReload::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Get_Item_3) == 0x0002B0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Length_ReturnValue_3) == 0x0002B8, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_IsEquipTo__ReturnValue_1) == 0x0002BC, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_IsEquipTo__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002BD, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002BE, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_MakeArray_Array_1) == 0x0002C0, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_IsValid_ReturnValue_3) == 0x0002D0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Not_PreBool_ReturnValue_3) == 0x0002D1, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_Found__2) == 0x0002D2, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_Found__2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_ItemRef_2) == 0x0002D8, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_ItemRef_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetEquippedItemRef_IsPending_2) == 0x0002E0, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetEquippedItemRef_IsPending_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_BooleanAND_ReturnValue_1) == 0x0002E1, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x0002E8, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x0002F0, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, K2Node_DynamicCast_bSuccess_11) == 0x000300, "Member 'BP_FirearmPickup_C_LocalStartReload::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetListOfContainers_Containers_1) == 0x000308, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetListOfContainers_Containers_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Less_IntInt_ReturnValue_3) == 0x000318, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Add_IntInt_ReturnValue_3) == 0x00031C, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Get_Item_4) == 0x000320, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Array_Length_ReturnValue_4) == 0x000328, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_GetHighestCapacityContainer_Output_Get) == 0x000330, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_GetHighestCapacityContainer_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReload, CallFunc_Greater_IntInt_ReturnValue) == 0x000338, "Member 'BP_FirearmPickup_C_LocalStartReload::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.LocalStartReloadInternal
// 0x0200 (0x0200 - 0x0000)
struct BP_FirearmPickup_C_LocalStartReloadInternal final
{
public:
	class UActorComponent*                        PlayerComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ContainerMag;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                SearchContainers;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          WillBeFull;                                        // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    FoundAmmo;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UJSIContainer_C*>                TargetContainers;                                  // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipTo__ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryItemsByIDList_Found_;         // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSI_Slot_C*>                    CallFunc_GetInventoryItemsByIDList_ItemsFound;     // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetUniqueID_UniqueServerID;               // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UJSIContainer_C*>                K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found_;                // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef;               // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface;  // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers;           // 0x0100(0x0010)(ReferenceParm, ContainsInstancedReference)
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info;            // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_JigCompInfo_C>    K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1;          // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_JigComp_GetInventoryWidgetRef_UserWidget; // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__1;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_1;             // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1; // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerCapacity_Cap;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerCapacity_MaxCapacity;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetValidReloadContainers_Containers;      // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_Found__2;              // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_GetEquippedItemRef_ItemRef_2;             // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedItemRef_IsPending_2;           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetContainerCapacity_Cap_1;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContainerCapacity_MaxCapacity_1;       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetContainerOneRef_ContainerRef_1;        // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IJSISpecialWidgetInterface_C> K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2; // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UJSIContainer_C*>                CallFunc_GetListOfContainers_Containers_1;         // 0x01D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UJSIContainer_C*                        CallFunc_Array_Get_Item_3;                         // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigComp_CallRequestReloadInternal_Result; // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_LocalStartReloadInternal) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_LocalStartReloadInternal");
static_assert(sizeof(BP_FirearmPickup_C_LocalStartReloadInternal) == 0x000200, "Wrong size on BP_FirearmPickup_C_LocalStartReloadInternal");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, PlayerComp) == 0x000000, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::PlayerComp' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, ContainerMag) == 0x000008, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::ContainerMag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, Result) == 0x000010, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, SearchContainers) == 0x000018, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::SearchContainers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, WillBeFull) == 0x000028, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::WillBeFull' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, FoundAmmo) == 0x000030, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::FoundAmmo' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, TargetContainers) == 0x000040, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::TargetContainers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_IsEquipTo__ReturnValue) == 0x000080, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_IsEquipTo__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetInventoryItemsByIDList_Found_) == 0x000081, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetInventoryItemsByIDList_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetInventoryItemsByIDList_ItemsFound) == 0x000088, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetInventoryItemsByIDList_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetUniqueID_UniqueServerID) == 0x0000A8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetUniqueID_UniqueServerID' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C9, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_Found_) == 0x0000CA, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_ItemRef) == 0x0000D0, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_ItemRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_IsPending) == 0x0000D8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_IsPending' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_BooleanAND_ReturnValue) == 0x0000D9, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetContainerOneRef_ContainerRef) == 0x0000E0, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetContainerOneRef_ContainerRef' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_AsJSISpecial_Widget_Interface) == 0x0000E8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_AsJSISpecial_Widget_Interface' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetListOfContainers_Containers) == 0x000100, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetListOfContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_AsBPI_Jig_Comp_Info) == 0x000110, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_AsBPI_Jig_Comp_Info' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Array_Length_ReturnValue_2) == 0x000124, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Greater_IntInt_ReturnValue) == 0x000128, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1) == 0x000130, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_AsBPI_Jig_Comp_Info_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_JigComp_GetInventoryWidgetRef_UserWidget) == 0x000148, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_JigComp_GetInventoryWidgetRef_UserWidget' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_Found__1) == 0x000150, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_Found__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_ItemRef_1) == 0x000158, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_ItemRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_IsPending_1) == 0x000160, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_IsPending_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1) == 0x000168, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_bSuccess_3) == 0x000178, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetContainerCapacity_Cap) == 0x00017C, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetContainerCapacity_Cap' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetContainerCapacity_MaxCapacity) == 0x000180, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetContainerCapacity_MaxCapacity' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetValidReloadContainers_Containers) == 0x000188, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetValidReloadContainers_Containers' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Subtract_IntInt_ReturnValue) == 0x000198, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00019C, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Not_PreBool_ReturnValue_2) == 0x00019D, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00019E, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_Found__2) == 0x00019F, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_Found__2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_ItemRef_2) == 0x0001A0, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_ItemRef_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetEquippedItemRef_IsPending_2) == 0x0001A8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetEquippedItemRef_IsPending_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetContainerCapacity_Cap_1) == 0x0001AC, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetContainerCapacity_Cap_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetContainerCapacity_MaxCapacity_1) == 0x0001B0, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetContainerCapacity_MaxCapacity_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetContainerOneRef_ContainerRef_1) == 0x0001B8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetContainerOneRef_ContainerRef_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2) == 0x0001C0, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_AsJSISpecial_Widget_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, K2Node_DynamicCast_bSuccess_4) == 0x0001D0, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_GetListOfContainers_Containers_1) == 0x0001D8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_GetListOfContainers_Containers_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, Temp_int_Loop_Counter_Variable_1) == 0x0001E8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Array_Get_Item_3) == 0x0001F0, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001F8, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_JigComp_CallRequestReloadInternal_Result) == 0x0001F9, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_JigComp_CallRequestReloadInternal_Result' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_LocalStartReloadInternal, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BP_FirearmPickup_C_LocalStartReloadInternal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.MC_SpawnTrail
// 0x0048 (0x0048 - 0x0000)
struct BP_FirearmPickup_C_MC_SpawnTrail final
{
public:
	struct FVector                                MuzzleLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPointLocation;                                  // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FirearmPickup_C_MC_SpawnTrail) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_MC_SpawnTrail");
static_assert(sizeof(BP_FirearmPickup_C_MC_SpawnTrail) == 0x000048, "Wrong size on BP_FirearmPickup_C_MC_SpawnTrail");
static_assert(offsetof(BP_FirearmPickup_C_MC_SpawnTrail, MuzzleLocation) == 0x000000, "Member 'BP_FirearmPickup_C_MC_SpawnTrail::MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MC_SpawnTrail, EndPointLocation) == 0x000018, "Member 'BP_FirearmPickup_C_MC_SpawnTrail::EndPointLocation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MC_SpawnTrail, Rotation) == 0x000030, "Member 'BP_FirearmPickup_C_MC_SpawnTrail::Rotation' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.MC_WeaponEffects
// 0x0018 (0x0018 - 0x0000)
struct BP_FirearmPickup_C_MC_WeaponEffects final
{
public:
	class UParticleSystem*                        EmitterTemplate;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachToComponent;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_MC_WeaponEffects) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_MC_WeaponEffects");
static_assert(sizeof(BP_FirearmPickup_C_MC_WeaponEffects) == 0x000018, "Wrong size on BP_FirearmPickup_C_MC_WeaponEffects");
static_assert(offsetof(BP_FirearmPickup_C_MC_WeaponEffects, EmitterTemplate) == 0x000000, "Member 'BP_FirearmPickup_C_MC_WeaponEffects::EmitterTemplate' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MC_WeaponEffects, AttachToComponent) == 0x000008, "Member 'BP_FirearmPickup_C_MC_WeaponEffects::AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MC_WeaponEffects, AttachPointName) == 0x000010, "Member 'BP_FirearmPickup_C_MC_WeaponEffects::AttachPointName' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.MC_WeaponShot
// 0x0001 (0x0001 - 0x0000)
struct BP_FirearmPickup_C_MC_WeaponShot final
{
public:
	bool                                          Started_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_MC_WeaponShot) == 0x000001, "Wrong alignment on BP_FirearmPickup_C_MC_WeaponShot");
static_assert(sizeof(BP_FirearmPickup_C_MC_WeaponShot) == 0x000001, "Wrong size on BP_FirearmPickup_C_MC_WeaponShot");
static_assert(offsetof(BP_FirearmPickup_C_MC_WeaponShot, Started_) == 0x000000, "Member 'BP_FirearmPickup_C_MC_WeaponShot::Started_' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.MuzzleDurability
// 0x0090 (0x0090 - 0x0000)
struct BP_FirearmPickup_C_MuzzleDurability final
{
public:
	bool                                          AttachmentFound_;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_RepAttachmentInfo                   CallFunc_FindAttachmentDataByType_Output;          // 0x0018(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentDataByType_Found;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_NewDur;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ServerFuncUpdateDurabilityByUID_NewDur;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_MuzzleDurability) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_MuzzleDurability");
static_assert(sizeof(BP_FirearmPickup_C_MuzzleDurability) == 0x000090, "Wrong size on BP_FirearmPickup_C_MuzzleDurability");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, AttachmentFound_) == 0x000000, "Member 'BP_FirearmPickup_C_MuzzleDurability::AttachmentFound_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_GetBoolCVar_ReturnValue) == 0x000001, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_GetFloatCVar_ReturnValue) == 0x000004, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_FindAttachmentDataByType_Output) == 0x000018, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_FindAttachmentDataByType_Output' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_FindAttachmentDataByType_Found) == 0x000060, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_FindAttachmentDataByType_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_GetDurability_NewDur) == 0x000068, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_GetDurability_NewDur' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_ServerFuncUpdateDurabilityByUID_NewDur) == 0x000080, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_ServerFuncUpdateDurabilityByUID_NewDur' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleDurability, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000088, "Member 'BP_FirearmPickup_C_MuzzleDurability::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.MuzzleEffects
// 0x0100 (0x0100 - 0x0000)
struct BP_FirearmPickup_C_MuzzleEffects final
{
public:
	double                                        Sound;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMuzzleBrake_MuzzleBrakeAttached_;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MuzzleDurability_AttachmentFound_;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSuppressor_SuppressorAttached_;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AMainLocalAttachment_C*             CallFunc_FindAttachmentActorByType_Attachment;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAttachmentActorByType_Found;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MuzzleDurability_AttachmentFound__1;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindSpecificAttachmentStat_Found_;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindSpecificAttachmentStat_StatValue;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindSpecificAttachmentStat_Found__1;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FindSpecificAttachmentStat_StatValue_1;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue_1;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast;   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast_1; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast_2; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_MuzzleEffects) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_MuzzleEffects");
static_assert(sizeof(BP_FirearmPickup_C_MuzzleEffects) == 0x000100, "Wrong size on BP_FirearmPickup_C_MuzzleEffects");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, Sound) == 0x000000, "Member 'BP_FirearmPickup_C_MuzzleEffects::Sound' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000008, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_GetMuzzleBrake_MuzzleBrakeAttached_) == 0x000028, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_GetMuzzleBrake_MuzzleBrakeAttached_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_MuzzleDurability_AttachmentFound_) == 0x000029, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_MuzzleDurability_AttachmentFound_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_GetSuppressor_SuppressorAttached_) == 0x00002A, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_GetSuppressor_SuppressorAttached_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_FindAttachmentActorByType_Attachment) == 0x000030, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_FindAttachmentActorByType_Attachment' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_FindAttachmentActorByType_Found) == 0x000038, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_FindAttachmentActorByType_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, K2Node_MathExpression_ReturnValue) == 0x000040, "Member 'BP_FirearmPickup_C_MuzzleEffects::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000048, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_MuzzleDurability_AttachmentFound__1) == 0x000068, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_MuzzleDurability_AttachmentFound__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_FindSpecificAttachmentStat_Found_) == 0x000069, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_FindSpecificAttachmentStat_Found_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_FindSpecificAttachmentStat_StatValue) == 0x000070, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_FindSpecificAttachmentStat_StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_FindSpecificAttachmentStat_Found__1) == 0x000078, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_FindSpecificAttachmentStat_Found__1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_FindSpecificAttachmentStat_StatValue_1) == 0x000080, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_FindSpecificAttachmentStat_StatValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, K2Node_MathExpression_ReturnValue_1) == 0x0000A0, "Member 'BP_FirearmPickup_C_MuzzleEffects::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_GetOwner_ReturnValue_1) == 0x0000A8, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x0000B0, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_GetOwner_ReturnValue_2) == 0x0000C0, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C8, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_GetSocketLocation_ReturnValue) == 0x0000D8, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast) == 0x0000F0, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast_1) == 0x0000F4, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_MuzzleEffects, CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast_2) == 0x0000F8, "Member 'BP_FirearmPickup_C_MuzzleEffects::CallFunc_ReportNoiseEvent_MaxRange_ImplicitCast_2' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.OnBlendOut_336AF8914848A4799421D89C590F8176
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_OnBlendOut_336AF8914848A4799421D89C590F8176 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_OnBlendOut_336AF8914848A4799421D89C590F8176) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_OnBlendOut_336AF8914848A4799421D89C590F8176");
static_assert(sizeof(BP_FirearmPickup_C_OnBlendOut_336AF8914848A4799421D89C590F8176) == 0x000008, "Wrong size on BP_FirearmPickup_C_OnBlendOut_336AF8914848A4799421D89C590F8176");
static_assert(offsetof(BP_FirearmPickup_C_OnBlendOut_336AF8914848A4799421D89C590F8176, NotifyName) == 0x000000, "Member 'BP_FirearmPickup_C_OnBlendOut_336AF8914848A4799421D89C590F8176::NotifyName' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.OnCompleted_336AF8914848A4799421D89C590F8176
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_OnCompleted_336AF8914848A4799421D89C590F8176 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_OnCompleted_336AF8914848A4799421D89C590F8176) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_OnCompleted_336AF8914848A4799421D89C590F8176");
static_assert(sizeof(BP_FirearmPickup_C_OnCompleted_336AF8914848A4799421D89C590F8176) == 0x000008, "Wrong size on BP_FirearmPickup_C_OnCompleted_336AF8914848A4799421D89C590F8176");
static_assert(offsetof(BP_FirearmPickup_C_OnCompleted_336AF8914848A4799421D89C590F8176, NotifyName) == 0x000000, "Member 'BP_FirearmPickup_C_OnCompleted_336AF8914848A4799421D89C590F8176::NotifyName' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.OnInterrupted_336AF8914848A4799421D89C590F8176
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_OnInterrupted_336AF8914848A4799421D89C590F8176 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_OnInterrupted_336AF8914848A4799421D89C590F8176) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_OnInterrupted_336AF8914848A4799421D89C590F8176");
static_assert(sizeof(BP_FirearmPickup_C_OnInterrupted_336AF8914848A4799421D89C590F8176) == 0x000008, "Wrong size on BP_FirearmPickup_C_OnInterrupted_336AF8914848A4799421D89C590F8176");
static_assert(offsetof(BP_FirearmPickup_C_OnInterrupted_336AF8914848A4799421D89C590F8176, NotifyName) == 0x000000, "Member 'BP_FirearmPickup_C_OnInterrupted_336AF8914848A4799421D89C590F8176::NotifyName' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.OnNotifyBegin_336AF8914848A4799421D89C590F8176
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_OnNotifyBegin_336AF8914848A4799421D89C590F8176 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_OnNotifyBegin_336AF8914848A4799421D89C590F8176) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_OnNotifyBegin_336AF8914848A4799421D89C590F8176");
static_assert(sizeof(BP_FirearmPickup_C_OnNotifyBegin_336AF8914848A4799421D89C590F8176) == 0x000008, "Wrong size on BP_FirearmPickup_C_OnNotifyBegin_336AF8914848A4799421D89C590F8176");
static_assert(offsetof(BP_FirearmPickup_C_OnNotifyBegin_336AF8914848A4799421D89C590F8176, NotifyName) == 0x000000, "Member 'BP_FirearmPickup_C_OnNotifyBegin_336AF8914848A4799421D89C590F8176::NotifyName' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.OnNotifyEnd_336AF8914848A4799421D89C590F8176
// 0x0008 (0x0008 - 0x0000)
struct BP_FirearmPickup_C_OnNotifyEnd_336AF8914848A4799421D89C590F8176 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_OnNotifyEnd_336AF8914848A4799421D89C590F8176) == 0x000004, "Wrong alignment on BP_FirearmPickup_C_OnNotifyEnd_336AF8914848A4799421D89C590F8176");
static_assert(sizeof(BP_FirearmPickup_C_OnNotifyEnd_336AF8914848A4799421D89C590F8176) == 0x000008, "Wrong size on BP_FirearmPickup_C_OnNotifyEnd_336AF8914848A4799421D89C590F8176");
static_assert(offsetof(BP_FirearmPickup_C_OnNotifyEnd_336AF8914848A4799421D89C590F8176, NotifyName) == 0x000000, "Member 'BP_FirearmPickup_C_OnNotifyEnd_336AF8914848A4799421D89C590F8176::NotifyName' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.ProjectileTraceFromCamera
// 0x03F0 (0x03F0 - 0x0000)
struct BP_FirearmPickup_C_ProjectileTraceFromCamera final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalLoc;                                          // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_238[0x8];                                      // 0x0238(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0240(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0320(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0390(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_ProjectileTraceFromCamera) == 0x000010, "Wrong alignment on BP_FirearmPickup_C_ProjectileTraceFromCamera");
static_assert(sizeof(BP_FirearmPickup_C_ProjectileTraceFromCamera) == 0x0003F0, "Wrong size on BP_FirearmPickup_C_ProjectileTraceFromCamera");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, Transform) == 0x000000, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::Transform' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, LocalLoc) == 0x000060, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::LocalLoc' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000078, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_GetOwner_ReturnValue) == 0x000080, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_GetSocketLocation_ReturnValue) == 0x000098, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000B0, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_GetCameraRotation_ReturnValue) == 0x0000B8, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000D0, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_GetForwardVector_ReturnValue) == 0x0000E8, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000100, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_LineTraceSingle_OutHit) == 0x000130, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_LineTraceSingle_ReturnValue) == 0x000218, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_FindLookAtRotation_ReturnValue) == 0x000220, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_MakeTransform_ReturnValue) == 0x000240, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_bBlockingHit) == 0x0002A0, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002A1, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_Time) == 0x0002A4, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_Distance) == 0x0002A8, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_Location) == 0x0002B0, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_ImpactPoint) == 0x0002C8, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_Normal) == 0x0002E0, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_ImpactNormal) == 0x0002F8, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_PhysMat) == 0x000310, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_HitActor) == 0x000318, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_HitComponent) == 0x000320, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_HitBoneName) == 0x000328, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_BoneName) == 0x000330, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_HitItem) == 0x000338, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_ElementIndex) == 0x00033C, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_FaceIndex) == 0x000340, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_TraceStart) == 0x000348, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_BreakHitResult_TraceEnd) == 0x000360, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000378, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ProjectileTraceFromCamera, CallFunc_MakeTransform_ReturnValue_1) == 0x000390, "Member 'BP_FirearmPickup_C_ProjectileTraceFromCamera::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.ReduceDurability
// 0x0088 (0x0088 - 0x0000)
struct BP_FirearmPickup_C_ReduceDurability final
{
public:
	bool                                          Reduced_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MalfunctionIncrease;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatCVar_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_JigHelperComp_C*                    CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetEquipmentUID_Value;                    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDurability_NewDur;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ServerFuncUpdateDurabilityByUID_NewDur;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_ReduceDurability) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_ReduceDurability");
static_assert(sizeof(BP_FirearmPickup_C_ReduceDurability) == 0x000088, "Wrong size on BP_FirearmPickup_C_ReduceDurability");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, Reduced_) == 0x000000, "Member 'BP_FirearmPickup_C_ReduceDurability::Reduced_' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, MalfunctionIncrease) == 0x000008, "Member 'BP_FirearmPickup_C_ReduceDurability::MalfunctionIncrease' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_GetFloatCVar_ReturnValue) == 0x000030, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_GetFloatCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000048, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_GetEquipmentUID_Value) == 0x000050, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_GetEquipmentUID_Value' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_GetBoolCVar_ReturnValue) == 0x000060, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_GetDurability_NewDur) == 0x000068, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_GetDurability_NewDur' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_ServerFuncUpdateDurabilityByUID_NewDur) == 0x000078, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_ServerFuncUpdateDurabilityByUID_NewDur' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_ReduceDurability, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000080, "Member 'BP_FirearmPickup_C_ReduceDurability::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.SERVER_DamageEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_FirearmPickup_C_SERVER_DamageEvent final
{
public:
	bool                                          Headshot;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamagedActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_SERVER_DamageEvent) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_SERVER_DamageEvent");
static_assert(sizeof(BP_FirearmPickup_C_SERVER_DamageEvent) == 0x000010, "Wrong size on BP_FirearmPickup_C_SERVER_DamageEvent");
static_assert(offsetof(BP_FirearmPickup_C_SERVER_DamageEvent, Headshot) == 0x000000, "Member 'BP_FirearmPickup_C_SERVER_DamageEvent::Headshot' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_SERVER_DamageEvent, DamagedActor) == 0x000008, "Member 'BP_FirearmPickup_C_SERVER_DamageEvent::DamagedActor' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.SpawnTrail
// 0x0070 (0x0070 - 0x0000)
struct BP_FirearmPickup_C_SpawnTrail final
{
public:
	struct FVector                                MuzzleLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPointLocation;                                  // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_SpawnTrail) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_SpawnTrail");
static_assert(sizeof(BP_FirearmPickup_C_SpawnTrail) == 0x000070, "Wrong size on BP_FirearmPickup_C_SpawnTrail");
static_assert(offsetof(BP_FirearmPickup_C_SpawnTrail, MuzzleLocation) == 0x000000, "Member 'BP_FirearmPickup_C_SpawnTrail::MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_SpawnTrail, EndPointLocation) == 0x000018, "Member 'BP_FirearmPickup_C_SpawnTrail::EndPointLocation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_SpawnTrail, Rotation) == 0x000030, "Member 'BP_FirearmPickup_C_SpawnTrail::Rotation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_SpawnTrail, CallFunc_GetBoolCVar_ReturnValue) == 0x000048, "Member 'BP_FirearmPickup_C_SpawnTrail::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_SpawnTrail, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000050, "Member 'BP_FirearmPickup_C_SpawnTrail::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_SpawnTrail, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_FirearmPickup_C_SpawnTrail::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_SpawnTrail, K2Node_DynamicCast_AsBP_Player_Character) == 0x000060, "Member 'BP_FirearmPickup_C_SpawnTrail::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_SpawnTrail, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_FirearmPickup_C_SpawnTrail::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Svr_SpawnTrail
// 0x0048 (0x0048 - 0x0000)
struct BP_FirearmPickup_C_Svr_SpawnTrail final
{
public:
	struct FVector                                MuzzleLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndPointLocation;                                  // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FirearmPickup_C_Svr_SpawnTrail) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Svr_SpawnTrail");
static_assert(sizeof(BP_FirearmPickup_C_Svr_SpawnTrail) == 0x000048, "Wrong size on BP_FirearmPickup_C_Svr_SpawnTrail");
static_assert(offsetof(BP_FirearmPickup_C_Svr_SpawnTrail, MuzzleLocation) == 0x000000, "Member 'BP_FirearmPickup_C_Svr_SpawnTrail::MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Svr_SpawnTrail, EndPointLocation) == 0x000018, "Member 'BP_FirearmPickup_C_Svr_SpawnTrail::EndPointLocation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Svr_SpawnTrail, Rotation) == 0x000030, "Member 'BP_FirearmPickup_C_Svr_SpawnTrail::Rotation' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Svr_WeaponEffects
// 0x0018 (0x0018 - 0x0000)
struct BP_FirearmPickup_C_Svr_WeaponEffects final
{
public:
	class UParticleSystem*                        EmitterTemplate;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachToComponent;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Svr_WeaponEffects) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Svr_WeaponEffects");
static_assert(sizeof(BP_FirearmPickup_C_Svr_WeaponEffects) == 0x000018, "Wrong size on BP_FirearmPickup_C_Svr_WeaponEffects");
static_assert(offsetof(BP_FirearmPickup_C_Svr_WeaponEffects, EmitterTemplate) == 0x000000, "Member 'BP_FirearmPickup_C_Svr_WeaponEffects::EmitterTemplate' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Svr_WeaponEffects, AttachToComponent) == 0x000008, "Member 'BP_FirearmPickup_C_Svr_WeaponEffects::AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Svr_WeaponEffects, AttachPointName) == 0x000010, "Member 'BP_FirearmPickup_C_Svr_WeaponEffects::AttachPointName' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Svr_WeaponShot
// 0x0001 (0x0001 - 0x0000)
struct BP_FirearmPickup_C_Svr_WeaponShot final
{
public:
	bool                                          Started_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Svr_WeaponShot) == 0x000001, "Wrong alignment on BP_FirearmPickup_C_Svr_WeaponShot");
static_assert(sizeof(BP_FirearmPickup_C_Svr_WeaponShot) == 0x000001, "Wrong size on BP_FirearmPickup_C_Svr_WeaponShot");
static_assert(offsetof(BP_FirearmPickup_C_Svr_WeaponShot, Started_) == 0x000000, "Member 'BP_FirearmPickup_C_Svr_WeaponShot::Started_' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Trace_BodyImpact
// 0x0038 (0x0038 - 0x0000)
struct BP_FirearmPickup_C_Trace_BodyImpact final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Actor;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Trace_BodyImpact) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Trace_BodyImpact");
static_assert(sizeof(BP_FirearmPickup_C_Trace_BodyImpact) == 0x000038, "Wrong size on BP_FirearmPickup_C_Trace_BodyImpact");
static_assert(offsetof(BP_FirearmPickup_C_Trace_BodyImpact, Location) == 0x000000, "Member 'BP_FirearmPickup_C_Trace_BodyImpact::Location' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Trace_BodyImpact, Rotation) == 0x000018, "Member 'BP_FirearmPickup_C_Trace_BodyImpact::Rotation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Trace_BodyImpact, Actor) == 0x000030, "Member 'BP_FirearmPickup_C_Trace_BodyImpact::Actor' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Trace_Headshot
// 0x0038 (0x0038 - 0x0000)
struct BP_FirearmPickup_C_Trace_Headshot final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Actor;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Trace_Headshot) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Trace_Headshot");
static_assert(sizeof(BP_FirearmPickup_C_Trace_Headshot) == 0x000038, "Wrong size on BP_FirearmPickup_C_Trace_Headshot");
static_assert(offsetof(BP_FirearmPickup_C_Trace_Headshot, Location) == 0x000000, "Member 'BP_FirearmPickup_C_Trace_Headshot::Location' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Trace_Headshot, Rotation) == 0x000018, "Member 'BP_FirearmPickup_C_Trace_Headshot::Rotation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Trace_Headshot, Actor) == 0x000030, "Member 'BP_FirearmPickup_C_Trace_Headshot::Actor' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Trace_Impact
// 0x0038 (0x0038 - 0x0000)
struct BP_FirearmPickup_C_Trace_Impact final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Actor;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Trace_Impact) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Trace_Impact");
static_assert(sizeof(BP_FirearmPickup_C_Trace_Impact) == 0x000038, "Wrong size on BP_FirearmPickup_C_Trace_Impact");
static_assert(offsetof(BP_FirearmPickup_C_Trace_Impact, Location) == 0x000000, "Member 'BP_FirearmPickup_C_Trace_Impact::Location' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Trace_Impact, Rotation) == 0x000018, "Member 'BP_FirearmPickup_C_Trace_Impact::Rotation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Trace_Impact, Actor) == 0x000030, "Member 'BP_FirearmPickup_C_Trace_Impact::Actor' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.Trace_ImpactBulletHole
// 0x0038 (0x0038 - 0x0000)
struct BP_FirearmPickup_C_Trace_ImpactBulletHole final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 Actor;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_Trace_ImpactBulletHole) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_Trace_ImpactBulletHole");
static_assert(sizeof(BP_FirearmPickup_C_Trace_ImpactBulletHole) == 0x000038, "Wrong size on BP_FirearmPickup_C_Trace_ImpactBulletHole");
static_assert(offsetof(BP_FirearmPickup_C_Trace_ImpactBulletHole, Location) == 0x000000, "Member 'BP_FirearmPickup_C_Trace_ImpactBulletHole::Location' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Trace_ImpactBulletHole, Rotation) == 0x000018, "Member 'BP_FirearmPickup_C_Trace_ImpactBulletHole::Rotation' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_Trace_ImpactBulletHole, Actor) == 0x000030, "Member 'BP_FirearmPickup_C_Trace_ImpactBulletHole::Actor' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.UpdatePlayerPitch&Yaw
// 0x0028 (0x0028 - 0x0000)
struct BP_FirearmPickup_C_UpdatePlayerPitch_Yaw final
{
public:
	double                                        Pitch;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_UpdatePlayerPitch_Yaw) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_UpdatePlayerPitch_Yaw");
static_assert(sizeof(BP_FirearmPickup_C_UpdatePlayerPitch_Yaw) == 0x000028, "Wrong size on BP_FirearmPickup_C_UpdatePlayerPitch_Yaw");
static_assert(offsetof(BP_FirearmPickup_C_UpdatePlayerPitch_Yaw, Pitch) == 0x000000, "Member 'BP_FirearmPickup_C_UpdatePlayerPitch_Yaw::Pitch' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdatePlayerPitch_Yaw, Yaw) == 0x000008, "Member 'BP_FirearmPickup_C_UpdatePlayerPitch_Yaw::Yaw' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdatePlayerPitch_Yaw, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'BP_FirearmPickup_C_UpdatePlayerPitch_Yaw::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdatePlayerPitch_Yaw, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_FirearmPickup_C_UpdatePlayerPitch_Yaw::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdatePlayerPitch_Yaw, CallFunc_AddControllerPitchInput_Val_ImplicitCast) == 0x00001C, "Member 'BP_FirearmPickup_C_UpdatePlayerPitch_Yaw::CallFunc_AddControllerPitchInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdatePlayerPitch_Yaw, CallFunc_AddControllerYawInput_Val_ImplicitCast) == 0x000020, "Member 'BP_FirearmPickup_C_UpdatePlayerPitch_Yaw::CallFunc_AddControllerYawInput_Val_ImplicitCast' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.UpdateStat
// 0x0148 (0x0148 - 0x0000)
struct BP_FirearmPickup_C_UpdateStat final
{
public:
	struct FGameplayTag                           StatTag;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        NewStatValue;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Updated;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StatValue;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPickup_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_IsValidPickup_PickupInfo;                 // 0x0038(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	class UJSI_Slot_C*                            CallFunc_FindItemByUID_Found;                      // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStatByName_Found;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemStat                            CallFunc_GetStatByName_Stat;                       // 0x0120(0x0028)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_UpdateStat) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_UpdateStat");
static_assert(sizeof(BP_FirearmPickup_C_UpdateStat) == 0x000148, "Wrong size on BP_FirearmPickup_C_UpdateStat");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, StatTag) == 0x000000, "Member 'BP_FirearmPickup_C_UpdateStat::StatTag' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, NewStatValue) == 0x000008, "Member 'BP_FirearmPickup_C_UpdateStat::NewStatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, Updated) == 0x000010, "Member 'BP_FirearmPickup_C_UpdateStat::Updated' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, StatValue) == 0x000018, "Member 'BP_FirearmPickup_C_UpdateStat::StatValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_FirearmPickup_C_UpdateStat::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_UpdateStat::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, CallFunc_IsValidPickup_ReturnValue) == 0x000030, "Member 'BP_FirearmPickup_C_UpdateStat::CallFunc_IsValidPickup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, CallFunc_IsValidPickup_PickupInfo) == 0x000038, "Member 'BP_FirearmPickup_C_UpdateStat::CallFunc_IsValidPickup_PickupInfo' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, CallFunc_FindItemByUID_Found) == 0x000110, "Member 'BP_FirearmPickup_C_UpdateStat::CallFunc_FindItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, CallFunc_GetStatByName_Found) == 0x000118, "Member 'BP_FirearmPickup_C_UpdateStat::CallFunc_GetStatByName_Found' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_UpdateStat, CallFunc_GetStatByName_Stat) == 0x000120, "Member 'BP_FirearmPickup_C_UpdateStat::CallFunc_GetStatByName_Stat' has a wrong offset!");

// Function BP_FirearmPickup.BP_FirearmPickup_C.WeaponRecoilValues
// 0x0118 (0x0118 - 0x0000)
struct BP_FirearmPickup_C_WeaponRecoilValues final
{
public:
	double                                        Vertical;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Horizontal;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetVerticalRecoilStrength_Strength;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHorizontalRecoilStrength_Strength;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHorizontalRecoilStrength_Strength_1;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetVerticalRecoilStrength_Strength_1;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_2;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast_1;       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FirearmPickup_C_WeaponRecoilValues) == 0x000008, "Wrong alignment on BP_FirearmPickup_C_WeaponRecoilValues");
static_assert(sizeof(BP_FirearmPickup_C_WeaponRecoilValues) == 0x000118, "Wrong size on BP_FirearmPickup_C_WeaponRecoilValues");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, Vertical) == 0x000000, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::Vertical' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, Horizontal) == 0x000008, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::Horizontal' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_GetVerticalRecoilStrength_Strength) == 0x000010, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_GetVerticalRecoilStrength_Strength' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_GetHorizontalRecoilStrength_Strength) == 0x000018, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_GetHorizontalRecoilStrength_Strength' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_GetHorizontalRecoilStrength_Strength_1) == 0x000020, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_GetHorizontalRecoilStrength_Strength_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000028, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_IsCrouching_ReturnValue) == 0x000040, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_GetVerticalRecoilStrength_Strength_1) == 0x000048, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_GetVerticalRecoilStrength_Strength_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue_1) == 0x000050, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_RandomBool_ReturnValue) == 0x000058, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue_2) == 0x000068, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue_3) == 0x000070, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000078, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_IsCrouching_ReturnValue_1) == 0x000088, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_IsCrouching_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue_4) == 0x000090, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue_5) == 0x0000A0, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_RandomBool_ReturnValue_1) == 0x0000A8, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000B0, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000B8, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue_6) == 0x0000C0, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_RandomBool_ReturnValue_2) == 0x0000C8, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_RandomBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue_7) == 0x0000D8, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000E0, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SelectFloat_ReturnValue_8) == 0x0000F0, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000F8, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000100, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000108, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000110, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FirearmPickup_C_WeaponRecoilValues, CallFunc_SetPlayRate_NewRate_ImplicitCast_1) == 0x000114, "Member 'BP_FirearmPickup_C_WeaponRecoilValues::CallFunc_SetPlayRate_NewRate_ImplicitCast_1' has a wrong offset!");

}

