#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LaboratoryCircuitBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_LaboratoryMaster_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LaboratoryCircuitBox.BP_LaboratoryCircuitBox_C
// 0x0090 (0x0338 - 0x02A8)
class ABP_LaboratoryCircuitBox_C final : public ABP_LaboratoryMaster_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lever2;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lever1;                                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Box;                                               // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_DoorReverse_Alpha_32903F654EFB3E23861D8FA9C3DB73BA; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_DoorReverse__Direction_32903F654EFB3E23861D8FA9C3DB73BA; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_DoorReverse;                                    // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_Levers_Alpha_A96446E54BFE434078A866AB8C3CFBA0;  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_Levers__Direction_A96446E54BFE434078A866AB8C3CFBA0; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_Levers;                                         // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_Alpha_8D87B80249CBA6091D3C27ABC96F0753;   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_8D87B80249CBA6091D3C27ABC96F0753; // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          DoorClosed_;                                       // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_LaboratorySlidingDoor_C*>    Doors;                                             // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          DamageToActivate_;                                 // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanInteract_;                                      // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_LaboratoryLightSwitch_C*>    LightSwitches;                                     // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)

public:
	void UserConstructionScript();
	void TL_Levers__UpdateFunc();
	void TL_Levers__FinishedFunc();
	void TL_DoorReverse__UpdateFunc();
	void TL_DoorReverse__FinishedFunc();
	void Timeline__UpdateFunc();
	void Timeline__FinishedFunc();
	void SetPickupCount(int32 NewCount, bool* Result);
	void SetInteractOption(const struct FGameplayTag& Option);
	void PickupBuildFromGround();
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnExecuteInteractEnded();
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnEndInteract();
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void JigCanInteract(bool* Result);
	void IsObjectDamageable_(bool* Damageable_);
	void GetMainSceneComp(class USceneComponent** Comp);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void ExecuteUbergraph_BP_LaboratoryCircuitBox(int32 EntryPoint);
	void Event_Door();
	void Damage_Shoved(bool Anim, double Force);
	void Damage_Object(double Damage, class AActor* Damage_Causer, class AController* Event_Instigator);
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LaboratoryCircuitBox_C">();
	}
	static class ABP_LaboratoryCircuitBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LaboratoryCircuitBox_C>();
	}
};
static_assert(alignof(ABP_LaboratoryCircuitBox_C) == 0x000008, "Wrong alignment on ABP_LaboratoryCircuitBox_C");
static_assert(sizeof(ABP_LaboratoryCircuitBox_C) == 0x000338, "Wrong size on ABP_LaboratoryCircuitBox_C");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_LaboratoryCircuitBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, ParticleSystem) == 0x0002B0, "Member 'ABP_LaboratoryCircuitBox_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, Lever2) == 0x0002B8, "Member 'ABP_LaboratoryCircuitBox_C::Lever2' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, Lever1) == 0x0002C0, "Member 'ABP_LaboratoryCircuitBox_C::Lever1' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, Door) == 0x0002C8, "Member 'ABP_LaboratoryCircuitBox_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, Box) == 0x0002D0, "Member 'ABP_LaboratoryCircuitBox_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, TL_DoorReverse_Alpha_32903F654EFB3E23861D8FA9C3DB73BA) == 0x0002D8, "Member 'ABP_LaboratoryCircuitBox_C::TL_DoorReverse_Alpha_32903F654EFB3E23861D8FA9C3DB73BA' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, TL_DoorReverse__Direction_32903F654EFB3E23861D8FA9C3DB73BA) == 0x0002DC, "Member 'ABP_LaboratoryCircuitBox_C::TL_DoorReverse__Direction_32903F654EFB3E23861D8FA9C3DB73BA' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, TL_DoorReverse) == 0x0002E0, "Member 'ABP_LaboratoryCircuitBox_C::TL_DoorReverse' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, TL_Levers_Alpha_A96446E54BFE434078A866AB8C3CFBA0) == 0x0002E8, "Member 'ABP_LaboratoryCircuitBox_C::TL_Levers_Alpha_A96446E54BFE434078A866AB8C3CFBA0' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, TL_Levers__Direction_A96446E54BFE434078A866AB8C3CFBA0) == 0x0002EC, "Member 'ABP_LaboratoryCircuitBox_C::TL_Levers__Direction_A96446E54BFE434078A866AB8C3CFBA0' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, TL_Levers) == 0x0002F0, "Member 'ABP_LaboratoryCircuitBox_C::TL_Levers' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, Timeline_Alpha_8D87B80249CBA6091D3C27ABC96F0753) == 0x0002F8, "Member 'ABP_LaboratoryCircuitBox_C::Timeline_Alpha_8D87B80249CBA6091D3C27ABC96F0753' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, Timeline__Direction_8D87B80249CBA6091D3C27ABC96F0753) == 0x0002FC, "Member 'ABP_LaboratoryCircuitBox_C::Timeline__Direction_8D87B80249CBA6091D3C27ABC96F0753' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, Timeline) == 0x000300, "Member 'ABP_LaboratoryCircuitBox_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, DoorClosed_) == 0x000308, "Member 'ABP_LaboratoryCircuitBox_C::DoorClosed_' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, Doors) == 0x000310, "Member 'ABP_LaboratoryCircuitBox_C::Doors' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, DamageToActivate_) == 0x000320, "Member 'ABP_LaboratoryCircuitBox_C::DamageToActivate_' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, CanInteract_) == 0x000321, "Member 'ABP_LaboratoryCircuitBox_C::CanInteract_' has a wrong offset!");
static_assert(offsetof(ABP_LaboratoryCircuitBox_C, LightSwitches) == 0x000328, "Member 'ABP_LaboratoryCircuitBox_C::LightSwitches' has a wrong offset!");

}

