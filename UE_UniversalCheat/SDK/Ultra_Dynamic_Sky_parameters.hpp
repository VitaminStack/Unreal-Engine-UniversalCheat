#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Sky

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UDS_RenderingFeatureLevel_structs.hpp"
#include "Engine_structs.hpp"
#include "UDS_Modifier_Color_Property_structs.hpp"
#include "UDS_Modifier_Float_Property_structs.hpp"
#include "UDS_CachedProperties_structs.hpp"
#include "UDS_FogColorMode_structs.hpp"
#include "UDS_SkyMode_structs.hpp"
#include "UDS_RunContext_structs.hpp"
#include "UDS_Cache_Group_structs.hpp"
#include "RadialStorm_CoverageBrush_structs.hpp"
#include "UDS_Space_Planet_structs.hpp"
#include "UDS_Planet_Lightsource_structs.hpp"
#include "UDS_Space_Parent_structs.hpp"
#include "UDS_Post_Process_Stage_structs.hpp"
#include "UDS_CityPresets_structs.hpp"
#include "UDS_LensFlareType_structs.hpp"
#include "UDS_VolRT_Mode_structs.hpp"
#include "UDS_and_UDW_State_structs.hpp"
#include "UDW_WeatherState_Structure_structs.hpp"


namespace SDK::Params
{

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.2D Clouds Shading Offset Vector
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector final
{
public:
	struct FLinearColor                           LinearColor;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector) == 0x0000B0, "Wrong size on Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, LinearColor) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_SelectVector_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_Abs_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_BreakVector_X_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, CallFunc_MapRangeClamped_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, K2Node_MakeStruct_LinearColor) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, K2Node_MakeStruct_R_ImplicitCast) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, K2Node_MakeStruct_G_ImplicitCast) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, K2Node_MakeStruct_B_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector, K2Node_MakeStruct_A_ImplicitCast) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Shading_Offset_Vector::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.3 Color Time Blend
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Three_Color_Time_Blend final
{
public:
	struct FLinearColor                           Day_Color;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dusk_Color;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Night_Color;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out;                                               // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Three_Color_Time_Blend");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Three_Color_Time_Blend");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, Day_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::Day_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, Dusk_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::Dusk_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, Night_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::Night_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, Out) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, CallFunc_Sun_Height_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, CallFunc_LinearColorLerp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Color_Time_Blend, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Three_Color_Time_Blend::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Absent Directional Lights Brightness
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Twilight_Brightness_Falloff_Scale;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Twilight_Brightness_Falloff_Scale) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Twilight_Brightness_Falloff_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Add Constructed Components
// 0x02F0 (0x02F0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Add_Constructed_Components final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     CallFunc_AddComponent_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_2;               // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_2;                            // 0x0150(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_PlayerOcclusion_C*                 CallFunc_AddComponent_ReturnValue_3;               // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0xF];                                      // 0x01E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_4;               // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0xB];                                      // 0x0265(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_3;                            // 0x0270(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_5;               // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x02E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Add_Constructed_Components) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Add_Constructed_Components");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Add_Constructed_Components) == 0x0002F0, "Wrong size on Ultra_Dynamic_Sky_C_Add_Constructed_Components");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, Temp_struct_Variable_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_AddComponent_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_AddComponent_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_2) == 0x0000D2, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_3) == 0x0000D3, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_AddComponent_ReturnValue_2) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, Temp_struct_Variable_2) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_BooleanAND_ReturnValue) == 0x0001B1, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_AddComponent_ReturnValue_3) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_AddComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_4) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_5) == 0x0001C1, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_6) == 0x0001C2, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_7) == 0x0001C3, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001C4, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_MakeRotator_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_MakeTransform_ReturnValue_1) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_BooleanAND_ReturnValue_2) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_AddComponent_ReturnValue_4) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_AddComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_8) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_9) == 0x000261, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_BooleanOR_ReturnValue) == 0x000262, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_BooleanOR_ReturnValue_1) == 0x000263, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000264, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, Temp_struct_Variable_3) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_BooleanAND_ReturnValue_3) == 0x0002D1, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_AddComponent_ReturnValue_5) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_AddComponent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_BooleanAND_ReturnValue_4) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_BooleanAND_ReturnValue_5) == 0x0002E1, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_10) == 0x0002E2, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_IsValid_ReturnValue_11) == 0x0002E3, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Constructed_Components, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002E4, "Member 'Ultra_Dynamic_Sky_C_Add_Constructed_Components::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Add Modifier
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Add_Modifier final
{
public:
	class UUDS_Modifier_C*                        Modifier;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Fade_In_Time;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Modifier_Index;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Add_Modifier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Add_Modifier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Add_Modifier) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Add_Modifier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, Modifier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::Modifier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, Fade_In_Time) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::Fade_In_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, Modifier_Index) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::Modifier_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, Temp_real_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, Temp_real_Variable_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000032, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, Temp_real_Variable_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_SafeDivide_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_Array_Find_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_SafeDivide_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_Array_Add_ReturnValue_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_Array_Add_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_Array_Add_ReturnValue_3) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Modifier, CallFunc_Array_Contains_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Add_Modifier::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Add Object to Async Loading Queue
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue final
{
public:
	TSoftObjectPtr<class UObject>                 Object;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          High_Priority;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, Object) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, High_Priority) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::High_Priority' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Array_Contains_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003A, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Array_Contains_ReturnValue_1) == 0x00003B, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Not_PreBool_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_BooleanAND_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Add Static Post Process Materials
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0068(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials, K2Node_MakeStruct_WeightedBlendables) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_Add_Static_Post_Process_Materials::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Adjust Base Sun Light Intensity
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity final
{
public:
	struct FVector                                Sun_Vector;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Multiplier;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, Sun_Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, Intensity) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, Multiplier) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_FMin_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Adjust for World Origin Rebasing
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue;       // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue;       // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue_1;     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue_1;     // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing, CallFunc_GetWorldOriginLocation_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing::CallFunc_GetWorldOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing, CallFunc_Conv_IntVectorToVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing::CallFunc_Conv_IntVectorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing, CallFunc_GetWorldOriginLocation_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing::CallFunc_GetWorldOriginLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing, CallFunc_Conv_IntVectorToVector_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing::CallFunc_Conv_IntVectorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Adjust_for_World_Origin_Rebasing::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.All Volumetric Cloud MIDs
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs final
{
public:
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UMaterialInstanceDynamic*>       All_MIDs;                                          // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, MIDs) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, All_MIDs) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::All_MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_2) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_3) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Applied Cloud Speed
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Applied_Cloud_Speed final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Applied_Cloud_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Applied_Cloud_Speed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Applied_Cloud_Speed) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Applied_Cloud_Speed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Applied_Cloud_Speed, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Applied_Cloud_Speed::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Applied_Cloud_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Applied_Cloud_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Console Variable with Check
// 0x0110 (0x0110 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check final
{
public:
	class FString                                 CVar;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        setting;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Existing_Int;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Existing_Float;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Existing_Bool;                                     // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue_2;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Add_Value_ImplicitCast;               // 0x0100(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check) == 0x000110, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CVar) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CVar' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, setting) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::setting' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Type) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Existing_Int) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Existing_Int' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Existing_Float) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Existing_Float' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Existing_Bool) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Existing_Bool' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, K2Node_SwitchInteger_CmpSuccess) == 0x000025, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Map_Contains_ReturnValue) == 0x000026, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Not_PreBool_ReturnValue) == 0x000027, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Map_Contains_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Not_PreBool_ReturnValue_1) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Map_Contains_ReturnValue_2) == 0x00002A, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Map_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Not_PreBool_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_FTrunc_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_FTrunc_ReturnValue_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000B9, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000F9, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Map_Add_Value_ImplicitCast) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Map_Add_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Editor Weather Override
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override final
{
public:
	bool                                          Override_Dust;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Fog;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Override_Cloud_Coverage;                           // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cloud_Coverage_0_10_Cloud_Coverage;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Fog;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Dust;       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage_1; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Fog_1;      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Dust_1;     // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage_2; // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Fog_2;      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_UDS_Weather_Override_Bool_Dust_2;     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UDS_Weather_Variable_Overrides_Success;   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, Override_Dust) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::Override_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, Override_Fog) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::Override_Fog' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, Override_Cloud_Coverage) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::Override_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_Cloud_Coverage_0_10_Cloud_Coverage) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_Cloud_Coverage_0_10_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Fog) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Fog' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Dust) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage_1) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Fog_1) == 0x00003A, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Fog_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Dust_1) == 0x00003B, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Dust_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage_2) == 0x000052, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Cloud_Coverage_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Fog_2) == 0x000053, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Fog_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_Get_UDS_Weather_Override_Bool_Dust_2) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_Get_UDS_Weather_Override_Bool_Dust_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_BooleanOR_ReturnValue) == 0x000055, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_BooleanOR_ReturnValue_1) == 0x000069, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_UDS_Weather_Variable_Overrides_Success) == 0x00006A, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_UDS_Weather_Variable_Overrides_Success' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00006B, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x00006E, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x00006F, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_BooleanAND_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000072, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_IsValid_ReturnValue) == 0x000073, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override, CallFunc_BooleanAND_ReturnValue_2) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Apply_Editor_Weather_Override::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Feature Level Mode Changes
// 0x0120 (0x0120 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes final
{
public:
	bool                                          Made_Changes;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Changes_Applied;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUDS_RenderingFeatureLevel                    CallFunc_Map_Find_Value;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes) == 0x000120, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, Made_Changes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::Made_Changes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, Changes_Applied) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::Changes_Applied' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Map_Find_Value) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Map_Find_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, K2Node_SwitchEnum_CmpSuccess) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000119, "Member 'Ultra_Dynamic_Sky_C_Apply_Feature_Level_Mode_Changes::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Light Shaft Settings
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings final
{
public:
	class UDirectionalLightComponent*             Light;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Max_Brightness;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Bloom_Threshold;                                   // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Bloom_Scale;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward_Vector;                                    // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height_Alpha;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomScale_NewValue_ImplicitCast;      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomThreshold_NewValue_ImplicitCast;  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings) == 0x000100, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Light) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Light' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Max_Brightness) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Max_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Bloom_Threshold) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Bloom_Threshold' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Bloom_Scale) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Bloom_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Forward_Vector) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Forward_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Height_Alpha) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Height_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_X) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_Y) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_Z) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_MapRangeClamped_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_X_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_Lerp_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_X_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_Y_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_Lerp_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_X_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_Y_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_Lerp_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_SetBloomScale_NewValue_ImplicitCast) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_SetBloomScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_SetBloomThreshold_NewValue_ImplicitCast) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_SetBloomThreshold_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Location Preset
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Location_Preset final
{
public:
	EUDS_CityPresets                              Location;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Location_Preset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Location_Preset");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Location_Preset) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Location_Preset");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_Map_Find_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector_Z' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Modifier Property Overrides
// 0x0138 (0x0138 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides final
{
public:
	class UUDS_Modifier_C*                        Modifier;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Property_Index;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Color_Property                  Current_Color_Property;                            // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Float_Property                  Current_Float_Property;                            // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Eased_Alpha;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Color_Property                  Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Color_Property                  Temp_byte_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Float_Property                  Temp_byte_Variable_2;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Float_Property                  Temp_byte_Variable_3;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Color_Property                  CallFunc_Array_Get_Item_3;                         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_4;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Float_Property                  CallFunc_Array_Get_Item_5;                         // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12E[0x2];                                      // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides) == 0x000138, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Modifier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Modifier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Alpha) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Property_Index) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Property_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Current_Color_Property) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Current_Color_Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Current_Float_Property) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Current_Float_Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Eased_Alpha) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Eased_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_byte_Variable) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_struct_Variable) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_byte_Variable_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_real_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_int_Array_Index_Variable) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_byte_Variable_2) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Get_Item) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Contains_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, K2Node_Select_Default) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_real_Variable_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Contains_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_byte_Variable_3) == 0x0000A1, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Ease_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, Temp_struct_Variable_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, K2Node_Select_Default_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_LinearColorLerp_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Get_Item_3) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, K2Node_Select_Default_2) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Get_Item_4) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, K2Node_Select_Default_3) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Lerp_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Array_Get_Item_5) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012D, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifier_Property_Overrides::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Modifiers
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Modifiers final
{
public:
	struct FTimerHandle                           Modifier_Tick_Timer;                               // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          Next_Frame_Needs_Update;                           // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        New_Alpha;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Modifier_Index;                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Modifier_C*                        CallFunc_Array_Get_Item_3;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_4;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_5;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_6;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Modifiers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Modifiers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Modifiers) == 0x0000D0, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Modifiers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, Modifier_Tick_Timer) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::Modifier_Tick_Timer' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, Next_Frame_Needs_Update) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::Next_Frame_Needs_Update' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, New_Alpha) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::New_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, Current_Modifier_Index) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::Current_Modifier_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Get_Item) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Get_Item_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Get_Item_4) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Get_Item_5) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, Temp_real_Variable) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_Get_Item_6) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_FInterpTo_Constant_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Modifiers, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Apply_Modifiers::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Saved UDS and UDW State
// 0x0240 (0x0240 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State final
{
public:
	struct FUDS_and_UDW_State                     State;                                             // 0x0000(0x0200)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UDW_State_Apply_Completed;                // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0x5];                                      // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State) == 0x000240, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, State) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_MapRangeClamped_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_IsValid_ReturnValue) == 0x000221, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_UDW_State_Apply_Completed) == 0x000222, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_UDW_State_Apply_Completed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakVector_X) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakVector_Y) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakVector_Z) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakVector_Z' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Starting Modifiers
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers final
{
public:
	double                                        Temp_real_Variable;                                // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue_1;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Modifier_C*                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Modifier_C*                        CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, Temp_real_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, Temp_real_Variable_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, Temp_real_Variable_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Runtime_Or_Initializing_ReturnValue_1) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Runtime_Or_Initializing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Add_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Add_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Get_Item) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Add_ReturnValue_3) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Apply_Starting_Modifiers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply System Time
// 0x00E0 (0x00E0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_System_Time final
{
public:
	int32                                         Time_Zone_Date_Offset;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Out_of_Range_Time_of_Day;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Date_and_Time_in_Daylight_Savings_Time_ReturnValue; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_1;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year_1;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month_1;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day_1;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour_1;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond_1;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_2;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year_2;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month_2;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day_2;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour_2;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute_2;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second_2;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond_2;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_System_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_System_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_System_Time) == 0x0000E0, "Wrong size on Ultra_Dynamic_Sky_C_Apply_System_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, Time_Zone_Date_Offset) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::Time_Zone_Date_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, Out_of_Range_Time_of_Day) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::Out_of_Range_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000016, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_SelectInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Is_Date_and_Time_in_Daylight_Savings_Time_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Is_Date_and_Time_in_Daylight_Savings_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_SelectInt_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BooleanAND_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_UtcNow_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_UtcNow_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_UtcNow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Year) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Month) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Day) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Hour) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Minute) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Second) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Millisecond) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Year_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Year_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Month_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Month_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Day_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Day_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Hour_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Hour_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Minute_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Minute_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Second_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Second_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Millisecond_1) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Millisecond_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_UtcNow_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_UtcNow_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Year_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Year_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Month_2) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Month_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Day_2) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Day_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Hour_2) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Hour_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Minute_2) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Minute_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Second_2) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Second_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_BreakDateTime_Millisecond_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_BreakDateTime_Millisecond_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_System_Time, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Apply_System_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Volumetric Mode
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode final
{
public:
	EUDS_VolRT_Mode                               Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_VolRT_Mode                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Mode) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_byte_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_2) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_Runtime_Or_Initializing_ReturnValue_1) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_Runtime_Or_Initializing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_SelectInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_BooleanAND_ReturnValue_1) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00001E, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_BooleanAND_ReturnValue_2) == 0x00001F, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, K2Node_Select_Default) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Approximate Real Sun Moon and Stars
// 0x0A50 (0x0A50 - 0x0000)
struct Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars final
{
public:
	double                                        Time_of_Day_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Only_Calculate_Sun;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Sun_Vector;                                        // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Vector;                                       // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Phase;                                        // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Phase_Alignment;                                   // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Celestial_Yaw;                                     // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Celestial_Orbit;                                   // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Equation_of_Time_Offset;                           // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Equation_of_Time_Curve;                            // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Lunar_Inclination_Cycle;                           // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Center;                                       // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lunar_Time;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Earth_Center;                                      // 0x00B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Moon_Real_Phase;                                   // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Alignment;                                    // 0x00D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Direction;                                    // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Celestial_North_Pole;                              // 0x0100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stars_Orbit;                                       // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Stars_Yaw;                                         // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Sun_Direction;                                     // 0x0130(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Year;                                          // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Zenith_Direction;                                  // 0x0150(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Axial_Tilt;                                        // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Viewer_Position_on_Earth;                          // 0x0170(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Local_Geocoordinate;                               // 0x0188(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Seasonal_Time;                                     // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_of_Year_Index;                                 // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Day;                                           // 0x01AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Month;                                         // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UTC_Time_of_Year;                                  // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UTC_Time_of_Day;                                   // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Number_of_Days_in_a_Year_Count;           // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Number_of_Days_in_a_Year_Count_1;         // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Day_Count_at_the_Start_of_a_Month_Count;  // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Days_Since_J2000_Days;                    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_3;        // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month; // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year; // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_5;                      // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_5;                     // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_5;                       // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0520(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0638(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_4; // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x06B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x06D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0700(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_12;          // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_13;          // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_5;                     // 0x07A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_14;          // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_15;          // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_16;          // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x07E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_6;                     // 0x0830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_5; // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_7;                     // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x0898(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x08B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_6; // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_17;          // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_18;          // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_3;         // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_8;                // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_9;                // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x0990(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_4;         // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_19;          // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_2;        // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_3;        // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F4[0x4];                                      // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast; // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0x4];                                      // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x0A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_3;           // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_4;           // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_5;           // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_6;           // 0x0A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_7;           // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_2;          // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars) == 0x000A50, "Wrong size on Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Time_of_Day_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Time_of_Day_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Only_Calculate_Sun) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Only_Calculate_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Sun_Vector) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Vector) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Real_Phase) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Phase_Alignment) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_Yaw) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_Orbit) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Equation_of_Time_Offset) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Equation_of_Time_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Equation_of_Time_Curve) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Equation_of_Time_Curve' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Lunar_Inclination_Cycle) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Lunar_Inclination_Cycle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Center) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Lunar_Time) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Lunar_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Earth_Center) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Earth_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Real_Phase) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Alignment) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Direction) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_North_Pole) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_North_Pole' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Stars_Orbit) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Stars_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Stars_Yaw) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Stars_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Sun_Direction) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Sun_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Year) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Zenith_Direction) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Zenith_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Axial_Tilt) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Axial_Tilt' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Viewer_Position_on_Earth) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Viewer_Position_on_Earth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Geocoordinate) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Geocoordinate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Seasonal_Time) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Seasonal_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Day_of_Year_Index) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Day_of_Year_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Day) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Month) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Time_of_Year) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Time_of_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Time_of_Day) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch) == 0x000204, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll_1) == 0x00020C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch_1) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw_1) == 0x000214, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll_2) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch_2) == 0x000234, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw_2) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_UtcNow_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Year) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Month) == 0x000254, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Day) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Hour) == 0x00025C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Minute) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Second) == 0x000264, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Millisecond) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Number_of_Days_in_a_Year_Count) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Number_of_Days_in_a_Year_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Number_of_Days_in_a_Year_Count_1) == 0x00027C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Number_of_Days_in_a_Year_Count_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Day_Count_at_the_Start_of_a_Month_Count) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Day_Count_at_the_Start_of_a_Month_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Days_Since_J2000_Days) == 0x0002A4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Days_Since_J2000_Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_K2_GetActorRotation_ReturnValue_3) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_K2_GetActorRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll_3) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch_3) == 0x0002D4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw_3) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BooleanOR_ReturnValue) == 0x0002DC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetFloatValue_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000321, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BooleanOR_ReturnValue_1) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month) == 0x000344, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year) == 0x00034C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Fraction_ReturnValue) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_1) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll_4) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch_4) == 0x000444, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw_4) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll_5) == 0x00044C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch_5) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw_5) == 0x000454, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_1) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_2) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Fraction_ReturnValue_1) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_2) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_RotateAngleAxis_ReturnValue) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_VectorVector_ReturnValue) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_3) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_1) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_2) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeVector_ReturnValue) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_4) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Dot_VectorVector_ReturnValue) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_4) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_DegAcos_ReturnValue) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_3) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0006A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x0006B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Cross_VectorVector_ReturnValue) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_4) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_X) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_Y) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_Z) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_LinearColor) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeClamped_ReturnValue) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_12) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_13) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetRightVector_ReturnValue) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_5) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_14) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_15) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_16) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_5) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_6) == 0x000830, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000848, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_5) == 0x000860, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_7) == 0x000878, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000890, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_6) == 0x000898, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_7) == 0x0008B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_6) == 0x0008C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0008E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0008F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000900, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_17) == 0x000908, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_18) == 0x000910, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000918, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_3) == 0x000920, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_8) == 0x000928, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000940, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue) == 0x000948, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_9) == 0x000960, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue_1) == 0x000978, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue_2) == 0x000990, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0009A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x0009B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_4) == 0x0009B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_19) == 0x0009C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x0009C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0009D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x0009D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_B_ImplicitCast_2) == 0x0009E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_B_ImplicitCast_3) == 0x0009E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0009F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast) == 0x0009F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000A00, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000A08, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000A10, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000A18, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x000A1C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000A20, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_3) == 0x000A24, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_A_ImplicitCast) == 0x000A28, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_R_ImplicitCast) == 0x000A2C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_G_ImplicitCast) == 0x000A30, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_B_ImplicitCast) == 0x000A34, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_4) == 0x000A38, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_5) == 0x000A3C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000A40, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_6) == 0x000A44, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_7) == 0x000A48, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast_2) == 0x000A4C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Color
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Color final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Set_Value;                                         // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Change_Tolerance;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0031(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Array_Get_Item_1;                         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_LinearColor_IsNearEqual_Tolerance_ImplicitCast; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Color) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Set_Value) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Change_Tolerance) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Change_Tolerance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Index_0) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Temp_bool_Variable) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Temp_bool_Variable_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Temp_bool_Variable_2) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002E, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002F, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Temp_bool_Variable_3) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Array_Get_Item) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, K2Node_SwitchEnum_CmpSuccess) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_LinearColor_IsNearEqual_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_LinearColor_IsNearEqual_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_LinearColor_IsNearEqual_Tolerance_ImplicitCast) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_LinearColor_IsNearEqual_Tolerance_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Float
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Float final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Set_Value;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Change_Tolerance;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0025(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0029(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Float) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Float");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Float) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Float");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Set_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Change_Tolerance) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Change_Tolerance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Index_0) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Temp_bool_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Temp_bool_Variable_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Temp_bool_Variable_2) == 0x000025, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000026, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000027, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Temp_bool_Variable_3) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Array_Get_Item) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Properties
// 0x04F0 (0x04F0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Properties final
{
public:
	int32                                         Cache_Group;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Starting_Cache_Fill;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Current_Cache_Group;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Effective_Illumination_0_1_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Time_of_Day_Offset_Per_Second;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filtered_Night_Brightness_Multiplier; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Cloud_Light_Color_Out;         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplfied_Color_Sun_Scattering_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out;                   // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Directional_Light_Casting_Shadows_Yes; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Directional_Light_Casting_Shadows_Yes_1; // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Directional_Inscattering_Multiplier_Multiplier; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Specular_Scale_ReturnValue;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Moon_Scattering_Color_ReturnValue; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_2D_Clouds_Shading_Offset_Vector_LinearColor; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Multiscattering_Phase_1_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Directional_Source_Angle_Out;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Source_Angle_Out_1;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Filtered_Moon_Light_Intensity_Intensity;  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Overcast_Turbulence_Strength_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Static_Clouds_Tint_Color_Light;           // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Static_Clouds_Tint_Color_Shadow;          // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Sky_Atmo_Contribution_ReturnValue; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Cloud_Fog_Post_Process_Color_ReturnValue; // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Multiscattering_Intensity_Out; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Cloud_Wisps_Color_Out;            // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Atmosphere_Absorption_Color_out; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Inner_Emit_Limit_Out; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moons_Cloud_Mask_ReturnValue;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Shadows_Light_Vector_And_Cancel_Value_Vector; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Shadows_Light_Vector_And_Cancel_Value_Cancel_Value; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Scale_Scale;                 // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Solar_Eclipse_Values_Eclipse_Percent; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Solar_Eclipse_Values_Tint_Color;  // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Space_Layer_Brightness_ReturnValue; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Wisp_Gradient_Vector_Out;           // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_View_Sample_Scale_out;            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue; // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Height_Clear; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Height_Cloudy; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Color;   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Light_Ray_Strength_and_Color_Ray_Strength; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Light_Ray_Strength_and_Color_Ray_Color; // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Static_Clouds_Lighting_Mask_XY_Mask;      // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Clouds_Density_Out;    // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha;  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Max_Trace_Distance_Out;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom; // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top; // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue; // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue; // 0x02CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Mie_Scattering_Scale_ReturnValue; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Mie_Anisotropy_ReturnValue;       // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue; // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity; // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color; // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Light_Specular_Scale_ReturnValue;    // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Light_Color_Color;           // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color; // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sky_Atmosphere_Fog_Contribution_Output;   // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color; // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color; // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fog_Start_Distance_ReturnValue;           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fog_Height_Falloff_ReturnValue;           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Fog_Density_ReturnValue;          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sun_Light_Color_ReturnValue;      // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Light_Intensity_ReturnValue;  // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z_1;                           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z_2;                           // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Aurora_Intensity_ReturnValue;     // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Stars_Color_ReturnValue;          // 0x03FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Sun_Radius_ReturnValue;           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sun_Disk_Color_ReturnValue;       // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Sun_Glow_Color_Out;            // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out_1;                 // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out_2;                 // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Exposure_Bias_Bias;               // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lit_Intensity_ReturnValue;        // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Overall_Intensity_ReturnValue;    // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Light_Material_Color_ReturnValue; // 0x0474(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Moon_Material_Intensity_ReturnValue; // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Phase_Angle_ReturnValue;     // 0x0498(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Unfiltered_Moon_Light_Intensity_Out;      // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Wisps_Opacity_ReturnValue;        // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cache_Float_Set_Value_ImplicitCast;       // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Cached_Height_Fog_Density_ImplicitCast; // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cache_Float_Set_Value_ImplicitCast_1;     // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Properties) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Properties");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Properties) == 0x0004F0, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Properties");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, Cache_Group) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::Cache_Group' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, Starting_Cache_Fill) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::Starting_Cache_Fill' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, Current_Cache_Group) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::Current_Cache_Group' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Moon_Effective_Illumination_0_1_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Moon_Effective_Illumination_0_1_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Time_of_Day_Offset_Per_Second) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Time_of_Day_Offset_Per_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Directional_Light_Dimming_Out) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Night_Filtered_Night_Brightness_Multiplier) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Night_Filtered_Night_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Cloud_Light_Color_Out) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Cloud_Light_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplfied_Color_Sun_Scattering_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplfied_Color_Sun_Scattering_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_3_Color_Time_Blend_Out) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_3_Color_Time_Blend_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Is_Directional_Light_Casting_Shadows_Yes) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Is_Directional_Light_Casting_Shadows_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Is_Directional_Light_Casting_Shadows_Yes_1) == 0x0000D1, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Is_Directional_Light_Casting_Shadows_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Directional_Inscattering_Multiplier_Multiplier) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Directional_Inscattering_Multiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Specular_Scale_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Specular_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Moon_Scattering_Color_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Moon_Scattering_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_2D_Clouds_Shading_Offset_Vector_LinearColor) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_2D_Clouds_Shading_Offset_Vector_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Multiscattering_Phase_1_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Multiscattering_Phase_1_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, K2Node_SwitchInteger_CmpSuccess) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Directional_Source_Angle_Out) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Directional_Source_Angle_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Directional_Source_Angle_Out_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Directional_Source_Angle_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Filtered_Moon_Light_Intensity_Intensity) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Filtered_Moon_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, K2Node_SwitchEnum_CmpSuccess) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Overcast_Turbulence_Strength_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Overcast_Turbulence_Strength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Static_Clouds_Tint_Color_Light) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Static_Clouds_Tint_Color_Light' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Static_Clouds_Tint_Color_Shadow) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Static_Clouds_Tint_Color_Shadow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Sky_Atmo_Contribution_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Sky_Atmo_Contribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Cloud_Fog_Post_Process_Color_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Cloud_Fog_Post_Process_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Multiscattering_Intensity_Out) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Multiscattering_Intensity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Cloud_Wisps_Color_Out) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Cloud_Wisps_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Atmosphere_Absorption_Color_out) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Atmosphere_Absorption_Color_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Inner_Emit_Limit_Out) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Inner_Emit_Limit_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moons_Cloud_Mask_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moons_Cloud_Mask_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Shadows_Light_Vector_And_Cancel_Value_Vector) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Shadows_Light_Vector_And_Cancel_Value_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Shadows_Light_Vector_And_Cancel_Value_Cancel_Value) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Shadows_Light_Vector_And_Cancel_Value_Cancel_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Scale_Scale) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Scale_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Solar_Eclipse_Values_Eclipse_Percent) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Solar_Eclipse_Values_Eclipse_Percent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Solar_Eclipse_Values_Tint_Color) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Solar_Eclipse_Values_Tint_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Space_Layer_Brightness_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Space_Layer_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Wisp_Gradient_Vector_Out) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Wisp_Gradient_Vector_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_View_Sample_Scale_out) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_View_Sample_Scale_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Floor_Variation_Height_Clear) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Floor_Variation_Height_Clear' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Floor_Variation_Height_Cloudy) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Floor_Variation_Height_Cloudy' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Floor_Variation_Color) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Floor_Variation_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Light_Ray_Strength_and_Color_Ray_Strength) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Light_Ray_Strength_and_Color_Ray_Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Light_Ray_Strength_and_Color_Ray_Color) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Light_Ray_Strength_and_Color_Ray_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Static_Clouds_Lighting_Mask_XY_Mask) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Static_Clouds_Lighting_Mask_XY_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Clouds_Density_Out) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Clouds_Density_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Max_Trace_Distance_Out) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Max_Trace_Distance_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue) == 0x0002CC, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Mie_Scattering_Scale_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Mie_Scattering_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Mie_Anisotropy_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Mie_Anisotropy_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Moon_Light_Specular_Scale_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Moon_Light_Specular_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Light_Color_Color) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Light_Color_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sky_Atmosphere_Fog_Contribution_Output) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sky_Atmosphere_Fog_Contribution_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Fog_Start_Distance_ReturnValue) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Fog_Start_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Fog_Height_Falloff_ReturnValue) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Fog_Height_Falloff_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Density_ReturnValue) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Light_Color_ReturnValue) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Light_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Light_Intensity_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Light_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z_1) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue_1) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z_2) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Aurora_Intensity_ReturnValue) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Aurora_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue_2) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Stars_Color_ReturnValue) == 0x0003FC, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Stars_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Radius_ReturnValue) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Radius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Disk_Color_ReturnValue) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Disk_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Sun_Glow_Color_Out) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Sun_Glow_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_3_Color_Time_Blend_Out_1) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_3_Color_Time_Blend_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_3_Color_Time_Blend_Out_2) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_3_Color_Time_Blend_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Exposure_Bias_Bias) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Exposure_Bias_Bias' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Lit_Intensity_ReturnValue) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Lit_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Overall_Intensity_ReturnValue) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, Temp_int_Variable) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Light_Material_Color_ReturnValue) == 0x000474, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Light_Material_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000484, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Add_IntInt_ReturnValue) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Material_Intensity_ReturnValue) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Material_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Phase_Angle_ReturnValue) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Phase_Angle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Unfiltered_Moon_Light_Intensity_Out) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Unfiltered_Moon_Light_Intensity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Wisps_Opacity_ReturnValue) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Wisps_Opacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cache_Float_Set_Value_ImplicitCast) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cache_Float_Set_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, K2Node_VariableSet_Cached_Height_Fog_Density_ImplicitCast) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::K2Node_VariableSet_Cached_Height_Fog_Density_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0004C4, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cache_Float_Set_Value_ImplicitCast_1) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cache_Float_Set_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Sun and Moon Orientation
// 0x05B8 (0x05B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation final
{
public:
	struct FVector                                Extend_Dawn_Dusk_Multiplier;                       // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Alignment;                                    // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Moon_Phase;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Moon_Position;                                // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Sun_Position;                                 // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_3;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x5];                                      // 0x017B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector; // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector; // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase; // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment; // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw; // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit; // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_4; // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_5; // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_4;            // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0548(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3;  // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4;  // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation) == 0x0005B8, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Extend_Dawn_Dusk_Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Extend_Dawn_Dusk_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Moon_Alignment) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Moon_Phase) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Moon_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Moon_Position) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Moon_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Sun_Position) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Sun_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakRotator_Roll_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakRotator_Pitch_1) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakRotator_Yaw_1) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_K2_GetActorRotation_ReturnValue_3) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_K2_GetActorRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Not_PreBool_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000179, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanAND_ReturnValue) == 0x00017A, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotFromX_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GetUpVector_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_1) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeLiteralByte_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Array_Get_Item) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Array_Get_Item_1) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_LinearColor) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Round_ReturnValue) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue_1) == 0x000279, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanAND_ReturnValue_1) == 0x00027A, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00027B, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue_2) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_ReturnValue) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Fraction_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_2) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_2) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_2) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Fraction_ReturnValue_1) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Abs_ReturnValue) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue_2) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Lerp_ReturnValue) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue_1) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_ReturnValue_1) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_4) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_5) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Night_Filter_ReturnValue) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_4) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_3) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_3) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_3) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue_2) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_R_ImplicitCast) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_G_ImplicitCast) == 0x00058C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_B_ImplicitCast) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_A_ImplicitCast) == 0x000594, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00059C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x0005A4, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3) == 0x0005AC, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x0005B4, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Timer And Update Speed
// 0x0150 (0x0150 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed final
{
public:
	bool                                          Hard_Cache_Reset;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Update_Delta_Time;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        New_Combined_Change_Speed;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Last_Frame_Change_Speed;                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Moon_Cache_Delta_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_4;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_5;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_2;                       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed) == 0x000150, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, Hard_Cache_Reset) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::Hard_Cache_Reset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, Update_Delta_Time) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::Update_Delta_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, New_Combined_Change_Speed) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::New_Combined_Change_Speed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, Last_Frame_Change_Speed) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::Last_Frame_Change_Speed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Current_Sun_Moon_Cache_Delta_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Current_Sun_Moon_Cache_Delta_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMin_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMax_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMax_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMax_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMax_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_SelectFloat_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C1, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FInterpTo_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMax_ReturnValue_5) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_SelectFloat_ReturnValue_2) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FCeil_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMin_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Clamp_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FClamp_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_FMin_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_BooleanAND_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_SelectFloat_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_Max_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed, CallFunc_SelectInt_ReturnValue) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Cache_Timer_And_Update_Speed::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Vector
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Vector final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Set_Value;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Change_Tolerance;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0035(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0039(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EqualEqual_VectorVector_ErrorTolerance_ImplicitCast; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Vector) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Set_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Change_Tolerance) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Change_Tolerance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Index_0) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Temp_bool_Variable) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Temp_bool_Variable_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Temp_bool_Variable_2) == 0x000035, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000036, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000037, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_BooleanOR_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Temp_bool_Variable_3) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Array_Get_Item) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_EqualEqual_VectorVector_ErrorTolerance_ImplicitCast) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_EqualEqual_VectorVector_ErrorTolerance_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Camera Location Dependent Updates
// 0x0230 (0x0230 - 0x0000)
struct Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates final
{
public:
	double                                        Distance_Moved;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0090(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_4;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Camera_Sky_Atmosphere_Normalized_Density_ImplicitCast; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates) == 0x000230, "Wrong size on Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, Distance_Moved) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::Distance_Moved' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Vector_Distance_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_X_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_SelectVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Not_PreBool_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000179, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Vector_Distance_ReturnValue_1) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_X_2) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Y_2) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Z_2) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_X_3) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Y_3) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Z_3) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BooleanAND_ReturnValue_1) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_GetFloatValue_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_X_4) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Y_4) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_BreakVector_Z_4) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_MapRangeClamped_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates, K2Node_VariableSet_Camera_Sky_Atmosphere_Normalized_Density_ImplicitCast) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Camera_Location_Dependent_Updates::K2Node_VariableSet_Camera_Sky_Atmosphere_Normalized_Density_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Change Sky Mode at Runtime
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime final
{
public:
	EUDS_SkyMode                                  New_Sky_Mode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Turn_on_Runtime;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRadial_Storm_Sky_Interface_C> K2Node_DynamicCast_AsRadial_Storm_Sky_Interface;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_with_Sky_Mode_Change_Successful;   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, New_Sky_Mode) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::New_Sky_Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, Turn_on_Runtime) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::Turn_on_Runtime' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, K2Node_DynamicCast_AsRadial_Storm_Sky_Interface) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::K2Node_DynamicCast_AsRadial_Storm_Sky_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_Update_with_Sky_Mode_Change_Successful) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_Update_with_Sky_Mode_Change_Successful' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check for Cloud Coverage Target Recenter
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter final
{
public:
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Distance2D_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Distance2D_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check for Daylight Savings Time
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DST_Active;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Date_and_Time_in_Daylight_Savings_Time_ReturnValue; // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, Hour) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, DST_Active) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::DST_Active' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Is_Date_and_Time_in_Daylight_Savings_Time_ReturnValue) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Is_Date_and_Time_in_Daylight_Savings_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_SelectFloat_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue_1) == 0x000059, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue_2) == 0x00005A, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00005B, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue_1) == 0x00005D, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check for Time Event Dispatchers
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers final
{
public:
	bool                                          Hour_Changed;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Minute_Changed;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Current_Minute;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Hour;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Current_Hour_as_Integer_Hour;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Current_Event_Date_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Current_Event_Date_ReturnValue_1;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DateTimeDateTime_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Current_Minute_as_Integer_Minute;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up; // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up_1; // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Current_Hour_as_Integer_Hour_1;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Current_Hour_as_Integer_Hour_2;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, Hour_Changed) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::Hour_Changed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, Minute_Changed) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::Minute_Changed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, Current_Minute) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::Current_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, Current_Hour) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::Current_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Current_Hour_as_Integer_Hour) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Current_Hour_as_Integer_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, Temp_int_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Percent_IntInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Add_IntInt_ReturnValue_2) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Current_Event_Date_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Current_Event_Date_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Current_Event_Date_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Current_Event_Date_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_NotEqual_DateTimeDateTime_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_NotEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Percent_IntInt_ReturnValue_1) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Current_Minute_as_Integer_Minute) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Current_Minute_as_Integer_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up) == 0x000055, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up_1) == 0x000056, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Current_Hour_as_Integer_Hour_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Current_Hour_as_Integer_Hour_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Current_Hour_as_Integer_Hour_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Current_Hour_as_Integer_Hour_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000065, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000067, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_BooleanAND_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Add_IntInt_ReturnValue_3) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_Percent_IntInt_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Check_for_Time_Event_Dispatchers::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check if Point is Exposed to Sun or Moon Light
// 0x03D0 (0x03D0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance_to_Trace;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors_to_Ignore_in_Trace;                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Exposed_to_Sun;                                    // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exposed_to_Moon;                                   // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exposed_to_Either;                                 // 0x0032(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Light_Intensity__Lux_;                             // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit_By_Moon;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Not_Blocked_by_Clouds;                             // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit_By_Sun;                                        // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  Trace_Hits;                                        // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRotator>                       K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	struct FRotator                               CallFunc_Array_Get_Item;                           // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_4;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F[0x1];                                      // 0x022F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_5;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x024F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x02B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light) == 0x0003D0, "Wrong size on Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Distance_to_Trace) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Distance_to_Trace' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Actors_to_Ignore_in_Trace) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Actors_to_Ignore_in_Trace' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Exposed_to_Sun) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Exposed_to_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Exposed_to_Moon) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Exposed_to_Moon' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Exposed_to_Either) == 0x000032, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Exposed_to_Either' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Light_Intensity__Lux_) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Light_Intensity__Lux_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Hit_By_Moon) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Hit_By_Moon' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Not_Blocked_by_Clouds) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Not_Blocked_by_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Hit_By_Sun) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Hit_By_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Trace_Hits) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Trace_Hits' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Temp_int_Array_Index_Variable) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_2) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_3) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_3) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_3) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_3) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, K2Node_MakeArray_Array) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Get_Item) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_4) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_4) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_4) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_4) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_SelectFloat_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_SelectFloat_ReturnValue_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetFloatValue_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_MapRangeClamped_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetFloatValue_ReturnValue_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Temp_int_Loop_Counter_Variable) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Less_IntInt_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Add_IntInt_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanOR_ReturnValue) == 0x00022C, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Get_Item_1) == 0x00022D, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Not_PreBool_ReturnValue) == 0x00022E, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_5) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_5) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_5) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000249, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue_1) == 0x00024A, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue_2) == 0x00024B, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanOR_ReturnValue_1) == 0x00024C, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Get_Item_2) == 0x00024D, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Not_PreBool_ReturnValue_1) == 0x00024E, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue_3) == 0x00024F, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue_4) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_LineTraceSingle_OutHit) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_LineTraceSingle_ReturnValue) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Add_ReturnValue) == 0x0003A4, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x0003AC, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check If Year is Leap Year
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year final
{
public:
	int32                                         Year_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Leap_Year;                                         // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLeapYear_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year, Year_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year::Year_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year, Leap_Year) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year::Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year, CallFunc_IsLeapYear_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year::CallFunc_IsLeapYear_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Check_If_Year_is_Leap_Year::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check to Start Volumetric Cloud Light Rays
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddComponent_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays) == 0x0000C0, "Wrong size on Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_AddComponent_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, K2Node_DynamicCast_AsTexture_2D) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_IsValid_ReturnValue_1) == 0x000082, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, K2Node_DynamicCast_AsNiagara_System) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_BooleanOR_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_Not_PreBool_ReturnValue) == 0x0000B1, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B3, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays, CallFunc_BooleanAND_ReturnValue_2) == 0x0000B5, "Member 'Ultra_Dynamic_Sky_C_Check_to_Start_Volumetric_Cloud_Light_Rays::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cinematic Mode Startup
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup final
{
public:
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup, CallFunc_Conv_IntToString_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cinematic_Mode_Startup::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Clear Modifiers
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_Clear_Modifiers final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Clear_Modifiers) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Clear_Modifiers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Clear_Modifiers) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_Clear_Modifiers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clear_Modifiers, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Clear_Modifiers::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Client Check Initial Replication
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Client_Check_Initial_Replication final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Client_Check_Initial_Replication) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Client_Check_Initial_Replication");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Client_Check_Initial_Replication) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Client_Check_Initial_Replication");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Client_Check_Initial_Replication, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Client_Check_Initial_Replication::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Coverage Target Mapping
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping final
{
public:
	struct FVector                                Mapping;                                           // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_Vector2DToVector_Z_ImplicitCast;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, Mapping) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Conv_Vector2DToVector_Z_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Conv_Vector2DToVector_Z_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Layer Top and Bottom World Height
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height final
{
public:
	double                                        Bottom_World_Height;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Top_World_Height;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, Bottom_World_Height) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::Bottom_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, Top_World_Height) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::Top_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_BreakVector_X) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_BreakVector_Y) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_BreakVector_Z) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Cloud Density
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Light Vector And Cancel Value
// 0x0190 (0x0190 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value final
{
public:
	struct FLinearColor                           Vector;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cancel_Value;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Multiplier;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Shadows_Vector;                                    // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fog_and_Dust_Shadow_Value_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value) == 0x000190, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, Cancel_Value) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::Cancel_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, Transition_Multiplier) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::Transition_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, Shadows_Vector) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::Shadows_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Fog_and_Dust_Shadow_Value_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Fog_and_Dust_Shadow_Value_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_X_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Y_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Z_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_X_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Y_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Z_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_X_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Y_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Z_3) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Abs_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_X_4) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Y_4) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Z_4) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_SelectFloat_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_FClamp_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Lerp_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_SelectVector_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_MakeVector_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_X_5) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Y_5) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, CallFunc_BreakVector_Z_5) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, K2Node_MakeStruct_LinearColor) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, K2Node_MakeStruct_A_ImplicitCast) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, K2Node_MakeStruct_R_ImplicitCast) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, K2Node_MakeStruct_G_ImplicitCast) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value, K2Node_MakeStruct_B_ImplicitCast) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_And_Cancel_Value::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Parent Material
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Mat;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1; // 0x0058(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Mat) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Texture Pan Scale
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Base_Clouds_Scale_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale, Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale, CallFunc_Current_Base_Clouds_Scale_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale::CallFunc_Current_Base_Clouds_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Pan_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Texture Velocity
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity) == 0x0000C0, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_ClampVectorSize_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Wisp Gradient Vector
// 0x00E0 (0x00E0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sun_Threshold;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Using_Sun_Vector;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue_1;                  // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast_1;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector) == 0x0000E0, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, Sun_Threshold) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::Sun_Threshold' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, Using_Sun_Vector) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::Using_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z_2) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_R_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_G_ImplicitCast) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_B_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_A_ImplicitCast) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_A_ImplicitCast_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_R_ImplicitCast_1) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_R_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_G_ImplicitCast_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_G_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_B_ImplicitCast_1) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Clouds Time of Day Factor
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Combined Night Brightness
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Combined_Night_Brightness final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Combined_Night_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Combined_Night_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Combined_Night_Brightness::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Combined_Night_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Combined_Night_Brightness::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Composite Context Vector
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Composite_Context_Vector final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Composite_Context_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Composite_Context_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Composite_Context_Vector) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Composite_Context_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Composite_Context_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Composite_Context_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Composite_Context_Vector, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Composite_Context_Vector::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Composite_Context_Vector, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Composite_Context_Vector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Composite Weather Vector
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Composite_Weather_Vector final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Composite_Weather_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Composite_Weather_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Composite_Weather_Vector) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Composite_Weather_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Composite_Weather_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Composite_Weather_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Composite_Weather_Vector, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Composite_Weather_Vector::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Composite_Weather_Vector, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Composite_Weather_Vector::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Composite_Weather_Vector, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Composite_Weather_Vector::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Composite_Weather_Vector, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Composite_Weather_Vector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Configure Directional Light with Feature Toggle
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle final
{
public:
	bool                                          Toggle;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             Selected_Component_Variable;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             Built_in_Light_Component;                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      Custom_Light_Actor;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Atmospheric_Index;                                 // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EComponentMobility                            Mobility;                                          // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Light_Visibility;                                  // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, Toggle) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::Toggle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, Selected_Component_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::Selected_Component_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, Built_in_Light_Component) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::Built_in_Light_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, Custom_Light_Actor) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::Custom_Light_Actor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, Atmospheric_Index) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::Atmospheric_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, Mobility) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::Mobility' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, Light_Visibility) == 0x000025, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::Light_Visibility' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, CallFunc_IsValid_ReturnValue) == 0x000026, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, K2Node_DynamicCast_AsDirectional_Light_Component) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::K2Node_DynamicCast_AsDirectional_Light_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Configure_Directional_Light_with_Feature_Toggle::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Configure Height Fog with Feature Toggle
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle) == 0x000002, "Wrong size on Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Configure_Height_Fog_with_Feature_Toggle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Configure Sky Light with Feature Toggle
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureCube*                           K2Node_DynamicCast_AsTexture_Cube;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkyLightComponent*>             K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USkyLightComponent*                     CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyLightComponent*                     K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, K2Node_MakeArray_Array) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_IsValid_ReturnValue) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, K2Node_DynamicCast_AsTexture_Cube) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::K2Node_DynamicCast_AsTexture_Cube' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, K2Node_MakeArray_Array_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, K2Node_Select_Default) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Configure_Sky_Light_with_Feature_Toggle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Cloud Shadows MID
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Cloud_Shadows_Parent_Material_Mat;        // 0x0000(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID, CallFunc_Cloud_Shadows_Parent_Material_Mat) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID::CallFunc_Cloud_Shadows_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID, K2Node_DynamicCast_AsMaterial_Interface) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Cloud_Shadows_MID::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Inside Cloud Fog
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog final
{
public:
	bool                                          Inside_Cloud_Fog_Active;                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0008(0x0010)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, Inside_Cloud_Fog_Active) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::Inside_Cloud_Fog_Active' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, K2Node_MakeStruct_WeightedBlendable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, K2Node_DynamicCast_AsMaterial_Interface) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'Ultra_Dynamic_Sky_C_Construct_Inside_Cloud_Fog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Lens Flare
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Lens_Flare final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Lens_Flare_Parent_Material_Mat;           // 0x0010(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Lens_Flare) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Lens_Flare) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Lens_Flare, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Lens_Flare::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Lens_Flare, CallFunc_Lens_Flare_Parent_Material_Mat) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Construct_Lens_Flare::CallFunc_Lens_Flare_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Lens_Flare, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construct_Lens_Flare::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Lens_Flare, K2Node_DynamicCast_AsMaterial_Interface) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Lens_Flare::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Lens_Flare, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construct_Lens_Flare::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Lens_Flare, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Construct_Lens_Flare::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Overcast Turbulence
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, K2Node_DynamicCast_AsTexture_2D) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, K2Node_DynamicCast_AsMaterial_Interface) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Overcast_Turbulence::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Path Tracer Fog
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, K2Node_DynamicCast_AsMaterial_Interface) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_BooleanAND_ReturnValue_1) == 0x000059, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_BooleanAND_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Construct_Path_Tracer_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Sky Sphere and Material
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue; // 0x0008(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material, CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material::CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material, K2Node_DynamicCast_AsMaterial_Interface) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construct_Sky_Sphere_and_Material::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Space Layer
// 0x0BD0 (0x0BD0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Space_Layer final
{
public:
	struct FVector                                Ring_Scale;                                        // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Ring_Rotation;                                     // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   Ring_Back_Mesh;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ring_Front_Mesh;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Ring_MID;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Current_Glow_MID;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Current_Glow_Mesh;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Planet_Distance;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ring_Back;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ring_Front;                                        // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Index;                                     // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Current_MID;                                       // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Current_Root;                                      // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Current_Sphere;                                    // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FUDS_Space_Planet                      Current_Planet;                                    // 0x0090(0x0250)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EUDS_Space_Parent                             Temp_byte_Variable;                                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Temp_object_Variable;                              // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0350(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x0488(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x05B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x05C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C6[0x2];                                      // 0x05C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Space_Planet_Parent_MID_Out;              // 0x05E8(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_688[0x8];                                      // 0x0688(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0690(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_2;               // 0x06F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_701[0x3];                                      // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0720(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x3];                                      // 0x0739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_10;                 // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0760(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_11;                 // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771[0x3];                                      // 0x0771(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_12;                 // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_779[0x7];                                      // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0798(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_2;                 // 0x07A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A9[0x7];                                      // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_3;                 // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D9[0x7];                                      // 0x07D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_4;                 // 0x07E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x07F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0xF];                                      // 0x0811(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0820(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_3;               // 0x0880(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0888(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x08A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A8[0x8];                                      // 0x08A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x08B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_4;       // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_AddComponent_ReturnValue_4;               // 0x0918(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_921[0x3];                                      // 0x0921(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item_1;                         // 0x0928(0x0250)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B79[0x3];                                      // 0x0B79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0B84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_11; // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_12; // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_13; // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_14; // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_15; // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_16; // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Space_Layer) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Space_Layer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Space_Layer) == 0x000BD0, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Space_Layer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_Rotation) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_Rotation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_Back_Mesh) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_Back_Mesh' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_Front_Mesh) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_Front_Mesh' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_MID) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_MID' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Glow_MID) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Glow_MID' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Glow_Mesh) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Glow_Mesh' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Planet_Distance) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Planet_Distance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_Back) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_Back' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_Front) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_Front' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Index) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_MID) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_MID' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Root) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Root' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Sphere) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Sphere' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Planet) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Planet' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_byte_Variable) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_object_Variable) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeTransform_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeTransform_ReturnValue_1) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_AddComponent_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_AddComponent_ReturnValue_1) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeRotator_ReturnValue) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeRotator_ReturnValue_1) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_ComposeRotators_ReturnValue) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_1) == 0x00041C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FMax_ReturnValue) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_2) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_3) == 0x00045C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue) == 0x000464, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_int_Variable) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_4) == 0x000574, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_int_Array_Index_Variable) == 0x00057C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_int_Loop_Counter_Variable) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000594, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0005B4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0005C4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_IsValid_ReturnValue) == 0x0005C5, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_5) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue_3) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Space_Planet_Parent_MID_Out) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Space_Planet_Parent_MID_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue_4) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_IntInt_ReturnValue) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsMaterial_Interface) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_1) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_6) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_7) == 0x000644, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeVector_ReturnValue) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeTransform_ReturnValue_2) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_AddComponent_ReturnValue_2) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_8) == 0x000704, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FMax_ReturnValue_1) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FClamp_ReturnValue) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D_1) == 0x000730, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_2) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_9) == 0x00073C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_10) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeVector_ReturnValue_1) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Get_Item) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_11) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Length_ReturnValue) == 0x00076C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Less_IntInt_ReturnValue) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_12) == 0x000774, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FMax_ReturnValue_2) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D_2) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_3) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SelectFloat_ReturnValue) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SelectFloat_ReturnValue_1) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D_3) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_4) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D_4) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_5) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeVector_ReturnValue_2) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeTransform_ReturnValue_3) == 0x000820, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_AddComponent_ReturnValue_3) == 0x000880, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_AddComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000888, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_Select_Default) == 0x0008A0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeTransform_ReturnValue_4) == 0x0008B0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AttachToComponent_ReturnValue_4) == 0x000910, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AttachToComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_AddComponent_ReturnValue_4) == 0x000918, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_AddComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000920, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Length_ReturnValue_1) == 0x000924, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Get_Item_1) == 0x000928, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000B78, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000B7C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000B80, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000B84, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000B88, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000B8C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000B90, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000B94, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000B98, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000B9C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000BA0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000BA4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x000BA8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x000BAC, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_11) == 0x000BB0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_12) == 0x000BB4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_13) == 0x000BB8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_14) == 0x000BBC, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_15) == 0x000BC0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_16) == 0x000BC4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_16' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Volumetric Aurora
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora, K2Node_DynamicCast_AsMaterial_Interface) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Aurora::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Volumetric Clouds
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_All_Volumetric_Cloud_MIDs_MIDs;           // 0x0008(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified; // 0x0018(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex; // 0x0040(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1; // 0x0068(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1; // 0x0090(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds) == 0x000100, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_All_Volumetric_Cloud_MIDs_MIDs) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_All_Volumetric_Cloud_MIDs_MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_Volumetric_Clouds_Parent_Materials_Complex) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_Volumetric_Clouds_Parent_Materials_Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, K2Node_DynamicCast_AsMaterial_Interface) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Construct_Volumetric_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construction Script Function
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construction_Script_Function final
{
public:
	bool                                          CallFunc_Apply_Feature_Level_Mode_Changes_Made_Changes; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UDS_Reconstruct_Success;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construction_Script_Function) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construction_Script_Function");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construction_Script_Function) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Construction_Script_Function");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Apply_Feature_Level_Mode_Changes_Made_Changes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Apply_Feature_Level_Mode_Changes_Made_Changes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_UDS_Reconstruct_Success) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_UDS_Reconstruct_Success' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Create Post Process Components
// 0x0EE0 (0x0EE0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Create_Post_Process_Components final
{
public:
	struct FUDS_Post_Process_Stage                Array_Element;                                     // 0x0000(0x0710)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UPostProcessComponent*                  Post_Component;                                    // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71C[0x4];                                      // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0720(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784[0x4];                                      // 0x0784(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0788(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x079C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79D[0x3];                                      // 0x079D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item;                           // 0x07A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x07AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AD[0x3];                                      // 0x07AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0xC];                                      // 0x07B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Post_Process_Stage                CallFunc_Array_Get_Item_1;                         // 0x07C0(0x0710)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0ED4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED5[0x3];                                      // 0x0ED5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_Priority_ImplicitCast;          // 0x0ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Create_Post_Process_Components");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components) == 0x000EE0, "Wrong size on Ultra_Dynamic_Sky_C_Create_Post_Process_Components");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Array_Element) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Array_Element' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Post_Component) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Post_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Variable) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_struct_Variable) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Add_IntInt_ReturnValue) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_AddComponent_ReturnValue) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Array_Index_Variable) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Loop_Counter_Variable) == 0x000794, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Add_IntInt_ReturnValue_1) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00079C, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Get_Item) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Length_ReturnValue) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Less_IntInt_ReturnValue) == 0x0007AC, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Add_ReturnValue) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Get_Item_1) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Length_ReturnValue_1) == 0x000ED0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Less_IntInt_ReturnValue_1) == 0x000ED4, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, K2Node_VariableSet_Priority_ImplicitCast) == 0x000ED8, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::K2Node_VariableSet_Priority_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Create UDS and UDW State for Saving
// 0x0690 (0x0690 - 0x0000)
struct Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving final
{
public:
	struct FUDS_and_UDW_State                     Packaged_State;                                    // 0x0000(0x0200)(Parm, OutParm, HasGetValueTypeHash)
	struct FUDS_and_UDW_State                     State;                                             // 0x0200(0x0200)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_and_UDW_State                     CallFunc_Get_UDW_State_for_Saving_UDW_State;       // 0x0418(0x0200)(HasGetValueTypeHash)
	struct FUDW_WeatherState_Structure            K2Node_MakeStruct_UDW_WeatherState_Structure;      // 0x0618(0x0050)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Get_DateTime_Current_Date_and_Time;       // 0x0680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving) == 0x000690, "Wrong size on Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, Packaged_State) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::Packaged_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, State) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_DynamicCast_bSuccess) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_Get_UDW_State_for_Saving_UDW_State) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_Get_UDW_State_for_Saving_UDW_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_MakeStruct_UDW_WeatherState_Structure) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_MakeStruct_UDW_WeatherState_Structure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_MakeVector_ReturnValue) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_Get_DateTime_Current_Date_and_Time) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_Get_DateTime_Current_Date_and_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_IsValid_ReturnValue) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current 2D Cloud Tint
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_SelectColor_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_LinearColorLerp_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Aurora Intensity
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Aurora_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Aurora_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Aurora_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Base Clouds Scale
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Cloud Fog Post Process Color
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Fog_Post_Process_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Cloud Wisps Color
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filtered_Night_Brightness_Multiplier; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color) == 0x0000C0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Night_Filtered_Night_Brightness_Multiplier) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Night_Filtered_Night_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_3_Color_Time_Blend_Out) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_3_Color_Time_Blend_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Directional Inscattering Exponent
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Event Date
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Event_Date final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Event_Date) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Event_Date");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Event_Date) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Current_Event_Date");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Event_Date, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Event_Date::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Event_Date, CallFunc_MakeDateTime_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Event_Date::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Exposure Bias
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Exposure_Bias final
{
public:
	double                                        Bias;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Exposure_Bias");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Exposure_Bias");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, Bias) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::Bias' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Night_Filter_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Density
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Density) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Directional Inscattering Color
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color final
{
public:
	struct FLinearColor                           Directional_Inscattering_Color;                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Base_Intensity;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, Directional_Inscattering_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::Directional_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, Base_Intensity) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::Base_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_X) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_Y) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_Z) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Sun_Height_Z) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_GetFloatValue_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FClamp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FClamp_Value_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Inscattering Color
// 0x0128 (0x0128 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color final
{
public:
	struct FLinearColor                           Inscattering_Color;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Base_Color;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filtered_Night_Brightness_Multiplier; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color) == 0x000128, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, Inscattering_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, Base_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Night_Filtered_Night_Brightness_Multiplier) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Night_Filtered_Night_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_X) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_Y) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_Z) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Abs_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Hour as Integer
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Hour_as_Integer final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Hour_as_Integer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Hour_as_Integer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Hour_as_Integer) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Hour_as_Integer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Hour_as_Integer, Hour) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Hour_as_Integer::Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Hour_as_Integer, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Hour_as_Integer::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Hour_as_Integer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Hour_as_Integer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Hour_as_Integer, CallFunc_FFloor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Hour_as_Integer::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Hour_as_Integer, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Hour_as_Integer::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Hour_as_Integer, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Hour_as_Integer::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lerp to Simplified Clouds
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, Alpha) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_FMin_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Not_PreBool_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_BooleanAND_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_BooleanAND_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Light Pollution
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Light_Pollution final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Light_Pollution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Light_Pollution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Light_Pollution) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Light_Pollution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lit Intensity
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lit_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filtered_Night_Brightness_Multiplier; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lit_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lit_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Night_Filtered_Night_Brightness_Multiplier) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Night_Filtered_Night_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_SafeDivide_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Max Trace Distance
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Inside_Outside_Cloud_Layer_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Inside_Outside_Cloud_Layer_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Inside_Outside_Cloud_Layer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Mie Anisotropy
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Mie Scattering Scale
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Scale;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Unscaled_Scattering;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Cloud_Coverage_Level;                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, Final_Scale) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::Final_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, Max_Unscaled_Scattering) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::Max_Unscaled_Scattering' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, Max_Cloud_Coverage_Level) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::Max_Cloud_Coverage_Level' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Minute as Integer
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Minute_as_Integer final
{
public:
	int32                                         Minute;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Minute_as_Integer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Minute_as_Integer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Minute_as_Integer) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Minute_as_Integer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Minute_as_Integer, Minute) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Minute_as_Integer::Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Minute_as_Integer, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Minute_as_Integer::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Minute_as_Integer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Minute_as_Integer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Minute_as_Integer, CallFunc_FFloor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Minute_as_Integer::CallFunc_FFloor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Month Lengths
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Month_Lengths final
{
public:
	int32                                         Year_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Lengths;                                           // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_If_Year_is_Leap_Year_Leap_Year;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Month_Lengths) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Month_Lengths");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Month_Lengths) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Month_Lengths");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Month_Lengths, Year_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Month_Lengths::Year_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Month_Lengths, Lengths) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Month_Lengths::Lengths' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Month_Lengths, Temp_bool_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Month_Lengths::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Month_Lengths, CallFunc_Check_If_Year_is_Leap_Year_Leap_Year) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Current_Month_Lengths::CallFunc_Check_If_Year_is_Leap_Year_Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Month_Lengths, K2Node_Select_Default) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Month_Lengths::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Light Color
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Light_Color final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Tinted_Color;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Base_Color;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color) == 0x000098, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, Tinted_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::Tinted_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, Base_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_X) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_Y) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_Z) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_GetLinearColorValue_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Light Material Color
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Combined_Night_Brightness_out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Lit Percent
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Material Intensity
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Phase Angle
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Scale
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Scale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Scale) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, CallFunc_DegreesToRadians_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moons Cloud Mask
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Night Sky Glow
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Overall Intensity
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Overall_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filtered_Night_Brightness_Multiplier; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Overall_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Overall_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Night_Filtered_Night_Brightness_Multiplier) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Night_Filtered_Night_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Overcast Turbulence Strength
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength, CallFunc_FMin_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Turbulence_Strength::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Rayleigh Scattering Color
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Base_Color;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color) == 0x0000B0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, Base_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_3_Color_Time_Blend_Out) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_3_Color_Time_Blend_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Lerp_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_FClamp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Ambient Color
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color final
{
public:
	struct FLinearColor                           Sky_Ambient_Color;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Divide_LinearColorLinearColor_ReturnValue; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Divide_LinearColorLinearColor_ReturnValue_1; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, Sky_Ambient_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::Sky_Ambient_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Divide_LinearColorLinearColor_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Divide_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Divide_LinearColorLinearColor_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Divide_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_FMax_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_SelectFloat_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_R) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_G) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_B) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_A) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MakeColor_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MakeColor_A_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Atmosphere Absorption Color
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Twilight_Alpha;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_RGBToHSV_Vector_HSV;                      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue;                     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HSVToRGB_A_ImplicitCast;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HSVToRGB_H_ImplicitCast;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, Twilight_Alpha) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::Twilight_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_RGBToHSV_Vector_HSV) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_RGBToHSV_Vector_HSV' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakColor_R) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakColor_G) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakColor_B) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakColor_A) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_HSVToRGB_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_HSVToRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_HSVToRGB_A_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_HSVToRGB_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_HSVToRGB_H_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_HSVToRGB_H_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Atmosphere Luminance
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Luminance_Boost_Out;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance) == 0x0000D0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Overcast_Luminance_Boost_Out) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Overcast_Luminance_Boost_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_X) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_Y) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_Z) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Abs_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_MapRangeClamped_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Light Lower Hemisphere Color
// 0x0044 (0x0044 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color) == 0x000044, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_R) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_G) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_B) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_A) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_MakeColor_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Solar Eclipse Values
// 0x06C0 (0x06C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values final
{
public:
	double                                        Eclipse_Percent_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Tint_Color;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Moon_Root_Rotation;                                // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Sun_Root_Rotation;                                 // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FUDS_Space_Planet                      Space_Planet;                                      // 0x0048(0x0250)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        Sun_Angular_Diameter;                              // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sun_Fraction_Showing;                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Space_Parent                             Temp_byte_Variable;                                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DotProduct2D_ReturnValue;                 // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Z_Vector_out;                         // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Moon_Z_Vector_out;                        // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue_1;              // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item;                           // 0x03B8(0x0250)(HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing; // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue_1;           // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing_1; // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AA[0x2];                                      // 0x06AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x06AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values) == 0x0006C0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Eclipse_Percent_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Eclipse_Percent_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Tint_Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Tint_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Moon_Root_Rotation) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Moon_Root_Rotation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Sun_Root_Rotation) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Sun_Root_Rotation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Space_Planet) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Space_Planet' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Sun_Angular_Diameter) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Sun_Angular_Diameter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Sun_Fraction_Showing) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Sun_Fraction_Showing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Temp_int_Array_Index_Variable) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Temp_struct_Variable) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_RadiansToDegrees_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Temp_byte_Variable) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Lerp_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Temp_int_Loop_Counter_Variable) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Add_IntInt_ReturnValue) == 0x0002EC, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MakeVector2D_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Normal2D_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MakeVector2D_ReturnValue_1) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Normal2D_ReturnValue_1) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_DotProduct2D_ReturnValue) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_DegAcos_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Sun_Z_Vector_out) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Sun_Z_Vector_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Moon_Z_Vector_out) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Moon_Z_Vector_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MakeRotFromXZ_ReturnValue_1) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MakeRotFromXZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Array_Get_Item) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_ComposeRotators_ReturnValue) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Array_Length_ReturnValue) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, K2Node_Select_Default) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Less_IntInt_ReturnValue) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_ComposeRotators_ReturnValue_1) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_RadiansToDegrees_ReturnValue_1) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_RadiansToDegrees_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing_1) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0006A8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_BooleanAND_ReturnValue) == 0x0006A9, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_LinearColorLerp_ReturnValue) == 0x0006AC, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0006BC, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Space Layer Brightness
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Result_Value;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, Result_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::Result_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Combined_Night_Brightness_out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Stars Color
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Stars_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Applied_Intensity;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Stars_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Stars_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Stars_Color) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Current_Stars_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, Applied_Intensity) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::Applied_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Disk Color
// 0x00E0 (0x00E0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Unscaled_Color;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Disk_Intensity_ReturnValue;   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color) == 0x0000E0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, Unscaled_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::Unscaled_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Sun_Height_Z) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Current_Sun_Disk_Intensity_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Current_Sun_Disk_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Disk Intensity
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue_3) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Light Color
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Light_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Sun_Height_Z;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, Out_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Sun_Height_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Light Intensity
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Unscaled_Intensity;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity) == 0x000098, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, Unscaled_Intensity) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::Unscaled_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_X_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Moon Cache Delta
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta, CallFunc_GetForwardVector_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta, CallFunc_Vector_Distance_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta, CallFunc_Vector_Distance_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Moon_Cache_Delta::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Radius
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Radius final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Radius) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Radius");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Radius) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Radius");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_DegreesToRadians_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Specular Scale
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sunrise Event Time
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sunset Event Time
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sunrise Event State
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sunrise_Event_State final
{
public:
	bool                                          Sun_Up;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Sunset_Event_Time_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sunrise_Event_Time_ReturnValue;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sunrise_Event_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sunrise_Event_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sunrise_Event_State) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Sunrise_Event_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, Sun_Up) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::Sun_Up' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_Current_Sunset_Event_Time_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_Current_Sunset_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_Current_Sunrise_Event_Time_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_Current_Sunrise_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000061, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Event_State, K2Node_Select_Default) == 0x000063, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Event_State::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current View Sample Scale
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_View_Sample_Scale final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Count;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Swap_with_Cinematic_Runtime_Value_Out;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Inside_Outside_Cloud_Layer_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_View_Sample_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Current_View_Sample_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, Count) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Swap_with_Cinematic_Runtime_Value_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Swap_with_Cinematic_Runtime_Value_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Inside_Outside_Cloud_Layer_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Inside_Outside_Cloud_Layer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Clamp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Lerp_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Scale_Sample_Count_out) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Scale_Sample_Count_out' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Albedo
// 0x0158 (0x0158 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo) == 0x000158, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_X_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Abs_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Abs_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_FClamp_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_SafeDivide_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Inner Emit Limit
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Macro Variation
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Multiscattering Intensity
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Multiscattering Occlusion
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion final
{
public:
	double                                        Occlusion;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, Occlusion) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Shadow Tracing Distance
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Lerp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Lerp_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Sky Atmo Contribution
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Clouds Density
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density final
{
public:
	bool                                          Layer_1;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, Layer_1) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::Layer_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_FClamp_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Multiscattering Phase 1
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1 final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Multiscattering_Phase_1::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Wisps Opacity
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Wisps_Opacity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        base;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Wisps_Opacity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Wisps_Opacity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, base) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::base' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Date and Time to Year Progress
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress final
{
public:
	int32                                         Month_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_0;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Days_from_Start_of_Year;                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Day_Count_at_the_Start_of_a_Month_Count;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, Month_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::Month_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, Day_0) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::Day_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, Time) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, Days_from_Start_of_Year) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::Days_from_Start_of_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, CallFunc_Day_Count_at_the_Start_of_a_Month_Count) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::CallFunc_Day_Count_at_the_Start_of_a_Month_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Date_and_Time_to_Year_Progress::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Day Count at the Start of a Month
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month final
{
public:
	int32                                         Year_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Month_0;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_If_Year_is_Leap_Year_Leap_Year;     // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month, Year_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month::Year_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month, Month_0) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month::Month_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month, Count) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month::Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month, Temp_bool_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month, CallFunc_Check_If_Year_is_Leap_Year_Leap_Year) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month::CallFunc_Check_If_Year_is_Leap_Year_Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month, K2Node_Select_Default) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month, CallFunc_Array_Get_Item) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Day_Count_at_the_Start_of_a_Month::CallFunc_Array_Get_Item' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Day Ended
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_Day_Ended final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Day_Ended) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Day_Ended");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Day_Ended) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_Day_Ended");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Day_Ended, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Day_Ended::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Days Since J2000
// 0x001C (0x001C - 0x0000)
struct Ultra_Dynamic_Sky_C_Days_Since_J2000 final
{
public:
	int32                                         Input_Day;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Input_Month;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Input_Year;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Days;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Positive;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Days_Since_Y1D1M1_Days;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Days_Since_J2000) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Days_Since_J2000");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Days_Since_J2000) == 0x00001C, "Wrong size on Ultra_Dynamic_Sky_C_Days_Since_J2000");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Input_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Input_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Input_Month) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Input_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Input_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Input_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Days) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Positive) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Positive' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Days_Since_Y1D1M1_Days) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Days_Since_Y1D1M1_Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Days Since Y1D1M1
// 0x00F8 (0x00F8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1 final
{
public:
	int32                                         Input_Day;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Input_Month;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Input_Year;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Days;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_Count_in_a_Non_Leap_Year;                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Non_Leap_Years;                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Leap_Years;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_Count;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Year_Delta;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Current_Month_Lengths_Lengths;            // 0x0048(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Current_Month_Lengths_Lengths_1;          // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Day_Count_at_the_Start_of_a_Month_Count;  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_2;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1) == 0x0000F8, "Wrong size on Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Input_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Input_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Input_Month) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Input_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Input_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Input_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Days) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Day_Count_in_a_Non_Leap_Year) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Day_Count_in_a_Non_Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Number_of_Non_Leap_Years) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Number_of_Non_Leap_Years' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Number_of_Leap_Years) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Number_of_Leap_Years' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Day_Count) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Day_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Year_Delta) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Year_Delta' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Abs_Int_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Temp_int_Array_Index_Variable) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Current_Month_Lengths_Lengths) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Current_Month_Lengths_Lengths' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Current_Month_Lengths_Lengths_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Current_Month_Lengths_Lengths_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Day_Count_at_the_Start_of_a_Month_Count) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Day_Count_at_the_Start_of_a_Month_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Multiply_IntInt_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Array_Get_Item) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, Temp_int_Variable) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_3) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_4) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_5) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_SelectInt_ReturnValue) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Map_Values_Values) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_8) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Add_IntInt_ReturnValue_9) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Divide_IntInt_ReturnValue) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Divide_IntInt_ReturnValue_2) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Divide_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Days_Since_Y1D1M1::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Dimming Directional Lights
// 0x0007 (0x0007 - 0x0000)
struct Ultra_Dynamic_Sky_C_Dimming_Directional_Lights final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Dimming_Directional_Lights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights) == 0x000007, "Wrong size on Ultra_Dynamic_Sky_C_Dimming_Directional_Lights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue_2) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue_3) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Directional Inscattering Multiplier
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Directional Light Dimming
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Directional_Light_Dimming final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fog_and_Dust_Shadow_Value_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Directional_Light_Dimming");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Directional_Light_Dimming");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Fog_and_Dust_Shadow_Value_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Fog_and_Dust_Shadow_Value_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_FMin_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_MapRangeClamped_InRangeA_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_MapRangeClamped_InRangeA_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Directional Source Angle
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Directional_Source_Angle final
{
public:
	double                                        Disk_Scale;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Scale_Factor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale_Setting;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Directional_Source_Angle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Directional_Source_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Directional_Source_Angle) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Directional_Source_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, Disk_Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::Disk_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, Max_Scale_Factor) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::Max_Scale_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, Scale_Setting) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::Scale_Setting' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Directional_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Editor Tick
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Editor_Tick final
{
public:
	struct FVector                                Editor_Camera_Location;                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Editor_Camera_Rotation_0;                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Sequencer_Open;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_RunContext                               Temp_byte_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_RunContext                               Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Modifier_C*                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Editor_Tick_Completed;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_RunContext                               K2Node_Select_Default;                             // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_3;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Editor_Tick) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Editor_Tick");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Editor_Tick) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Editor_Tick");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, Editor_Camera_Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::Editor_Camera_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, Editor_Camera_Rotation_0) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::Editor_Camera_Rotation_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, Sequencer_Open) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::Sequencer_Open' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, Temp_bool_Variable) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, Temp_byte_Variable) == 0x000032, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, Temp_byte_Variable_1) == 0x000033, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, Temp_int_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Array_Get_Item) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Editor_Tick_Completed) == 0x00007A, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Editor_Tick_Completed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Not_PreBool_ReturnValue) == 0x00007B, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000091, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_BooleanAND_ReturnValue) == 0x000092, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_BooleanAND_ReturnValue_1) == 0x000093, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, K2Node_Select_Default) == 0x000095, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Not_PreBool_ReturnValue_1) == 0x000096, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_BooleanAND_ReturnValue_2) == 0x000097, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_GetGameTimeInSeconds_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_GetGameTimeInSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Editor_Tick, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Editor_Tick::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ExecuteUbergraph_Ultra_Dynamic_Sky
// 0x0178 (0x0178 - 0x0000)
struct Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EEndPlayReason>                        K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Modifier_C*>                K2Node_CustomEvent_Modifiers;                      // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<double>                                K2Node_CustomEvent_Modifier_Alphas;                // 0x0068(0x0010)(ConstParm, ReferenceParm)
	TArray<double>                                K2Node_CustomEvent_Modifier_Targets;               // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TArray<double>                                K2Node_CustomEvent_Modifier_Speeds;                // 0x0088(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_Hard_Reset;                     // 0x0098(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDS_Startup_Interface_C> K2Node_DynamicCast_AsUDS_Startup_Interface;        // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x013C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky) == 0x000178, "Wrong size on Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, EntryPoint) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_object_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Variable) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_Event_EndPlayReason) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_Contains_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CustomEvent_Loaded) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CustomEvent_Modifiers) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CustomEvent_Modifiers' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CustomEvent_Modifier_Alphas) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CustomEvent_Modifier_Alphas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CustomEvent_Modifier_Targets) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CustomEvent_Modifier_Targets' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CustomEvent_Modifier_Speeds) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CustomEvent_Modifier_Speeds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CustomEvent_Hard_Reset) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CustomEvent_Hard_Reset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable) == 0x000099, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00009A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_AddUnique_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_Event_DeltaSeconds) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D1, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_int_Variable) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_AsUDS_Startup_Interface) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_AsUDS_Startup_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CreateDelegate_OutputDelegate) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_VariableSet_Tick_Delta_Seconds_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Filtered Moon Light Intensity
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity final
{
public:
	double                                        Unfiltered;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, Unfiltered) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::Unfiltered' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, Intensity) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sunrise Times
// 0x0208 (0x0208 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sunrise_Times final
{
public:
	double                                        Sunset_Time;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Factor;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Sunrise_Time;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector; // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector; // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment; // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1; // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1; // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1; // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sunrise_Times) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sunrise_Times");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sunrise_Times) == 0x000208, "Wrong size on Ultra_Dynamic_Sky_C_Sunrise_Times");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Sunset_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Sunset_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Current_Factor) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Current_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Sunrise_Time) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Sunrise_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_bool_Variable) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_3) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_4) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_bool_Variable_1) == 0x000055, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Not_PreBool_ReturnValue_1) == 0x000056, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BooleanAND_ReturnValue_1) == 0x000057, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_5) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_6) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_7) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_FClamp_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_X) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Y) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Z) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_8) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, K2Node_Select_Default) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_9) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_X_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Y_1) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Z_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0001E9, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001EC, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_10) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_11) == 0x0001F4, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, K2Node_Select_Default_1) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Finish Time Transition
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Finish_Time_Transition final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Finish_Time_Transition) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Finish_Time_Transition");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Finish_Time_Transition) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Finish_Time_Transition");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Finish_Time_Transition, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Finish_Time_Transition::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Finish_Time_Transition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Finish_Time_Transition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Finish_Time_Transition, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Finish_Time_Transition::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fire Editor Dispatchers
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers final
{
public:
	bool                                          CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Current_Hour_as_Integer_Hour;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Current_Sunset_Sunrise_Event_State_Sun_Up' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Current_Hour_as_Integer_Hour) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Current_Hour_as_Integer_Hour' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog and Dust Shadow Value
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Fog_and_Dust_Shadow_Value::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog Height Falloff
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_Height_Falloff final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_Height_Falloff");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Fog_Height_Falloff");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_Lerp_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_Lerp_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog Start Distance
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_Start_Distance final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_Start_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_Start_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_Start_Distance) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Fog_Start_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Force Valid Day
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Force_Valid_Day final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Current_Month_Lengths_Lengths;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Force_Valid_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Force_Valid_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Force_Valid_Day) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Force_Valid_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Current_Month_Lengths_Lengths) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Current_Month_Lengths_Lengths' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Array_Get_Item) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Not_PreBool_ReturnValue_1) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Clamp_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Color
// 0x004C (0x004C - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Color final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Value;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_1;                         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Color) == 0x00004C, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, Value) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Float
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Float final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Float) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Float");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Float) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Float");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Vector
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Vector final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Value;                                             // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Vector) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_VLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cloud Coverage 0-10
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10 final
{
public:
	double                                        Cloud_Coverage_0;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10, Cloud_Coverage_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_10::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cloud Coverage 0-3
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3 final
{
public:
	double                                        Cloud_Coverage_0;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3, Cloud_Coverage_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_0_3::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cloud Coverage Local
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local final
{
public:
	double                                        Local_Height;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height_Multiplier;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local, Local_Height) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local::Local_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local, Height_Multiplier) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local::Height_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cloud_Coverage_Local::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Sky Light Color and Intensity
// 0x0280 (0x0280 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity final
{
public:
	double                                        Out_Intensity;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Base_Intensity;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temperature_Tint;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Base_Color;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Luminance_Intensity_Balance;                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Current_Multiplier_Color;                          // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Output;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity_Output;                                  // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_1;   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_2;   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_RGBLinearToHSV_ReturnValue;               // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGBLinear_ReturnValue;               // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out;                   // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filtered_Night_Brightness_Multiplier; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity) == 0x000280, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Out_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Out_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Out_Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Base_Intensity) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Base_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Temperature_Tint) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Temperature_Tint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Base_Color) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Luminance_Intensity_Balance) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Luminance_Intensity_Balance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Current_Multiplier_Color) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Current_Multiplier_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Color_Output) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Color_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Intensity_Output) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Intensity_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Normal_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_2) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_RGBLinearToHSV_ReturnValue) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_RGBLinearToHSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FClamp_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, K2Node_MakeStruct_LinearColor) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_HSVToRGBLinear_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_HSVToRGBLinear_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_3_Color_Time_Blend_Out) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_3_Color_Time_Blend_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Night_Filtered_Night_Brightness_Multiplier) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Night_Filtered_Night_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue_1) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_VSize_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue_2) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_B_ImplicitCast) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_A_ImplicitCast) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_A_ImplicitCast) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FClamp_Value_ImplicitCast) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, K2Node_MakeStruct_B_ImplicitCast) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000274, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Volumetric Cloud Extinction Scale
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale final
{
public:
	double                                        Top;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale, Top) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get DateTime
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_DateTime final
{
public:
	struct FDateTime                              Current_Date_and_Time;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Time_Of_Day_to_H_M_S_Hour;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Time_Of_Day_to_H_M_S_Minute;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Time_Of_Day_to_H_M_S_Second;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Time_Of_Day_to_H_M_S_Second_Fraction;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_DateTime) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_DateTime");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_DateTime) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Get_DateTime");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_DateTime, Current_Date_and_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_DateTime::Current_Date_and_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_DateTime, CallFunc_Time_Of_Day_to_H_M_S_Hour) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_DateTime::CallFunc_Time_Of_Day_to_H_M_S_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_DateTime, CallFunc_Time_Of_Day_to_H_M_S_Minute) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Get_DateTime::CallFunc_Time_Of_Day_to_H_M_S_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_DateTime, CallFunc_Time_Of_Day_to_H_M_S_Second) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_DateTime::CallFunc_Time_Of_Day_to_H_M_S_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_DateTime, CallFunc_Time_Of_Day_to_H_M_S_Second_Fraction) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_DateTime::CallFunc_Time_Of_Day_to_H_M_S_Second_Fraction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_DateTime, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_DateTime::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_DateTime, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_DateTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_DateTime, CallFunc_MakeDateTime_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_DateTime::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Day of the Week
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Day_of_the_Week final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name_0;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Days_Since_Y1D1M1_Days;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Day_of_the_Week");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Get_Day_of_the_Week");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, Index_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, Name_0) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::Name_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, CallFunc_Multiply_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, CallFunc_Days_Since_Y1D1M1_Days) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::CallFunc_Days_Since_Y1D1M1_Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, CallFunc_Percent_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Day_of_the_Week, CallFunc_Array_Get_Item) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Day_of_the_Week::CallFunc_Array_Get_Item' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Editor Camera Location
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Editor_Camera_Location final
{
public:
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Editor_Camera_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Editor_Camera_Location");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Editor_Camera_Location) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Get_Editor_Camera_Location");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Editor_Camera_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Editor_Camera_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Inverted Global Occlusion
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Inverted_Global_Occlusion::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Manual Target Change Speed
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed final
{
public:
	struct FVector                                Old_Vector;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                New_Vector;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed, Old_Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed::Old_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed, New_Vector) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed::New_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed, CallFunc_Dot_VectorVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed, CallFunc_DegAcos_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Manual_Target_Change_Speed::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Nearby Cloud Cells To Load Asynchronously
// 0x0118 (0x0118 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously final
{
public:
	class AUDS_Cloud_Paint_Container_C*           Container;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Current_Cell_Texture;                              // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FIntPoint                              Current_Cell;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      CallFunc_Map_Keys_Keys;                            // 0x0040(0x0010)(ReferenceParm)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUDS_Cloud_Paint_Container_C*           CallFunc_GetActorOfClass_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Cloud_Paint_Cell_C*                CallFunc_Map_Find_Value;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Distance2D_ReturnValue;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously) == 0x000118, "Wrong size on Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Container) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Container' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Current_Cell_Texture) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Current_Cell_Texture' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Current_Cell) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Current_Cell' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Map_Keys_Keys) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Array_Get_Item) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_GetActorOfClass_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, K2Node_DynamicCast_AsTexture_2D) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Array_Contains_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Map_Find_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Distance2D_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Runtime Camera Location
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location, CallFunc_GetCameraLocation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Runtime_Camera_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Sky MID Parent Material Instance
// 0x01A0 (0x01A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0078(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_5;               // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_6;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       CallFunc_Map_Find_Value;                           // 0x0148(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0178(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance) == 0x0001A0, "Wrong size on Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, Temp_bool_Variable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002A, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000A1, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_4) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_5) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0000F1, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F2, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_3) == 0x0000F3, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_6) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Map_Find_Value) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Map_Find_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, K2Node_Select_Default) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Starting Cloud Painting Actors
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors final
{
public:
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0000(0x0010)(ReferenceParm)
	class AUDS_Cloud_Paint_Container_C*           CallFunc_GetActorOfClass_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors, CallFunc_GetActorOfClass_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Starting_Cloud_Painting_Actors::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get TimeCode
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_TimeCode final
{
public:
	struct FTimecode                              Time;                                              // 0x0000(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Time_Of_Day_to_H_M_S_Hour;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Time_Of_Day_to_H_M_S_Minute;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Time_Of_Day_to_H_M_S_Second;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Time_Of_Day_to_H_M_S_Second_Fraction;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              K2Node_MakeStruct_Timecode;                        // 0x0034(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_TimeCode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_TimeCode");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_TimeCode) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Get_TimeCode");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_TimeCode, Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_TimeCode::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_TimeCode, CallFunc_Time_Of_Day_to_H_M_S_Hour) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_TimeCode::CallFunc_Time_Of_Day_to_H_M_S_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_TimeCode, CallFunc_Time_Of_Day_to_H_M_S_Minute) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_TimeCode::CallFunc_Time_Of_Day_to_H_M_S_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_TimeCode, CallFunc_Time_Of_Day_to_H_M_S_Second) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Get_TimeCode::CallFunc_Time_Of_Day_to_H_M_S_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_TimeCode, CallFunc_Time_Of_Day_to_H_M_S_Second_Fraction) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_TimeCode::CallFunc_Time_Of_Day_to_H_M_S_Second_Fraction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_TimeCode, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_TimeCode::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_TimeCode, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_TimeCode::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_TimeCode, K2Node_MakeStruct_Timecode) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Get_TimeCode::K2Node_MakeStruct_Timecode' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get UDW Reference
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_UDW_Reference final
{
public:
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_UDW_Reference) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_UDW_Reference");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_UDW_Reference) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Get_UDW_Reference");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_UDW_Reference, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_UDW_Reference::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_UDW_Reference, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_UDW_Reference::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_UDW_Reference, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_UDW_Reference::CallFunc_Array_Get_Item' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Volumetric Cloud Emissive Colors
// 0x0218 (0x0218 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors final
{
public:
	struct FLinearColor                           Bottom;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Top;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Intensity_Multiplier;                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Light_from_Aurora;                                 // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Light_from_Night_Sky_Glow;                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Light_from_Light_Pollution;                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_LinearColorLinearColor_ReturnValue; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_LinearColorLinearColor_ReturnValue_1; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out_1;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Cloud_Ambient_Light_Color_Bottom; // 0x014C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Cloud_Ambient_Light_Color_Top; // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_2; // 0x016C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_3; // 0x017C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x018C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x019C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_4; // 0x01AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6; // 0x01BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x01CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors) == 0x000218, "Wrong size on Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Bottom) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Top) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Light_Intensity_Multiplier) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Light_from_Aurora) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Light_from_Aurora' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Light_from_Night_Sky_Glow) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Light_from_Night_Sky_Glow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Light_from_Light_Pollution) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Light_from_Light_Pollution' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_NotEqual_LinearColorLinearColor_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_NotEqual_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_NotEqual_LinearColorLinearColor_ReturnValue_1) == 0x000059, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_NotEqual_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Combined_Night_Brightness_out) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Combined_Night_Brightness_out_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Combined_Night_Brightness_out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Volumetric_Cloud_Ambient_Light_Color_Bottom) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Volumetric_Cloud_Ambient_Light_Color_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Volumetric_Cloud_Ambient_Light_Color_Top) == 0x00015C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Volumetric_Cloud_Ambient_Light_Color_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_2) == 0x00016C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_3) == 0x00017C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x00019C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_4) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue) == 0x0001CC, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x000214, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.MS to Time of Day
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_MS_to_Time_of_Day final
{
public:
	int32                                         Hours;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minutes;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seconds;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Miliseconds;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_MS_to_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_MS_to_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Hours) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Hours' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Minutes) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Minutes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Seconds) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Seconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Miliseconds) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Miliseconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Time) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Hard Reset Cache
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_Hard_Reset_Cache final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Hard_Reset_Cache) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Hard_Reset_Cache");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Hard_Reset_Cache) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_Hard_Reset_Cache");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Hard_Reset_Cache, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Hard_Reset_Cache::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increment Cache Timer
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Increment_Cache_Timer final
{
public:
	int32                                         Last_Cache_Step;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Cache_Timer_And_Update_Speed_Hard_Cache_Reset; // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Increment_Cache_Timer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Increment_Cache_Timer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, Last_Cache_Step) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::Last_Cache_Step' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000025, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, Temp_int_Variable_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Clamp_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Cache_Timer_And_Update_Speed_Hard_Cache_Reset) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Cache_Timer_And_Update_Speed_Hard_Cache_Reset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increment Cloud Movement Cache
// 0x02B0 (0x02B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache final
{
public:
	struct FVector                                Fog_Movement_Vector;                               // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Texture_Velocity;                                  // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Shared_Time_Offset;                                // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_Delta;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cloud_Movement_Vector;                             // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Clouds_Time_Offset;                                // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue_1;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Applied_Cloud_Speed_Out;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Total_Time_Elapsed_ReturnValue;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Total_Time_Elapsed_ReturnValue_1;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Texture_Pan_Scale_Scale;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache) == 0x0002B0, "Wrong size on Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, Fog_Movement_Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::Fog_Movement_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, Texture_Velocity) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::Texture_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, Shared_Time_Offset) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::Shared_Time_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, Time_Delta) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::Time_Delta' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, Cloud_Movement_Vector) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::Cloud_Movement_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, Clouds_Time_Offset) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::Clouds_Time_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_BooleanAND_ReturnValue) == 0x00007A, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Runtime_Or_Initializing_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Runtime_Or_Initializing_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000091, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Applied_Cloud_Speed_Out) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Applied_Cloud_Speed_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_MakeVector_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Total_Time_Elapsed_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Total_Time_Elapsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Total_Time_Elapsed_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Total_Time_Elapsed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_BooleanAND_ReturnValue_1) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000171, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Get_Cached_Float_Value) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_SelectFloat_ReturnValue_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Cloud_Texture_Pan_Scale_Scale) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Cloud_Texture_Pan_Scale_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Increment_Cloud_Movement_Cache::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increment Time of Day Forward
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward, Amount) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward::Amount' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Increment_Time_of_Day_Forward::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Initialize Occlusion
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Initialize_Occlusion final
{
public:
	class UUDS_OcclusionState_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Initialize_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Initialize_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Initialize_Occlusion) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Initialize_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Initialize_Occlusion, CallFunc_SpawnObject_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Initialize_Occlusion::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Initialize_Occlusion, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Initialize_Occlusion::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Inside Outside Cloud Layer
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Local_Normalized_Height;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, Local_Normalized_Height) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::Local_Normalized_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Fraction_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Cached Value Changing
// 0x000C (0x000C - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing final
{
public:
	EUDS_CachedProperties                         Enum;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Yes;                                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing) == 0x00000C, "Wrong size on Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing, Enum) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing::Enum' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing, Yes) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing, CallFunc_Array_Get_Item) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Cached_Value_Changing::CallFunc_Array_Get_Item' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Date and Time in Daylight Savings Time
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year_2; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'Ultra_Dynamic_Sky_C_Is_Date_and_Time_in_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Directional Light Casting Shadows
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows final
{
public:
	bool                                          Force_Disabled;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Light_Vector;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Yes;                                               // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Coverage_High_Enough_for_Disable;                  // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sun_High_Enough_for_Shadows;                       // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_Shadows;                                   // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, Force_Disabled) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::Force_Disabled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, Light_Vector) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::Light_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, Yes) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, Coverage_High_Enough_for_Disable) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::Coverage_High_Enough_for_Disable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, Sun_High_Enough_for_Shadows) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::Sun_High_Enough_for_Shadows' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, Disable_Shadows) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::Disable_Shadows' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_Not_PreBool_ReturnValue_1) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_1) == 0x000052, "Member 'Ultra_Dynamic_Sky_C_Is_Directional_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is it Daytime?
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_it_Daytime_ final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_it_Daytime_) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_it_Daytime_");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_it_Daytime_) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Is_it_Daytime_");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Lens Flare Parent Material
// 0x0130 (0x0130 - 0x0000)
struct Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Mat;                                               // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_LensFlareType                            Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x00E0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0108(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material) == 0x000130, "Wrong size on Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Mat) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_byte_Variable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_bool_Variable) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, K2Node_Select_Default) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, K2Node_Select_Default_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Lights Update Degree Threshold Test
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test final
{
public:
	struct FRotator                               World_Rotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        Light;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test, World_Rotation) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test::World_Rotation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test, Light) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test::Light' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test, ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test, CallFunc_GetForwardVector_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test, CallFunc_Dot_VectorVector_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test, CallFunc_DegAcos_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Lights_Update_Degree_Threshold_Test::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Load Required Assets
// 0x04C8 (0x04C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Load_Required_Assets final
{
public:
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_5;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_6;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_7;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item;                           // 0x0050(0x0250)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Space_Planet_Parent_MID_Out;              // 0x02A8(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_8;         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_9;         // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_10;        // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_11;        // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_12;        // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_13;        // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_14;        // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_15;        // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_16;        // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Lens_Flare_Parent_Material_Mat;           // 0x0330(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_17;        // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_18;        // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_19;        // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_20;        // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_21;        // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Cloud_Shadows_Parent_Material_Mat;        // 0x0380(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified; // 0x03A8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex; // 0x03D0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_22;        // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_23;        // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_24;        // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_25;        // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_26;        // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_27;        // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A[0x6];                                      // 0x042A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0430(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_28;        // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue; // 0x0468(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_29;        // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_30;        // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_31;        // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_32;        // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Load_Required_Assets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Load_Required_Assets");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Load_Required_Assets) == 0x0004C8, "Wrong size on Ultra_Dynamic_Sky_C_Load_Required_Assets");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_5) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_6) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_7) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, Temp_int_Array_Index_Variable) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Array_Get_Item) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Array_Length_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Space_Planet_Parent_MID_Out) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Space_Planet_Parent_MID_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_8) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_9) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_10) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_11) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_12) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_13) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, Temp_int_Loop_Counter_Variable) == 0x000304, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Less_IntInt_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Add_IntInt_ReturnValue) == 0x00030C, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_14) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_15) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_16) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, K2Node_SwitchEnum_CmpSuccess) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Lens_Flare_Parent_Material_Mat) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Lens_Flare_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_17) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_18) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_19) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_20) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_21) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Cloud_Shadows_Parent_Material_Mat) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Cloud_Shadows_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Parent_Materials_Complex) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Parent_Materials_Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_22) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_23) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_24) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_25) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_26) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_27) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, Temp_bool_Variable) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000429, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, K2Node_Select_Default) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_BooleanAND_ReturnValue_1) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_28) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_29) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_BooleanAND_ReturnValue_2) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_30) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, K2Node_SwitchEnum_CmpSuccess_1) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_31) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_32) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_32' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Monitor for Changes
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Sky_C_Monitor_for_Changes final
{
public:
	struct FVector                                New_Composite_Context;                             // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                New_Composite_Weather;                             // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_Since_Last_Check;                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Inverted_Global_Occlusion_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Composite_Context_Vector_Out;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Composite_Weather_Vector_Out;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Monitor_for_Changes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Monitor_for_Changes");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Monitor_for_Changes) == 0x000100, "Wrong size on Ultra_Dynamic_Sky_C_Monitor_for_Changes");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, New_Composite_Context) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::New_Composite_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, New_Composite_Weather) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::New_Composite_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, Time_Since_Last_Check) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::Time_Since_Last_Check' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_BreakVector_X) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_BreakVector_Y) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_BreakVector_Z) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Get_Inverted_Global_Occlusion_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Get_Inverted_Global_Occlusion_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_MapRangeClamped_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FMin_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Composite_Context_Vector_Out) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Composite_Context_Vector_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Vector_Distance_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Vector_Distance_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Composite_Weather_Vector_Out) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Composite_Weather_Vector_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Effective Illumination 0-1
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1 final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Moon_Effective_Illumination_0_1::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Specular Scale
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Light_Multiplier_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Light_Multiplier_Without_Light_Brightness; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Moon_Phase_Light_Multiplier_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Moon_Phase_Light_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Moon_Phase_Light_Multiplier_Without_Light_Brightness) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Moon_Phase_Light_Multiplier_Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Volumetric Scattering Intensity
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Phase Light Multiplier
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Without_Light_Brightness;                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier, Without_Light_Brightness) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier::Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier, CallFunc_SelectFloat_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Light_Multiplier::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Z Vector
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Z_Vector final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3;  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Z_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Z_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Z_Vector) == 0x0000E8, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Z_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_SelectVector_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Night Filter
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Night_Filter final
{
public:
	bool                                          Cached;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Night_Filter) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Night_Filter");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Night_Filter) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Night_Filter");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, Cached) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::Cached' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_SelectVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Night Filtered Night Brightness
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness, Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness::Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness, CallFunc_Combined_Night_Brightness_out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Night_Filtered_Night_Brightness::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Notify of Removed Cloud Paint Container
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Number of Days in a Year
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year final
{
public:
	int32                                         Year_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_If_Year_is_Leap_Year_Leap_Year;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year, Year_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year::Year_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year, Count) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year::Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year, CallFunc_Check_If_Year_is_Leap_Year_Leap_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year::CallFunc_Check_If_Year_is_Leap_Year_Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year, CallFunc_SelectInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Number_of_Days_in_a_Year::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Offset Date
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Sky_C_Offset_Date final
{
public:
	int32                                         Offset;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Offset_Date) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Offset_Date");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Offset_Date) == 0x000014, "Wrong size on Ultra_Dynamic_Sky_C_Offset_Date");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date, Offset) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Offset_Date::Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Offset_Date::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Offset_Date::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date, CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Offset_Date::CallFunc_Offset_Date_by_a_Number_of_Days_Output_Year' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Offset Date by a Number of Days
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days final
{
public:
	int32                                         Input_Month;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Input_Day;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Input_Year;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Offset;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Output_Month;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Output_Day;                                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Output_Year;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Forward;                                           // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Current_Year;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Day;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Month;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Current_Month_Lengths_Lengths;            // 0x0038(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Current_Month_Lengths_Lengths_1;          // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_SignOfInteger_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue_1;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue_2;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue_3;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue_4;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue_5;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue_1;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Input_Month) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Input_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Input_Day) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Input_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Input_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Input_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Offset) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Output_Month) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Output_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Output_Day) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Output_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Output_Year) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Output_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Forward) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Forward' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Current_Year) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Current_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Current_Day) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Current_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Current_Month) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Current_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Current_Month_Lengths_Lengths) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Current_Month_Lengths_Lengths' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Current_Month_Lengths_Lengths_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Current_Month_Lengths_Lengths_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_SignOfInteger_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_SignOfInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, Temp_int_Variable) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_SelectInt_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_SignOfInteger_ReturnValue_1) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_SignOfInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Array_Get_Item) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_SelectInt_ReturnValue_1) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_SignOfInteger_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_SignOfInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_SignOfInteger_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_SignOfInteger_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Add_IntInt_ReturnValue_3) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_SignOfInteger_ReturnValue_4) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_SignOfInteger_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_InRange_IntInt_ReturnValue) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Add_IntInt_ReturnValue_4) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_SignOfInteger_ReturnValue_5) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_SignOfInteger_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Abs_Int_ReturnValue) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_InRange_IntInt_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_InRange_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B1, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B2, "Member 'Ultra_Dynamic_Sky_C_Offset_Date_by_a_Number_of_Days::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.OnLoaded_AA91001A446E22425F2F54AAB2159C50
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50");
static_assert(sizeof(Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50");
static_assert(offsetof(Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50, Loaded) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50::Loaded' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.OnRep_Replicated Time of Day
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Open Editor Readme Entry
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry final
{
public:
	class FString                                 Entry;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUDS_Utility_Opener_Interface_C> K2Node_DynamicCast_AsUDS_Utility_Opener_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry, Entry) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry::Entry' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry, K2Node_DynamicCast_AsUDS_Utility_Opener_Interface) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry::K2Node_DynamicCast_AsUDS_Utility_Opener_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Open Editor Readme Entry Set
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set final
{
public:
	TArray<class FName>                           Entry;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUDS_Utility_Opener_Interface_C> K2Node_DynamicCast_AsUDS_Utility_Opener_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set, Entry) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set::Entry' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set, K2Node_DynamicCast_AsUDS_Utility_Opener_Interface) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set::K2Node_DynamicCast_AsUDS_Utility_Opener_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Open_Editor_Readme_Entry_Set::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Overcast Brightness
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Overcast_Brightness final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Overcast_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Overcast_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Overcast_Brightness) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Overcast_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Overcast Luminance Boost
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Query Project Settings And UDS Version
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version final
{
public:
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_Conv_StringToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Randomize Time Of Day
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Randomize_Time_Of_Day::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_ReceiveEndPlay");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ReceiveEndPlay) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_ReceiveEndPlay");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ReceiveTick) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_ReceiveTick");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ReceiveTick) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_ReceiveTick");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Release Async Loaded Object
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object final
{
public:
	TSoftObjectPtr<class UObject>                 Object;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object, Object) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object::Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object, CallFunc_Array_RemoveItem_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Remove Modifier
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Remove_Modifier final
{
public:
	class UUDS_Modifier_C*                        Modifier;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Fade_Out_Time;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Modifier_Index;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Remove_Modifier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Remove_Modifier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Remove_Modifier) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Remove_Modifier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, Modifier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::Modifier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, Fade_Out_Time) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::Fade_Out_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, Modifier_Index) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::Modifier_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000016, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, Temp_real_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Remove_Modifier, CallFunc_Array_Contains_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Remove_Modifier::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Replicate Modifier State
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Replicate_Modifier_State final
{
public:
	TArray<class UUDS_Modifier_C*>                Modifiers;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                Modifier_Alphas_0;                                 // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                Modifier_Targets_0;                                // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                Modifier_Speeds_0;                                 // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Hard_Reset;                                        // 0x0040(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Replicate_Modifier_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Replicate_Modifier_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Replicate_Modifier_State) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Replicate_Modifier_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Replicate_Modifier_State, Modifiers) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Replicate_Modifier_State::Modifiers' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Replicate_Modifier_State, Modifier_Alphas_0) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Replicate_Modifier_State::Modifier_Alphas_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Replicate_Modifier_State, Modifier_Targets_0) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Replicate_Modifier_State::Modifier_Targets_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Replicate_Modifier_State, Modifier_Speeds_0) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Replicate_Modifier_State::Modifier_Speeds_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Replicate_Modifier_State, Hard_Reset) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Replicate_Modifier_State::Hard_Reset' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Restart Real Time Sky Light Capture
// 0x0007 (0x0007 - 0x0000)
struct Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture) == 0x000007, "Wrong size on Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_BooleanAND_ReturnValue_2) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_BooleanAND_ReturnValue_3) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Reverse Day Ended
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_Reverse_Day_Ended final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Reverse_Day_Ended) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Reverse_Day_Ended");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Reverse_Day_Ended) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_Reverse_Day_Ended");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Reverse_Day_Ended, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Reverse_Day_Ended::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Revert Changed Console Variables
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables) == 0x0000C0, "Wrong size on Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Map_Find_Value) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Round_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Conv_IntToString_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Abs_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_SelectString_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Revert_Changed_Console_Variables::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Revert Modified Properties
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Revert_Modified_Properties final
{
public:
	EUDS_Modifier_Color_Property                  Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Float_Property                  Temp_byte_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Color_Property                  CallFunc_Array_Get_Item;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Float_Property                  CallFunc_Array_Get_Item_1;                         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_3;                         // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Revert_Modified_Properties");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Revert_Modified_Properties");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, Temp_byte_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, Temp_struct_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, Temp_byte_Variable_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, Temp_real_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Array_Get_Item) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Array_Get_Item_1) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, K2Node_Select_Default) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, K2Node_Select_Default_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Array_Get_Item_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Revert_Modified_Properties, CallFunc_Less_IntInt_ReturnValue_1) == 0x000081, "Member 'Ultra_Dynamic_Sky_C_Revert_Modified_Properties::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Runtime Or Initializing
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Runtime_Or_Initializing final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Runtime_Or_Initializing) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Runtime_Or_Initializing");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Runtime_Or_Initializing) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Runtime_Or_Initializing");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Runtime_Or_Initializing, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Runtime_Or_Initializing::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Runtime_Or_Initializing, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Runtime_Or_Initializing::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Runtime_Or_Initializing, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Runtime_Or_Initializing::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Runtime_Or_Initializing, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Runtime_Or_Initializing::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Save Calendar Data
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Save_Calendar_Data final
{
public:
	int32                                         Day_Count;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Save_Calendar_Data) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Save_Calendar_Data");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Save_Calendar_Data) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Save_Calendar_Data");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, Day_Count) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::Day_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, Temp_int_Array_Index_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Get_Item) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Get_Item_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Add_IntInt_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Less_IntInt_ReturnValue_1) == 0x000045, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_SelectInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Add_IntInt_ReturnValue_4) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Add_IntInt_ReturnValue_5) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Add_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Map_Values_Values) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Length_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Get_Item_2) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Less_IntInt_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Add_IntInt_ReturnValue_6) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Add_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Save_Calendar_Data, CallFunc_Array_Add_ReturnValue_3) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Save_Calendar_Data::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Scale Sample Count
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Scale_Sample_Count final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Scale_Sample_Count) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Scale_Sample_Count");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Scale_Sample_Count) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Scale_Sample_Count");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Temp_int_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Temp_real_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, K2Node_Select_Default) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Season Value for Weather from Date and Time
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time final
{
public:
	int32                                         Day_Offset;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Season;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Number_of_Days_in_a_Year_Count;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, Day_Offset) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::Day_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, Season) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::Season' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Number_of_Days_in_a_Year_Count) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Number_of_Days_in_a_Year_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Date_and_Time_to_Year_Progress_Days_from_Start_of_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Season_Value_for_Weather_from_Date_and_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Cloud Coverage
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Cloud_Coverage final
{
public:
	double                                        Cloud_Coverage_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cloud_Coverage_0_10_Cloud_Coverage;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UDS_Weather_Variable_Overrides_Success;   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Cloud_Coverage) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Cloud_Coverage");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Cloud_Coverage) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Set_Cloud_Coverage");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Coverage, Cloud_Coverage_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Coverage::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Coverage, CallFunc_Get_Cloud_Coverage_0_10_Cloud_Coverage) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Coverage::CallFunc_Get_Cloud_Coverage_0_10_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Coverage, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Coverage::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Coverage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Coverage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Coverage, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Coverage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Coverage, CallFunc_UDS_Weather_Variable_Overrides_Success) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Coverage::CallFunc_UDS_Weather_Variable_Overrides_Success' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Current Fog Base Colors
// 0x05F8 (0x05F8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors final
{
public:
	double                                        Moon_Twilight_Brightness_Falloff;                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sun_Twilight_Brightness_Falloff;                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Base_Directional_Scattering_Fog_Color;       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Fog_Brightness_Multiplier;                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Dust_Fog_Color;                              // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Desaturation_Amount;                               // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Twilight_Brightness_Falloff_Scale;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Twilight_Brightness_Falloff_Scale_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Luminance_Boost_Out;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Brightness_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_4;   // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x01F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0204(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0214(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0224(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Subtract_LinearColorLinearColor_ReturnValue; // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_5;   // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6; // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_1;        // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_6;   // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7; // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity; // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier; // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8; // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_7;   // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9; // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10; // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_2;        // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11; // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity_1; // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier_1; // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_8;   // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12; // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13; // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14; // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15; // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16; // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17; // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18; // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19; // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_3;            // 0x0500(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x0510(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20; // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_21; // 0x0538(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_22; // 0x0548(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_23; // 0x0558(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_2; // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x0578(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_4;            // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_24; // 0x0598(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_25; // 0x05A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_2;    // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_2;     // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1; // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_2; // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast_1; // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast_2; // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_3;     // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_4;     // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors) == 0x0005F8, "Wrong size on Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, Moon_Twilight_Brightness_Falloff) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::Moon_Twilight_Brightness_Falloff' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, Sun_Twilight_Brightness_Falloff) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::Sun_Twilight_Brightness_Falloff' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, Local_Base_Directional_Scattering_Fog_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::Local_Base_Directional_Scattering_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, Local_Fog_Brightness_Multiplier) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::Local_Fog_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, Local_Dust_Fog_Color) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::Local_Dust_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, Desaturation_Amount) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::Desaturation_Amount' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000059, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00005A, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00005B, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_X) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Y) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Z) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Twilight_Brightness_Falloff_Scale) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Twilight_Brightness_Falloff_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_X_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Twilight_Brightness_Falloff_Scale_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Twilight_Brightness_Falloff_Scale_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Overcast_Luminance_Boost_Out) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Overcast_Luminance_Boost_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_X_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_2) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Abs_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Current_Light_Pollution_ReturnValue) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Overcast_Brightness_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Overcast_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_X_3) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_3) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_3) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_X_4) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_4) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_4) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_4) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue) == 0x0001F4, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000204, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000214, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000224, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue_1) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_2) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_3) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_4) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_2) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Subtract_LinearColorLinearColor_ReturnValue) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Subtract_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_5) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue_2) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_X_5) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_5) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_5) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_FClamp_ReturnValue) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue_1) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_6) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_X_6) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_6) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_6) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_7) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue_2) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity_1) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier_1) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_8) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_3) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_21) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_22) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_23) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_2) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_4) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_24) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_25) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue_2) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0005CC, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x0005D4, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast_2) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1) == 0x0005DC, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_2) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast_1) == 0x0005E4, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast_2) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast_3) == 0x0005EC, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast_4) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Set_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast_4' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Date and Time
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Date_and_Time final
{
public:
	struct FDateTime                              Date_Time;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Date_and_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Date_and_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Date_and_Time) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Set_Date_and_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, Date_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::Date_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Month) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Day) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Hour) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Minute) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Second) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Millisecond) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Dust Amount
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Dust_Amount final
{
public:
	double                                        Dust_Amount_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UDS_Weather_Variable_Overrides_Success;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Dust_Amount) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Dust_Amount");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Dust_Amount) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Set_Dust_Amount");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Dust_Amount, Dust_Amount_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Dust_Amount::Dust_Amount_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Dust_Amount, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Dust_Amount::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Dust_Amount, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Dust_Amount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Dust_Amount, CallFunc_UDS_Weather_Variable_Overrides_Success) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Set_Dust_Amount::CallFunc_UDS_Weather_Variable_Overrides_Success' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Dust_Amount, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Set_Dust_Amount::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Fog
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Fog final
{
public:
	double                                        Fog_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UDS_Weather_Variable_Overrides_Success;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Fog");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Fog) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Set_Fog");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Fog, Fog_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Fog::Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Fog, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Fog::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Fog, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Fog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Fog, CallFunc_UDS_Weather_Variable_Overrides_Success) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Set_Fog::CallFunc_UDS_Weather_Variable_Overrides_Success' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Fog, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Set_Fog::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Modifier State
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Modifier_State final
{
public:
	class UUDS_Modifier_C*                        Modifier;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Modifier_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Modifier_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Modifier_State) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Set_Modifier_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, Modifier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::Modifier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, Alpha) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, Index_0) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, Temp_real_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, Temp_real_Variable_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Array_Add_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Array_Add_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Array_Find_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Array_Contains_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Array_Find_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, Temp_real_Variable_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Array_Add_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Modifier_State, CallFunc_Array_Contains_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Set_Modifier_State::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Previous Weather Variables
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Previous_Weather_Variables final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Previous_Weather_Variables) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Previous_Weather_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Previous_Weather_Variables) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_Set_Previous_Weather_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Previous_Weather_Variables, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Previous_Weather_Variables::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Startup Variables
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Startup_Variables final
{
public:
	struct FDateTime                              CallFunc_Current_Event_Date_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Startup_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Startup_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Startup_Variables) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Set_Startup_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Startup_Variables, CallFunc_Current_Event_Date_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Startup_Variables::CallFunc_Current_Event_Date_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Sun and Moon Root Rotation
// 0x0640 (0x0640 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation final
{
public:
	bool                                          Updating_Moon;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Updating_Sun;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Moon_Alignment;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Moon_Phase;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Moon_Position;                                // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Sun_Position;                                 // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Cached_Value_Changing_Yes;             // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Cached_Value_Changing_Yes_1;           // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x01AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_2;                 // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Moon_Z_Vector_out;                        // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Z_Vector_out;                         // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cached_Vector_Value;                  // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cached_Vector_Value_1;                // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue_1;              // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0278(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0380(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A[0x6];                                      // 0x046A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0470(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0558(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation) == 0x000640, "Wrong size on Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Updating_Moon) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Updating_Moon' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Updating_Sun) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Updating_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Moon_Alignment) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Moon_Phase) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Moon_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Moon_Position) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Moon_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Sun_Position) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Sun_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_2) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_3) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_4) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001A1, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue) == 0x0001A2, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Is_Cached_Value_Changing_Yes) == 0x0001A3, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Is_Cached_Value_Changing_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Is_Cached_Value_Changing_Yes_1) == 0x0001A4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Is_Cached_Value_Changing_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_1) == 0x0001A5, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_2) == 0x0001A6, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_3) == 0x0001A7, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_4) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001A9, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_1) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_5) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_2) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Moon_Z_Vector_out) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Moon_Z_Vector_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Z_Vector_out) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Z_Vector_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Vector_Value) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Vector_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Vector_Value_1) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Vector_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeRotFromXZ_ReturnValue_1) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeRotFromXZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Not_PreBool_ReturnValue) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanAND_ReturnValue) == 0x000469, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Time Cycle Degrees
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees final
{
public:
	bool                                          Daytime;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time_in_Range;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Internal_Time;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, Daytime) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::Daytime' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, Time_in_Range) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::Time_in_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, Internal_Time) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::Internal_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_BooleanAND_ReturnValue_1) == 0x000053, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Not_PreBool_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Set_Time_Cycle_Degrees::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Time with Time Code
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code final
{
public:
	struct FTimecode                              Time_Code;                                         // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code, Time_Code) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code::Time_Code' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Time_with_Time_Code::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Unmodified Property Values
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values final
{
public:
	double                                        Temp_real_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Color_Property                  Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Modifier_Float_Property                  Temp_byte_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, Temp_real_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_MakeLiteralInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, Temp_struct_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, Temp_int_Variable) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_Conv_IntToByte_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_GetValidValue_ReturnValue) == 0x000025, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, Temp_byte_Variable) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, Temp_int_Variable_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_GetValidValue_ReturnValue_1) == 0x000035, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000036, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, K2Node_Select_Default) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, Temp_byte_Variable_1) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, K2Node_Select_Default_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values, CallFunc_Array_Add_ReturnValue_1) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Set_Unmodified_Property_Values::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Up Global Volumetric Fog Material
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0008(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, K2Node_Select_Default) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, K2Node_DynamicCast_AsMaterial_Interface) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_BooleanAND_ReturnValue_1) == 0x000099, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Variables Controlled by Weather
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_UDS_Values_Controlled_by_UDW_Cloud_Coverage; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_UDS_Values_Controlled_by_UDW_Fog;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_UDS_Values_Controlled_by_UDW_Dust_Amount; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_UDS_Values_Controlled_by_UDW_Cloud_Direction; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_UDS_Values_Controlled_by_UDW_Wind_Speed_Multiplier; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_UDS_Values_Controlled_by_UDW_Fog_Vertical_Velocity; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_Get_UDS_Values_Controlled_by_UDW_Cloud_Coverage) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_Get_UDS_Values_Controlled_by_UDW_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_Get_UDS_Values_Controlled_by_UDW_Fog) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_Get_UDS_Values_Controlled_by_UDW_Fog' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_Get_UDS_Values_Controlled_by_UDW_Dust_Amount) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_Get_UDS_Values_Controlled_by_UDW_Dust_Amount' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_Get_UDS_Values_Controlled_by_UDW_Cloud_Direction) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_Get_UDS_Values_Controlled_by_UDW_Cloud_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_Get_UDS_Values_Controlled_by_UDW_Wind_Speed_Multiplier) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_Get_UDS_Values_Controlled_by_UDW_Wind_Speed_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather, CallFunc_Get_UDS_Values_Controlled_by_UDW_Fog_Vertical_Velocity) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Variables_Controlled_by_Weather::CallFunc_Get_UDS_Values_Controlled_by_UDW_Fog_Vertical_Velocity' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Show Editor Warning
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Show_Editor_Warning final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUDS_Utility_Opener_Interface_C> K2Node_DynamicCast_AsUDS_Utility_Opener_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Show_Editor_Warning) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Show_Editor_Warning");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Show_Editor_Warning) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Show_Editor_Warning");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Show_Editor_Warning, Title) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Show_Editor_Warning::Title' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Show_Editor_Warning, Message) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Show_Editor_Warning::Message' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Show_Editor_Warning, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Show_Editor_Warning::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Show_Editor_Warning, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Show_Editor_Warning::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Show_Editor_Warning, CallFunc_SpawnObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Show_Editor_Warning::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Show_Editor_Warning, K2Node_DynamicCast_AsUDS_Utility_Opener_Interface) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Show_Editor_Warning::K2Node_DynamicCast_AsUDS_Utility_Opener_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Show_Editor_Warning, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Show_Editor_Warning::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Simplfied Color Sun Scattering
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Simplfied_Color_Sun_Scattering::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Simplified Cloud Light Color
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out;                   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color, CallFunc_3_Color_Time_Blend_Out) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color::CallFunc_3_Color_Time_Blend_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Simplified_Cloud_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Simplified Moon Scattering Color
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Simplified_Moon_Scattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Simplified Sun Glow Color
// 0x0130 (0x0130 - 0x0000)
struct Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color) == 0x000130, "Wrong size on Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_X_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_X_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Y_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Z_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Sun_Height_Z) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_GetLinearColorValue_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, K2Node_MakeStruct_LinearColor) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, K2Node_MakeStruct_A_ImplicitCast) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Size Cache Arrays
// 0x000C (0x000C - 0x0000)
struct Ultra_Dynamic_Sky_C_Size_Cache_Arrays final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Size_Cache_Arrays");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays) == 0x00000C, "Wrong size on Ultra_Dynamic_Sky_C_Size_Cache_Arrays");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays, Size) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Size_Cache_Arrays::Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays, CallFunc_MakeLiteralInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Size_Cache_Arrays::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Size_Cache_Arrays::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sky Atmosphere Fog Contribution
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution final
{
public:
	double                                        Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Overcast_Brightness_Multiplier;                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Brightness_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, Output) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, Overcast_Brightness_Multiplier) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::Overcast_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Lerp_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Overcast_Brightness_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Overcast_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Lerp_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sky Startup Functions
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sky_Startup_Functions final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0018(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDS_Startup_Interface_C> K2Node_DynamicCast_AsUDS_Startup_Interface;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sky_Startup_Functions");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Sky_Startup_Functions");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, K2Node_DynamicCast_AsUDS_Startup_Interface) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::K2Node_DynamicCast_AsUDS_Startup_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Startup_Functions, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Sky_C_Sky_Startup_Functions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Solar Eclipse Circle Mask
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask final
{
public:
	double                                        Sun_Angular_Diameter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Moon_Angular_Diameter;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Vector;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Moon_Softness;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fraction_Showing;                                  // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Sun_Angular_Diameter) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Sun_Angular_Diameter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Moon_Angular_Diameter) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Moon_Angular_Diameter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Moon_Vector) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Moon_Softness) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Moon_Softness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Fraction_Showing) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Fraction_Showing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_SafeDivide_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_SelectFloat_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Dot_VectorVector_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_DegAcos_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_MapRangeClamped_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Space Planet Parent MID
// 0x03A0 (0x03A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID final
{
public:
	struct FUDS_Space_Planet                      Planet;                                            // 0x0000(0x0250)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Out;                                               // 0x0250(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0280(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x02A8(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x02D8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x0300(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_3;                        // 0x0328(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0350(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_2;                           // 0x0378(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID) == 0x0003A0, "Wrong size on Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Planet) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Planet' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Out) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable_1) == 0x000279, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00027A, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x00027B, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, CallFunc_BooleanOR_ReturnValue) == 0x00027C, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_1) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable_2) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_2) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_3) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default_1) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default_2) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Start Active Timers
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Sky_C_Start_Active_Timers final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Hour)>                   K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Hour)>                   K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue_1;     // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_3;                // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_2;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_3;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Start_Active_Timers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Start_Active_Timers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Start_Active_Timers) == 0x000090, "Wrong size on Ultra_Dynamic_Sky_C_Start_Active_Timers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_BooleanAND_ReturnValue_1) == 0x000052, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimerForNextTick_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimerForNextTick_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_HasAuthority_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007A, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_BooleanAND_ReturnValue_2) == 0x00007B, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_BooleanAND_ReturnValue_3) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimer_Time_ImplicitCast_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimer_Time_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Active_Timers, CallFunc_K2_SetTimer_Time_ImplicitCast_3) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Start_Active_Timers::CallFunc_K2_SetTimer_Time_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Start Editor Tick Handler
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDS_Editor_Tick_Interface_C> K2Node_DynamicCast_AsUDS_Editor_Tick_Interface;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_Not_PreBool_ReturnValue_2) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, K2Node_DynamicCast_AsUDS_Editor_Tick_Interface) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::K2Node_DynamicCast_AsUDS_Editor_Tick_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_SpawnObject_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_Not_PreBool_ReturnValue_3) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_BooleanAND_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_BooleanAND_ReturnValue_2) == 0x000045, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_BooleanAND_ReturnValue_3) == 0x000046, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler, CallFunc_BooleanAND_ReturnValue_4) == 0x000047, "Member 'Ultra_Dynamic_Sky_C_Start_Editor_Tick_Handler::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Start Instant Exposure
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Start_Instant_Exposure final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Start_Instant_Exposure) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Start_Instant_Exposure");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Start_Instant_Exposure) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Start_Instant_Exposure");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Instant_Exposure, Temp_struct_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Start_Instant_Exposure::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Instant_Exposure, CallFunc_K2_SetTimer_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Start_Instant_Exposure::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Instant_Exposure, CallFunc_AddComponent_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Start_Instant_Exposure::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Start Up UDW If it Exists
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Start_Up_UDW_If_it_Exists::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Starting Animate Time of Day Offset
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset final
{
public:
	double                                        CallFunc_Time_of_Day_Offset_Per_Second;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset, CallFunc_Time_of_Day_Offset_Per_Second) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset::CallFunc_Time_of_Day_Offset_Per_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset, CallFunc_FMin_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Starting_Animate_Time_of_Day_Offset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Starting Cloud Formation
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Starting_Cloud_Formation final
{
public:
	double                                        CallFunc_Cloud_Texture_Pan_Scale_Scale;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Starting_Cloud_Formation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Starting_Cloud_Formation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Cloud_Texture_Pan_Scale_Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Cloud_Texture_Pan_Scale_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Clouds Lighting Mask
// 0x0268 (0x0268 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask final
{
public:
	struct FLinearColor                           XY_Mask;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Light_Blend_Alpha;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Local_Lighting_Vector;                             // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_5;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask) == 0x000268, "Wrong size on Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, XY_Mask) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::XY_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, Light_Blend_Alpha) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::Light_Blend_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, Local_Lighting_Vector) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::Local_Lighting_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_X) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_Y) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_Z) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_X_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Abs_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_MapRangeClamped_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_FMax_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_MakeRotator_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakRotator_Roll) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakRotator_Pitch) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakRotator_Yaw) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_SelectVector_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_X_2) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_Y_2) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_BreakVector_Z_2) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Abs_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Abs_ReturnValue_2) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_SelectVector_ReturnValue_1) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_FClamp_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Abs_ReturnValue_3) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Abs_ReturnValue_4) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_FClamp_ReturnValue_1) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Abs_ReturnValue_5) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_FMin_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_FClamp_ReturnValue_2) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_MakeVector_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_VLerp_ReturnValue) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00025C, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Lighting_Mask::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Clouds Tint Color
// 0x0118 (0x0118 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color final
{
public:
	struct FLinearColor                           Light;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Shadow;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out;                   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out_1;                 // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color) == 0x000118, "Wrong size on Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, Light) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::Light' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, Shadow) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::Shadow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_SelectFloat_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_SelectFloat_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_3_Color_Time_Blend_Out) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_3_Color_Time_Blend_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_3_Color_Time_Blend_Out_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_3_Color_Time_Blend_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color, CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Tint_Color::CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Mode Cloud Tick
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Mode_Cloud_Tick final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Mode_Cloud_Tick) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Mode_Cloud_Tick");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Mode_Cloud_Tick) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Static_Mode_Cloud_Tick");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Mode_Cloud_Tick, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Mode_Cloud_Tick::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Mode Startup
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Mode_Startup final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Mode_Startup) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Mode_Startup");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Mode_Startup) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Static_Mode_Startup");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Mode_Startup, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Mode_Startup::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Mode_Startup, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Mode_Startup::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Mode_Startup, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Mode_Startup::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Mode_Startup, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Static_Mode_Startup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - 2D Dynamic Clouds
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_11; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_12; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_13; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_14; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_15; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_16; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_17; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds) == 0x0000B0, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, Temp_real_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, Temp_real_Variable_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, K2Node_DynamicCast_AsTexture_2D) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, K2Node_Select_Default) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_11) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_12) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_13) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_14) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_15) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_16) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_17) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___2D_Dynamic_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_17' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Aurora
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Aurora final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerHeight_NewValue_ImplicitCast;     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Aurora");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Aurora");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, K2Node_DynamicCast_AsTexture_2D) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, K2Node_DynamicCast_AsTexture_2D_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetLayerHeight_NewValue_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetLayerHeight_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Aurora, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Aurora::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Cloud Movement
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement final
{
public:
	double                                        CallFunc_Cloud_Texture_Pan_Scale_Scale;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement, CallFunc_Cloud_Texture_Pan_Scale_Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement::CallFunc_Cloud_Texture_Pan_Scale_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Movement::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Cloud Shadows
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0018(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows) == 0x000090, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_Not_PreBool_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_BooleanAND_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_BooleanAND_ReturnValue_2) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, K2Node_Select_Default) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, K2Node_DynamicCast_AsTexture_2D) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Cloud_Shadows::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Height Fog
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricFogExtinctionScale_NewValue_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricFogDistance_NewValue_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog, CallFunc_SetVolumetricFogExtinctionScale_NewValue_ImplicitCast) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog::CallFunc_SetVolumetricFogExtinctionScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog, CallFunc_SetVolumetricFogDistance_NewValue_ImplicitCast) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Height_Fog::CallFunc_SetVolumetricFogDistance_NewValue_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Lens Flare
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare final
{
public:
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Lens_Flare::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Misc
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Misc final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue;       // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue;       // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Misc) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Misc");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Misc) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Misc");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Misc, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Misc::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Misc, CallFunc_GetWorldOriginLocation_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Misc::CallFunc_GetWorldOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Misc, CallFunc_Conv_IntVectorToVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Misc::CallFunc_Conv_IntVectorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Misc, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Misc::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Mode Derivatives
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives final
{
public:
	EUDS_FogColorMode                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_SkyMode>                          K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, Temp_byte_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, Temp_bool_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, K2Node_MakeArray_Array) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_Array_Contains_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_BooleanAND_ReturnValue_1) == 0x00001B, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_BooleanAND_ReturnValue_2) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, K2Node_Select_Default) == 0x00001E, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00001F, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Mode_Derivatives::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Moon
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Moon final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Moon) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Moon");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Moon) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Moon");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, K2Node_DynamicCast_AsTexture_2D) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_FMin_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, K2Node_DynamicCast_AsTexture_2D_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_SelectFloat_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Moon, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Moon::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Post Processing
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Post_Processing final
{
public:
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Post_Processing) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Post_Processing");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Post_Processing) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Post_Processing");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Post_Processing, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Post_Processing::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Simplified Color
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Simplified_Color final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Simplified_Color) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Simplified_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Simplified_Color) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Simplified_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Simplified_Color, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Simplified_Color::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Sky Atmosphere
// 0x0005 (0x0005 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere) == 0x000005, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere, CallFunc_BooleanAND_ReturnValue_1) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Atmosphere::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Sky Light
// 0x0120 (0x0120 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetSourceCubemapAngle_NewValue_ImplicitCast; // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light) == 0x000120, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F1, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x0000F2, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000F3, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanAND_ReturnValue) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F5, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F6, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000F7, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanAND_ReturnValue_3) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_Conv_BoolToInt_ReturnValue) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanAND_ReturnValue_4) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanAND_ReturnValue_5) == 0x000111, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanOR_ReturnValue) == 0x000112, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000113, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000115, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanAND_ReturnValue_6) == 0x000116, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, K2Node_Select_Default) == 0x000117, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_BooleanOR_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light, CallFunc_SetSourceCubemapAngle_NewValue_ImplicitCast) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Light::CallFunc_SetSourceCubemapAngle_NewValue_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Sky Material
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material final
{
public:
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material, CallFunc_SelectFloat_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sky_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Space Layer
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Stars
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Stars final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0078(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Stars) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Stars");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Stars) == 0x0000E8, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Stars");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SelectFloat_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, K2Node_Select_Default) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, K2Node_DynamicCast_AsTexture_2D) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SelectFloat_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Stars, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Stars::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Static Clouds
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds, K2Node_DynamicCast_AsTexture_2D) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Static_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Sun
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Sun final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Sun) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Sun");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Sun) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Sun");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sun, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sun::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sun, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sun::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sun, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sun::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sun, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sun::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sun, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sun::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sun, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sun::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Sun, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Sun::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Volumetric Cloud Light Rays
// 0x0140 (0x0140 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude_1; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_5;   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_6;   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_7;   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_8;   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_9;   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays) == 0x000140, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Lerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_FMax_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_MapRangeClamped_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_FFloor_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_FFloor_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x000124, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_5) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_6) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_7) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_8) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_9) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_9' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Volumetric Clouds
// 0x0660 (0x0660 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0278(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height; // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height; // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale; // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height; // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height; // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out;                   // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture;               // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture_1;             // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture_2;             // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out_1;                 // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out_2;                 // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Swap_with_Cinematic_Runtime_Value_Out;    // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scale_Top; // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height_1; // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height_1; // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x052C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x053C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C[0x4];                                      // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Clouds_SubNoise_Scales_High;   // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Clouds_SubNoise_Scales_Low;    // 0x0578(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD[0x3];                                      // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Base_Clouds_Scale_ReturnValue;    // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerHeight_NewValue_ImplicitCast;     // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7; // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast; // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8; // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast; // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast; // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast; // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast; // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9; // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10; // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11; // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12; // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13; // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14; // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15; // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16; // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17; // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18; // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_19; // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_20; // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_21; // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_22; // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_23; // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_24; // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_25; // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_26; // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds) == 0x000660, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, Temp_int_Variable_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Add_IntInt_ReturnValue_2) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, Temp_int_Variable_3) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Volumetric_Cloud_First_Layer_Top_Altitude_Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, Temp_int_Variable_4) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Add_IntInt_ReturnValue_4) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_X) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_Y) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_Z) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Lerp_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_MakeVector_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_AsTexture_2D) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_X_1) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_Y_1) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_Z_1) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_IsValid_ReturnValue_1) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_MakeVector_ReturnValue_2) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, Temp_bool_Variable) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_FClamp_ReturnValue) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Lerp_ReturnValue_2) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_AsTexture) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_bSuccess_1) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Get_Item) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_Select_Default) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Length_ReturnValue) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Less_IntInt_ReturnValue) == 0x0003C4, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Get_Item_1) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Length_ReturnValue_1) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003DC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Get_Item_2) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Length_ReturnValue_2) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Less_IntInt_ReturnValue_2) == 0x0003EC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Get_Item_3) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Length_ReturnValue_3) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003FC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SelectFloat_ReturnValue_1) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Scale_Sample_Count_out) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Scale_Sample_Count_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_AsVolume_Texture) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_AsVolume_Texture' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_bSuccess_2) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_AsVolume_Texture_1) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_AsVolume_Texture_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_bSuccess_3) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_AsVolume_Texture_2) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_AsVolume_Texture_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, K2Node_DynamicCast_bSuccess_4) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Scale_Sample_Count_out_1) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Scale_Sample_Count_out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_X_2) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_Y_2) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector_Z_2) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Scale_Sample_Count_out_2) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Scale_Sample_Count_out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Swap_with_Cinematic_Runtime_Value_Out) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Swap_with_Cinematic_Runtime_Value_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scale_Top) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scale_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_FMax_ReturnValue) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height_1) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height_1) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SelectFloat_ReturnValue_2) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_IsValid_ReturnValue_2) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x00052C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x00053C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_IsValid_ReturnValue_3) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Volumetric_Clouds_SubNoise_Scales_High) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Volumetric_Clouds_SubNoise_Scales_High' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Volumetric_Clouds_SubNoise_Scales_Low) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Volumetric_Clouds_SubNoise_Scales_Low' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector2D_X) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_BreakVector2D_Y) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Get_Item_4) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Array_Length_ReturnValue_4) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Less_IntInt_ReturnValue_4) == 0x0005AC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Current_Base_Clouds_Scale_ReturnValue) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Current_Base_Clouds_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0005CC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0005D4, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0005DC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x0005EC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetLayerHeight_NewValue_ImplicitCast) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetLayerHeight_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7) == 0x0005F4, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8) == 0x0005FC, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast) == 0x000604, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast) == 0x00060C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10) == 0x000614, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12) == 0x00061C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14) == 0x000624, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00062C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16) == 0x000634, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18) == 0x00063C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_19) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_20) == 0x000644, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_21) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_22) == 0x00064C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_23) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_24) == 0x000654, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_25) == 0x000658, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_26) == 0x00065C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Volumetric_Clouds::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_26' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Properties - Water Caustics
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Static_Properties___Water_Caustics::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sun Height
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sun_Height final
{
public:
	bool                                          Cached;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Z;                                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sun_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sun_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sun_Height) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Sun_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, Cached) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::Cached' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, Z) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_SelectVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sun Z Vector
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sun_Z_Vector final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3;  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sun_Z_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sun_Z_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sun_Z_Vector) == 0x0000E8, "Wrong size on Ultra_Dynamic_Sky_C_Sun_Z_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_SelectVector_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Swap with Cinematic Runtime Value
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cine;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Higher;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, Cine) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::Cine' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, Use_Higher) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::Use_Higher' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_FMin_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_SelectFloat_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Test Point for Painted Cloud Coverage
// 0x0300 (0x0300 - 0x0000)
struct Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Coverage_with_Painting;                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Filtered_Color;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Pixel_Coordinate;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location_in_Texture_Space;                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Resulting_Coverage;                                // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Cloud_Paint_Cell_C*                Current_Cell_Data;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Cell_Coordinates_Sampled;                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location_in_Cell_Space;                            // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRadialStorm_CoverageBrush             CallFunc_Array_Get_Item;                           // 0x00B0(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Cloud_Paint_Cell_C*                CallFunc_Map_Find_Value;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x017C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_1;                         // 0x01DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_2;                         // 0x01EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_3;                         // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_4;                         // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue;                        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Divide_LinearColorLinearColor_ReturnValue; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_1;                      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_2;     // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage) == 0x000300, "Wrong size on Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Cloud_Coverage_with_Painting) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Cloud_Coverage_with_Painting' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Filtered_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Filtered_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Pixel_Coordinate) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Pixel_Coordinate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Location_in_Texture_Space) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Location_in_Texture_Space' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Resulting_Coverage) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Resulting_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Current_Cell_Data) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Current_Cell_Data' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Cell_Coordinates_Sampled) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Cell_Coordinates_Sampled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Location_in_Cell_Space) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Location_in_Cell_Space' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Temp_int_Array_Index_Variable) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_X) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Fraction_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Fraction_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Vector_Distance2D_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_MapRangeClamped_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_X_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_Y_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FFloor_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FFloor_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, K2Node_MakeStruct_IntPoint) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Map_Find_Value) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Map_Find_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x00017C, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_X_2) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_Y_2) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FFloor_ReturnValue_2) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_ReturnValue_1) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_ReturnValue_2) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FFloor_ReturnValue_3) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_ReturnValue_3) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Array_Get_Item_1) == 0x0001DC, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Array_Get_Item_2) == 0x0001EC, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001FC, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_LinearColorLerp_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Array_Get_Item_3) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Array_Get_Item_4) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_X_3) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_Y_3) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_LinearColorLerp_ReturnValue_2) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FWrap_ReturnValue) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FWrap_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Divide_LinearColorLinearColor_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Divide_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FWrap_ReturnValue_1) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FWrap_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_MakeVector2D_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Divide_VectorVector_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0002DC, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_LinearColorLerp_Alpha_ImplicitCast_2) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_LinearColorLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Three Time Floats
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Three_Time_Floats final
{
public:
	double                                        Day_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dusk;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Night;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Three_Time_Floats) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Three_Time_Floats");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Three_Time_Floats) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Three_Time_Floats");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Day_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Day_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Dusk) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Dusk' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Night) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Night' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Sun_Height_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Tick Function
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_Tick_Function final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Tick_Function) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Tick_Function");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Tick_Function) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_Tick_Function");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Function, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Tick_Function::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Tick Time Transition
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Tick_Time_Transition final
{
public:
	double                                        New_Time_of_Day;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Tick_Time_Transition) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Tick_Time_Transition");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Tick_Time_Transition) == 0x0000C0, "Wrong size on Ultra_Dynamic_Sky_C_Tick_Time_Transition");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, New_Time_of_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::New_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FFloor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FFloor_ReturnValue_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_BooleanAND_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_BooleanOR_ReturnValue) == 0x00007A, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_SelectFloat_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Ease_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Lerp_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Time of Day Animation
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Time_of_Day_Animation final
{
public:
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Time_of_Day_Animation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Time_of_Day_Animation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Time_of_Day_Animation) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Time_of_Day_Animation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Animation, CallFunc_Get_Cached_Float_Value) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Animation::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Animation, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Animation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Animation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Animation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Animation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Animation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Animation, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Animation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Time of Day Offset
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Time_of_Day_Offset final
{
public:
	double                                        Per_Second;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Time_of_Day_Offset");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Time_of_Day_Offset");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, Per_Second) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::Per_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.S
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_S final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hour;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minute;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Second;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Second_Fraction;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue_2;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_S) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_S");
static_assert(sizeof(Ultra_Dynamic_Sky_C_S) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_S");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_S::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, Hour) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_S::Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, Minute) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_S::Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, Second) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_S::Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, Second_Fraction) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_S::Second_Fraction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_FFloor_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_Fraction_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_FFloor_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_Fraction_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_FFloor_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_S, CallFunc_Fraction_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_S::CallFunc_Fraction_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Toggle Post Process Material
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_to_Remove;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     K2Node_Select_Default;                             // 0x0018(0x0010)(ConstParm, NoDestructor)
	struct FWeightedBlendable                     K2Node_Select_Default_1;                           // 0x0028(0x0010)(ConstParm, NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, Index_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, Enabled) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::Enabled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, Index_to_Remove) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::Index_to_Remove' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, Temp_int_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, Temp_int_Variable_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, CallFunc_Array_Get_Item) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, K2Node_Select_Default) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, K2Node_Select_Default_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, CallFunc_Array_AddUnique_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material, CallFunc_Array_RemoveItem_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Toggle_Post_Process_Material::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Total Time Elapsed
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Total_Time_Elapsed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Total_Time_Elapsed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Total_Time_Elapsed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Transition Sky Light Intensity
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity final
{
public:
	double                                        New_Sky_Light_Intensity_Multiplier;                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Time;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, New_Sky_Light_Intensity_Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::New_Sky_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, Transition_Time) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::Transition_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Transition Time of Day
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Transition_Time_of_Day final
{
public:
	double                                        New_Time_of_Day;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Duration__Seconds_;                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   Easing_Function;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Easing_Exponent;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Allow_Time_Going_Backwards;                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Transition_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Transition_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, New_Time_of_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::New_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Transition_Duration__Seconds_) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Transition_Duration__Seconds_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Easing_Function) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Easing_Function' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Easing_Exponent) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Easing_Exponent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Allow_Time_Going_Backwards) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Allow_Time_Going_Backwards' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_HasAuthority_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_K2_SetTimer_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Twilight Brightness Falloff
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff final
{
public:
	double                                        Z;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, Z) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, Scale) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Unfiltered Moon Light Intensity
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Base_Intensity;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Light_Multiplier_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Light_Multiplier_Without_Light_Brightness; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity) == 0x0000C0, "Wrong size on Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, Base_Intensity) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::Base_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_X_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_X_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Y_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Z_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Moon_Phase_Light_Multiplier_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Moon_Phase_Light_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Moon_Phase_Light_Multiplier_Without_Light_Brightness) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Moon_Phase_Light_Multiplier_Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Active Variables
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Active_Variables final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Active_Variables) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Active_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Active_Variables) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Update_Active_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Contains_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Cache Group Boolean
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean final
{
public:
	EUDS_Cache_Group                              Group;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_CachedProperties>                 Properties_0;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Decreased_Countdown;                               // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Not_Applied;                                       // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Old_Changing;                                      // 0x001D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Changing;                                          // 0x001E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_CachedProperties                         CallFunc_Array_Get_Item_1;                         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Group) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Group' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Properties_0) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Properties_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Decreased_Countdown) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Decreased_Countdown' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Not_Applied) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Not_Applied' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Old_Changing) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Old_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Changing) == 0x00001E, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Temp_bool_True_if_break_was_hit_Variable) == 0x00001F, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, Temp_int_Variable) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Array_Get_Item) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Max_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_Array_Get_Item_2) == 0x000065, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'Ultra_Dynamic_Sky_C_Update_Cache_Group_Boolean::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Cloud Coverage After Painting
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting final
{
public:
	double                                        CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting, CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting::CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Cloud Movement
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Cloud_Movement final
{
public:
	double                                        Cached_Movement_Alpha;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Cloud_Movement");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement) == 0x000168, "Wrong size on Ultra_Dynamic_Sky_C_Update_Cloud_Movement");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, Cached_Movement_Alpha) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::Cached_Movement_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_LinearColorLerp_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Lerp_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x00015C, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Movement, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Movement::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Common Derivatives
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Common_Derivatives final
{
public:
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cloud_Coverage_0_3_Cloud_Coverage;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cloud_Coverage_Local_Local_Height;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Common_Derivatives) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Common_Derivatives");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Common_Derivatives) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Update_Common_Derivatives");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Common_Derivatives, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Common_Derivatives::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Common_Derivatives, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Common_Derivatives::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Common_Derivatives, CallFunc_Get_Cloud_Coverage_0_3_Cloud_Coverage) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Common_Derivatives::CallFunc_Get_Cloud_Coverage_0_3_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Common_Derivatives, CallFunc_Get_Cloud_Coverage_Local_Local_Height) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Common_Derivatives::CallFunc_Get_Cloud_Coverage_Local_Local_Height' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Current Volumetric Clouds MID
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_FMin_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000015, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, K2Node_Select_Default) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue_1) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue_2) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue_3) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Directional Light Rotations
// 0x01F0 (0x01F0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations final
{
public:
	bool                                          CallFunc_Is_Cached_Value_Changing_Yes;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Cached_Value_Changing_Yes_1;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Lights_Update_Degree_Threshold_Test_ReturnValue; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Lights_Update_Degree_Threshold_Test_ReturnValue_1; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0010(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x5];                                       // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0100(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations) == 0x0001F0, "Wrong size on Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Is_Cached_Value_Changing_Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Is_Cached_Value_Changing_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Is_Cached_Value_Changing_Yes_1) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Is_Cached_Value_Changing_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Lights_Update_Degree_Threshold_Test_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Lights_Update_Degree_Threshold_Test_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Lights_Update_Degree_Threshold_Test_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Lights_Update_Degree_Threshold_Test_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_2) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_3) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_4) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000F9, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanAND_ReturnValue_1) == 0x0000FA, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_5) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Dynamic Sky Light Multiplier
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Global Volumetric Fog Material
// 0x0108 (0x0108 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material final
{
public:
	double                                        Weather_Contribution;                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Local_Weather_State_Values_Cloud_Coverage; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Wind_Intensity; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Rain;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Snow;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Dust;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Fog;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Thunder_Lightning; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material) == 0x000108, "Wrong size on Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, Weather_Contribution) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::Weather_Contribution' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Get_Cached_Float_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Get_Local_Weather_State_Values_Cloud_Coverage) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Get_Local_Weather_State_Values_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Get_Local_Weather_State_Values_Wind_Intensity) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Get_Local_Weather_State_Values_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Get_Local_Weather_State_Values_Rain) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Get_Local_Weather_State_Values_Rain' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Get_Local_Weather_State_Values_Snow) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Get_Local_Weather_State_Values_Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Get_Local_Weather_State_Values_Dust) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Get_Local_Weather_State_Values_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Get_Local_Weather_State_Values_Fog) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Get_Local_Weather_State_Values_Fog' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Get_Local_Weather_State_Values_Thunder_Lightning) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Get_Local_Weather_State_Values_Thunder_Lightning' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_FMax_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_MapRangeClamped_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_FMax_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_FMax_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_FMax_ReturnValue_3) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Global_Volumetric_Fog_Material::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update High Priority Properties
// 0x0340 (0x0340 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_High_Priority_Properties final
{
public:
	int32                                         Current_Update_Step;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Clouds_Density_Out;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Clouds_Density_Out_1;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filtered_Night_Brightness_Multiplier; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_2;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_3;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_4;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_5;                 // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_6;                 // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_2;                 // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_3;                 // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_4;                 // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_5;                 // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_6;                 // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_7;                 // 0x01D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_7;                 // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_4;                         // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_8;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_8;                 // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_9;                 // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_10;                // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_11;                // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_12;                // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_9;                 // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_10;                // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_5;                         // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_13;                // 0x029C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_14;                // 0x02AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_15;                // 0x02BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_11;                // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_6;                         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightFogContribution_NewValue_ImplicitCast; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast;   // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogMaxOpacity_Value_ImplicitCast;      // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStartDistance_Value_ImplicitCast;      // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Cached_Height_Fog_Density_ImplicitCast; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_High_Priority_Properties");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties) == 0x000340, "Wrong size on Ultra_Dynamic_Sky_C_Update_High_Priority_Properties");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, Current_Update_Step) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::Current_Update_Step' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, Temp_int_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, Temp_int_Variable_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Current_Volumetric_Clouds_Density_Out) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Current_Volumetric_Clouds_Density_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_GetForwardVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000075, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_BooleanOR_ReturnValue) == 0x000085, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Array_Get_Item_1) == 0x000086, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_BooleanOR_ReturnValue_1) == 0x000087, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Lerp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Current_Volumetric_Clouds_Density_Out_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Current_Volumetric_Clouds_Density_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Night_Filtered_Night_Brightness_Multiplier) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Night_Filtered_Night_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_BooleanOR_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Lerp_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_2) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_3) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Lerp_ReturnValue_2) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Percent_IntInt_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SelectInt_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, K2Node_SwitchInteger_CmpSuccess) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000135, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_4) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_5) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Add_IntInt_ReturnValue_2) == 0x00015C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Array_Get_Item_2) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, K2Node_SwitchInteger_CmpSuccess_1) == 0x000169, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_6) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_2) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_3) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_4) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_5) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Array_Get_Item_3) == 0x0001C1, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_6) == 0x0001C4, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_7) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_7) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Array_Get_Item_4) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Lerp_ReturnValue_3) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_8) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_8) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_9) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_10) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_11) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_12) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_9) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_10) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Array_Get_Item_5) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_13) == 0x00029C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_14) == 0x0002AC, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Color_Value_15) == 0x0002BC, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Color_Value_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Get_Cached_Float_Value_11) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Get_Cached_Float_Value_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x0002E4, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_Array_Get_Item_6) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0002EC, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0002F4, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0002FC, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000304, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetHeightFogContribution_NewValue_ImplicitCast) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetHeightFogContribution_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x00030C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x000314, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetSpecularScale_NewValue_ImplicitCast) == 0x00031C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetSpecularScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetFogMaxOpacity_Value_ImplicitCast) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetFogMaxOpacity_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetStartDistance_Value_ImplicitCast) == 0x000324, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetStartDistance_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, K2Node_VariableSet_Cached_Height_Fog_Density_ImplicitCast) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::K2Node_VariableSet_Cached_Height_Fog_Density_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00032C, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000334, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_High_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_High_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Lens Flare
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Lens_Flare final
{
public:
	bool                                          Allow_Lens_Flare;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Lens_Flare) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Lens_Flare) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Update_Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, Allow_Lens_Flare) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::Allow_Lens_Flare' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_X_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003B, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanOR_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_FMax_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Low Priority Properties
// 0x04A0 (0x04A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties final
{
public:
	int32                                         Current_Update_Step;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_2;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_3;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Cached_Value_Changing_Yes;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_4;                 // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_2;                 // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_3;                 // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_4;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_5;                 // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_6;                 // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_7;                 // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_8;                 // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_5;                 // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_6;                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_9;                 // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_7;                 // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_10;                // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_11;                // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_8;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_9;                 // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_10;                // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_11;                // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_12;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_12;                // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_13;                // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_14;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_15;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_16;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_17;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_18;                // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_19;                // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_20;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_13;                // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_21;                // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_14;                // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_15;                // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_22;                // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_23;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_24;                // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_25;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_26;                // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_27;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_28;                // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_29;                // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_30;                // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_31;                // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_32;                // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_33;                // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_16;                // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_34;                // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_17;                // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_18;                // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_19;                // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_35;                // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_4;                         // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_2D_Cloud_Tint_ReturnValue;        // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_5;                         // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_6;                         // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x03EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EB[0x1];                                      // 0x03EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_7;             // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_7;                         // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast; // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast; // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast; // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7; // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8; // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast; // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMieScatteringScale_NewValue_ImplicitCast; // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMieAnisotropy_NewValue_ImplicitCast;   // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceAngle_NewValue_ImplicitCast; // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogHeightFalloff_Value_ImplicitCast;   // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1; // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast;   // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast; // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_11; // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_12; // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_13; // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_14; // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_15; // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_16; // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_17; // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast; // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1; // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9; // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties) == 0x0004A0, "Wrong size on Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, Current_Update_Step) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::Current_Update_Step' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Array_Get_Item) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, Temp_int_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_GetForwardVector_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_GetForwardVector_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Is_Cached_Value_Changing_Yes) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Is_Cached_Value_Changing_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x0000A5, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Array_Get_Item_1) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, Temp_int_Variable_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, Temp_int_Variable_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, Temp_int_Variable_3) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_4) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_2) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, Temp_int_Variable_4) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Percent_IntInt_ReturnValue) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, K2Node_SwitchInteger_CmpSuccess) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, Temp_int_Variable_5) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, Temp_int_Variable_6) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, K2Node_Select_Default) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, K2Node_SwitchEnum_CmpSuccess) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000119, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, K2Node_SwitchEnum_CmpSuccess_1) == 0x00011A, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue) == 0x00011B, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Array_Get_Item_2) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_3) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_4) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_5) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BreakVector_X) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BreakVector_Y) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BreakVector_Z) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MapRangeClamped_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_6) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_7) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_8) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_5) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_6) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_9) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_7) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_10) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_11) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_8) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_9) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_10) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_11) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_12) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_12) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_13) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_14) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_15) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_16) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Array_Get_Item_3) == 0x00025C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_17) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_18) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_19) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_20) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_13) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_21) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_14) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_15) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_22) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_23) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_24) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_25) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_26) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_27) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue_2) == 0x0002F9, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue_3) == 0x0002FA, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue_4) == 0x0002FB, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_28) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_29) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_30) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_31) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_32) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue_5) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue_6) == 0x000331, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue_7) == 0x000332, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_BooleanAND_ReturnValue_8) == 0x000333, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_33) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_16) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_34) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SelectFloat_ReturnValue) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_17) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_18) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Color_Value_19) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Color_Value_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Get_Cached_Float_Value_35) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Get_Cached_Float_Value_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Sun_Height_Z) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Array_Get_Item_4) == 0x0003CC, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Current_2D_Cloud_Tint_ReturnValue) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Current_2D_Cloud_Tint_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Array_Get_Item_5) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Array_Get_Item_6) == 0x0003E9, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x0003EA, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Conv_ByteToInt_ReturnValue_7) == 0x0003EC, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Conv_ByteToInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_Array_Get_Item_7) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0003F4, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x0003FC, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000404, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00040C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000414, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x00041C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000424, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x00042C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast) == 0x000434, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x00043C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x000444, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x00044C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8) == 0x000454, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetMieScatteringScale_NewValue_ImplicitCast) == 0x00045C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetMieScatteringScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetMieAnisotropy_NewValue_ImplicitCast) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetMieAnisotropy_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetLightSourceAngle_NewValue_ImplicitCast) == 0x000464, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetLightSourceAngle_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetFogHeightFalloff_Value_ImplicitCast) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetFogHeightFalloff_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1) == 0x00046C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetSpecularScale_NewValue_ImplicitCast) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetSpecularScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast) == 0x000474, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_11) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_12) == 0x00047C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_13) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_14) == 0x000484, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_15) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_16) == 0x00048C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_17) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast) == 0x000494, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9) == 0x00049C, "Member 'Ultra_Dynamic_Sky_C_Update_Low_Priority_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Lunar Phase
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Lunar_Phase final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Lunar_Phase) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Lunar_Phase");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Lunar_Phase) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Update_Lunar_Phase");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lunar_Phase, Hour) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Lunar_Phase::Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lunar_Phase, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Lunar_Phase::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lunar_Phase, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Lunar_Phase::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lunar_Phase, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Lunar_Phase::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Non-Cached Active Properties
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_8;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogMaxOpacity_Value_ImplicitCast;      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties) == 0x0000E8, "Wrong size on Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_2) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_3) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_4) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_5) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_6) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_7) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Percent_IntInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_8) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, K2Node_Select_Default) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_9) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_FMin_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_10) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, Temp_int_Variable_11) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, K2Node_Select_Default_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Percent_IntInt_ReturnValue_2) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_SetFogMaxOpacity_Value_ImplicitCast) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_SetFogMaxOpacity_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_Non_Cached_Active_Properties::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Overcast Turbulence
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence final
{
public:
	double                                        Turbulence_Strength;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_Value_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, Turbulence_Strength) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::Turbulence_Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Get_Cached_Float_Value) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_MapRangeUnclamped_Value_ImplicitCast) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_MapRangeUnclamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Painted Cloud Coverage Target
// 0x05B0 (0x05B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target final
{
public:
	class AActor*                                 Storm_Actor;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Storm_Color;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Storm_Soft_Fraction;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Storm_Coverage_Level;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Storm_Size;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Storm_Location;                                    // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             Draw_Context;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, NoDestructor)
	TMap<struct FIntPoint, class UTexture*>       Loaded_Cell_Textures;                              // 0x0050(0x0050)(Edit, BlueprintVisible)
	struct FIntPoint                              Current_Cell;                                      // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_Cell_Max;                                        // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_Cell_Min;                                        // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_Cell_Max;                                        // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_Cell_Min;                                        // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Lower_Right_Corner;                                // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FIntPoint>                      Cells_Used;                                        // 0x00C8(0x0010)(Edit, BlueprintVisible)
	class UCanvas*                                Draw_Canvas;                                       // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRadialStorm_CoverageBrush             K2Node_MakeStruct_RadialStorm_CoverageBrush;       // 0x0188(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0258(0x0008)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Runtime_Or_Initializing_ReturnValue;      // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_6;           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRadial_Storm_Sky_Interface_C> K2Node_DynamicCast_AsRadial_Storm_Sky_Interface;   // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cloud_Coverage_Brush_Data_Soft_Fraction; // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cloud_Coverage_Brush_Data_RGBA;       // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cloud_Coverage_Brush_Data_World_Location; // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cloud_Coverage_Brush_Data_Size;       // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cloud_Coverage_Brush_Data_UDS_Coverage_Level; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0338(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUDS_Cloud_Paint_Cell_C*                CallFunc_Map_Find_Value;                           // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x034B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x2];                                      // 0x0362(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Array_Get_Item_1;                         // 0x0364(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Cloud_Paint_Cell_C*                CallFunc_Map_Find_Value_1;                         // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_7;           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_8;           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_9;           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Map_Find_Value_2;                         // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_Map_Find_Value_3;                         // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out_1; // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_10;          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0478(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5[0x3];                                      // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cloud_Coverage_Target_Mapping_Mapping;    // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_11;          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_8;        // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_6;               // 0x04E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item_2;                         // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_1;    // 0x0510(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_2;       // 0x0558(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_SnappedToGrid_ReturnValue;         // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeStruct_Alpha_11_0BE1BD674F2496F3B3021E8751BA3E42_ImplicitCast; // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast; // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target) == 0x0005B0, "Wrong size on Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Storm_Actor) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Storm_Actor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Storm_Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Storm_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Storm_Soft_Fraction) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Storm_Soft_Fraction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Storm_Coverage_Level) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Storm_Coverage_Level' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Storm_Size) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Storm_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Storm_Location) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Storm_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Draw_Context) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Draw_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Loaded_Cell_Textures) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Loaded_Cell_Textures' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Current_Cell) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Current_Cell' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Y_Cell_Max) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Y_Cell_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Y_Cell_Min) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Y_Cell_Min' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, X_Cell_Max) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::X_Cell_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, X_Cell_Min) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::X_Cell_Min' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Lower_Right_Corner) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Lower_Right_Corner' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Cells_Used) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Cells_Used' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Draw_Canvas) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Draw_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Variable) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Variable_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_MakeStruct_IntPoint) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Loop_Counter_Variable) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Loop_Counter_Variable_1) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue_2) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue_3) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Loop_Counter_Variable_2) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue_4) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Array_Index_Variable) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x000115, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue) == 0x000116, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_1) == 0x000117, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_2) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000119, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00011A, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakColor_R) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakColor_G) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakColor_B) == 0x000124, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakColor_A) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Array_Index_Variable_1) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_MakeStruct_RadialStorm_CoverageBrush) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_MakeStruct_RadialStorm_CoverageBrush' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Add_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Vector_Distance2D_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_3) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Length_ReturnValue) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_1) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanOR_ReturnValue) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_4) == 0x000261, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000262, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Runtime_Or_Initializing_ReturnValue) == 0x000263, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Runtime_Or_Initializing_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_bool_Variable) == 0x000264, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000265, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_5) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Not_PreBool_ReturnValue_1) == 0x000271, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_2) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_3) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_6) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_4) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_DynamicCast_AsRadial_Storm_Sky_Interface) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_DynamicCast_AsRadial_Storm_Sky_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_DynamicCast_bSuccess) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Get_Cloud_Coverage_Brush_Data_Soft_Fraction) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Get_Cloud_Coverage_Brush_Data_Soft_Fraction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Get_Cloud_Coverage_Brush_Data_RGBA) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Get_Cloud_Coverage_Brush_Data_RGBA' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Get_Cloud_Coverage_Brush_Data_World_Location) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Get_Cloud_Coverage_Brush_Data_World_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Get_Cloud_Coverage_Brush_Data_Size) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Get_Cloud_Coverage_Brush_Data_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Get_Cloud_Coverage_Brush_Data_UDS_Coverage_Level) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Get_Cloud_Coverage_Brush_Data_UDS_Coverage_Level' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Not_PreBool_ReturnValue_2) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_K2_SetTimer_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_Value) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_ReturnValue) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanOR_ReturnValue_1) == 0x000349, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanOR_ReturnValue_2) == 0x00034A, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsDedicatedServer_ReturnValue) == 0x00034B, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Array_Index_Variable_2) == 0x00034C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Not_PreBool_ReturnValue_3) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Get_Item) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanAND_ReturnValue) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_6) == 0x000361, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Get_Item_1) == 0x000364, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Length_ReturnValue_1) == 0x00036C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_Value_1) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_ReturnValue_1) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Less_IntInt_ReturnValue_1) == 0x000379, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_7) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_DynamicCast_AsTexture_2D) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_DynamicCast_bSuccess_1) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_AddUnique_ReturnValue) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_7) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_8) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_9) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_Value_2) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_ReturnValue_2) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_Value_3) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_ReturnValue_3) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out_1) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_Select_Default) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Not_PreBool_ReturnValue_4) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanOR_ReturnValue_3) == 0x000441, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_10) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_5) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Add_ReturnValue_1) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakVector2D_X) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakVector2D_Y) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_FFloor_ReturnValue) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0004A4, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_FFloor_ReturnValue_1) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0004AC, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Cloud_Coverage_Target_Mapping_Mapping) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Cloud_Coverage_Target_Mapping_Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_11) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_8) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_6) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Get_Item_2) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_Vector2DVector2D_ReturnValue_1) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Length_ReturnValue_2) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakVector2D_X_1) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakVector2D_Y_1) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Less_IntInt_ReturnValue_2) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_FFloor_ReturnValue_2) == 0x00054C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_FFloor_ReturnValue_3) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_Vector2DVector2D_ReturnValue_2) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_8) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Vector_SnappedToGrid_ReturnValue) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Vector_SnappedToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_MakeStruct_Alpha_11_0BE1BD674F2496F3B3021E8751BA3E42_ImplicitCast) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_MakeStruct_Alpha_11_0BE1BD674F2496F3B3021E8751BA3E42_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast) == 0x0005AC, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Path Tracer Fog
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog) == 0x0000A0, "Wrong size on Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_BooleanAND_ReturnValue_1) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Path_Tracer_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Post Process Blend Weights
// 0x1070 (0x1070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights final
{
public:
	double                                        Weather_Multiplier;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Interior_Multiplier;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust_Multiplier;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fog_Multiplier;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloudy_Multiplier;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_Multiplier;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  Post_Component;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Post_Process_Stage                Current_Component_Settings;                        // 0x0040(0x0710)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0751(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_752[0x2];                                      // 0x0752(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759[0x7];                                      // 0x0759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0772(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_773[0x5];                                      // 0x0773(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0790(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_2;          // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Cloud_Coverage; // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Wind_Intensity; // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Rain;      // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Snow;      // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Dust;      // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Fog;       // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Local_Weather_State_Values_Thunder_Lightning; // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_3;          // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x083A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83B[0x1];                                      // 0x083B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_844[0x4];                                      // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_871[0x7];                                      // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F8[0x8];                                      // 0x08F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Post_Process_Stage                CallFunc_Array_Get_Item;                           // 0x0900(0x0710)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x1010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1011[0x3];                                     // 0x1011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x1014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x1018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1019[0x7];                                     // 0x1019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x1020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x1028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x102C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102D[0x3];                                     // 0x102D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_2;             // 0x1038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103C[0x4];                                     // 0x103C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x1040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_Array_Get_Item_1;                         // 0x1048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Three_Time_Floats_Out;                    // 0x1050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x105C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105D[0x3];                                     // 0x105D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast;       // 0x1060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1064[0x4];                                     // 0x1064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights) == 0x001070, "Wrong size on Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Weather_Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Weather_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Interior_Multiplier) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Interior_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Dust_Multiplier) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Dust_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Fog_Multiplier) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Fog_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Cloudy_Multiplier) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Cloudy_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Time_Multiplier) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Time_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Post_Component) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Post_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Current_Component_Settings) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Current_Component_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000751, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Temp_int_Array_Index_Variable) == 0x000754, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue) == 0x000771, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_1) == 0x000772, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_2) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, K2Node_DynamicCast_bSuccess) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToDouble_ReturnValue_2) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Get_Local_Weather_State_Values_Cloud_Coverage) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Get_Local_Weather_State_Values_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Get_Local_Weather_State_Values_Wind_Intensity) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Get_Local_Weather_State_Values_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Get_Local_Weather_State_Values_Rain) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Get_Local_Weather_State_Values_Rain' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Get_Local_Weather_State_Values_Snow) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Get_Local_Weather_State_Values_Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Get_Local_Weather_State_Values_Dust) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Get_Local_Weather_State_Values_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Get_Local_Weather_State_Values_Fog) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Get_Local_Weather_State_Values_Fog' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Get_Local_Weather_State_Values_Thunder_Lightning) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Get_Local_Weather_State_Values_Thunder_Lightning' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_IsValid_ReturnValue) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_FClamp_ReturnValue) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Lerp_ReturnValue) == 0x000808, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_FClamp_ReturnValue_1) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_3) == 0x000820, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToDouble_ReturnValue_3) == 0x000828, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Lerp_ReturnValue_1) == 0x000830, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_BooleanOR_ReturnValue) == 0x000838, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_BooleanOR_ReturnValue_1) == 0x000839, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_BooleanOR_ReturnValue_2) == 0x00083A, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Temp_int_Loop_Counter_Variable) == 0x00083C, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Add_IntInt_ReturnValue) == 0x000840, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000848, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000850, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000858, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000860, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000868, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000870, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000878, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue) == 0x000880, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_1) == 0x000888, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Lerp_ReturnValue_2) == 0x000890, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_2) == 0x000898, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_3) == 0x0008A0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_4) == 0x0008A8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0008B0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_MapRangeClamped_ReturnValue) == 0x0008B8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0008C0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_5) == 0x0008C8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_6) == 0x0008D0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_7) == 0x0008D8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_8) == 0x0008E0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0008E8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0008F0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Get_Item) == 0x000900, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_4) == 0x001010, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue) == 0x001014, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_5) == 0x001018, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue) == 0x001020, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x001028, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_6) == 0x00102C, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x001030, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue_2) == 0x001038, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x001040, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Get_Item_1) == 0x001048, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Three_Time_Floats_Out) == 0x001050, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Three_Time_Floats_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Length_ReturnValue) == 0x001058, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Less_IntInt_ReturnValue) == 0x00105C, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, K2Node_VariableSet_BlendWeight_ImplicitCast) == 0x001060, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::K2Node_VariableSet_BlendWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x001068, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Settings Based on Scalability
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability final
{
public:
	bool                                          Reconstruct;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Effects_Quality;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Apply_Feature_Level_Mode_Changes_Made_Changes; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_1; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue_2; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue_2; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_SkyMode                                  CallFunc_Map_Find_Value;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, Reconstruct) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::Reconstruct' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, Effects_Quality) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::Effects_Quality' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_Apply_Feature_Level_Mode_Changes_Made_Changes) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_Apply_Feature_Level_Mode_Changes_Made_Changes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_GetConsoleVariableIntValue_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_GetConsoleVariableIntValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_GetGameUserSettings_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_GetConsoleVariableIntValue_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_GetConsoleVariableIntValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_Map_Find_Value) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_Map_Find_ReturnValue) == 0x000045, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000046, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Scalability::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Sky Atmosphere Location
// 0x0248 (0x0248 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0030(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location) == 0x000248, "Wrong size on Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_X_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_Y_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_Z_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Space Layer Vectors
// 0x03B0 (0x03B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors final
{
public:
	TArray<class UMaterialInstanceDynamic*>       All_MIDs;                                          // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FLinearColor                           Light_Vector;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Current_Planet_MID;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Planet_Location;                                   // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Index;                                     // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Planet_Lightsource                       Temp_byte_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item_3;                         // 0x00C8(0x0250)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0364(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_6;                         // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors) == 0x0003B0, "Wrong size on Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, All_MIDs) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::All_MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Light_Vector) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Light_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Current_Planet_MID) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Current_Planet_MID' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Planet_Location) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Planet_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Current_Index) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Current_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Temp_int_Variable) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Temp_byte_Variable) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Temp_int_Variable_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Temp_int_Array_Index_Variable) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Get_Item) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_AddUnique_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_GetForwardVector_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Get_Item_3) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Normal_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, K2Node_Select_Default) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Get_Item_4) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Add_ReturnValue) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000364, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Get_Item_5) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Length_ReturnValue_2) == 0x000384, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Array_Get_Item_6) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_Less_IntInt_ReturnValue_2) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Layer_Vectors::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Total Days Elapsed
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed final
{
public:
	int32                                         Current_Day_Count;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Start_Day_Count;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Days_Since_Y1D1M1_Days;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Days_Since_Y1D1M1_Days_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, Current_Day_Count) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::Current_Day_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, Start_Day_Count) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::Start_Day_Count' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_Days_Since_Y1D1M1_Days) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_Days_Since_Y1D1M1_Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_BreakDateTime_Year) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_BreakDateTime_Month) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_BreakDateTime_Day) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_BreakDateTime_Hour) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_BreakDateTime_Minute) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_BreakDateTime_Second) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_BreakDateTime_Millisecond) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed, CallFunc_Days_Since_Y1D1M1_Days_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Total_Days_Elapsed::CallFunc_Days_Since_Y1D1M1_Days_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Volumetric Cloud Light Rays
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays final
{
public:
	double                                        Current_Strength;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Selected_Light_Vector;                             // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Using_Sun;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays) == 0x000098, "Wrong size on Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, Current_Strength) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::Current_Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, Selected_Light_Vector) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::Selected_Light_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, Using_Sun) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::Using_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_GetForwardVector_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Get_Cached_Float_Value) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_SelectVector_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Get_Cached_Color_Value) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Water Level Parameter
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Water_Level_Parameter final
{
public:
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Water_Level_Parameter) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Water_Level_Parameter");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Water_Level_Parameter) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Update_Water_Level_Parameter");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Water_Level_Parameter, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Water_Level_Parameter::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Ambient Light Color
// 0x03A0 (0x03A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color final
{
public:
	struct FLinearColor                           Bottom;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Top;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Top_Intensity;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bottom_Intensity;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out;                   // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filtered_Night_Brightness_Multiplier; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out_1;                 // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_3;            // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_4;   // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Luminance_Boost_Out;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_5;   // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8; // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_3_Color_Time_Blend_Out_2;                 // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9; // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10; // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11; // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12; // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13; // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14; // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15; // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16; // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17; // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_2;    // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18; // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_2;     // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_3;     // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color) == 0x0003A0, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, Bottom) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, Top) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, Top_Intensity) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::Top_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, Bottom_Intensity) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::Bottom_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, Color) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_X) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Y) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Z) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Abs_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_3_Color_Time_Blend_Out) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_3_Color_Time_Blend_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, K2Node_MakeStruct_LinearColor) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_FClamp_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_ReturnValue_2) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Night_Filtered_Night_Brightness_Multiplier) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Night_Filtered_Night_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_3_Color_Time_Blend_Out_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_3_Color_Time_Blend_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_ReturnValue_3) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_X_1) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Y_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Z_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_SelectFloat_ReturnValue) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_4) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_FClamp_ReturnValue_1) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Overcast_Luminance_Boost_Out) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Overcast_Luminance_Boost_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_X_2) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Y_2) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Z_2) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Abs_ReturnValue_1) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_5) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Lerp_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_3_Color_Time_Blend_Out_2) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_3_Color_Time_Blend_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue_2) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000384, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_2) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_3) == 0x000394, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Base Cloud Height
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height final
{
public:
	double                                        Base_Cloud_Height_0;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, Base_Cloud_Height_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::Base_Cloud_Height_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud First Layer Top Altitude
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude final
{
public:
	double                                        Cloud_Top_Altitude;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, Cloud_Top_Altitude) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_First_Layer_Top_Altitude::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Floor Variation
// 0x00F0 (0x00F0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation final
{
public:
	double                                        Height_Clear;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height_Cloudy;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Color;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Color_Luminance_Variation;                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height_Multiplier;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation) == 0x0000F0, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Height_Clear) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Height_Clear' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Height_Cloudy) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Height_Cloudy' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Color_Luminance_Variation) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Color_Luminance_Variation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Height_Multiplier) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Height_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_X) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_Y) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_Z) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_SelectFloat_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Abs_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Lerp_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_FMax_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_X_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_Y_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_Z_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Abs_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Layer Height
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height final
{
public:
	double                                        Base_Cloud_Height_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Layer_Height;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, Base_Cloud_Height_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::Base_Cloud_Height_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, Layer_Height) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Layer Scale
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale final
{
public:
	double                                        Layer_Scale;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, Layer_Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::Layer_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds Parent Materials
// 0x0150 (0x0150 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Simplified;                                        // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Complex;                                           // 0x0028(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0058(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0080(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x00B0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_3;                        // 0x00D8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0100(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0128(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials) == 0x000150, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Simplified) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Complex) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_2) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_3) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds SubNoise Scales
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales final
{
public:
	struct FLinearColor                           High;                                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Low;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, High) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::High' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, Low) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::Low' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Light Ray Strength and Color
// 0x01D8 (0x01D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color final
{
public:
	double                                        Ray_Strength;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Ray_Color;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Strength;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Light_Ray_Vector;                                  // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0184(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x01A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color) == 0x0001D8, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, Ray_Strength) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::Ray_Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, Ray_Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::Ray_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, Color) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, Strength) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, Light_Ray_Vector) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::Light_Ray_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_X) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_Y) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_Z) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_X_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_Y_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_Z_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_SelectColor_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BooleanOR_ReturnValue) == 0x0000D1, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D2, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_SelectFloat_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_SelectColor_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_X_2) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_Y_2) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_BreakVector_Z_2) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000194, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0001A4, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_SelectVector_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Light_Ray_Strength_and_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.World Space to Drawn Target Pixel Space
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space final
{
public:
	struct FVector2D                              In;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Out;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Coverage_Target_Mapping_Mapping;    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space");
static_assert(sizeof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Cloud_Coverage_Target_Mapping_Mapping) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Cloud_Coverage_Target_Mapping_Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_MakeVector2D_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C. Offline Rendering
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C__Offline_Rendering final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C__Offline_Rendering) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C__Offline_Rendering");
static_assert(sizeof(Ultra_Dynamic_Sky_C__Offline_Rendering) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C__Offline_Rendering");
static_assert(offsetof(Ultra_Dynamic_Sky_C__Offline_Rendering, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Sky_C__Offline_Rendering::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.📘 Directional Light
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C___Directional_Light final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C___Directional_Light) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C___Directional_Light");
static_assert(sizeof(Ultra_Dynamic_Sky_C___Directional_Light) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C___Directional_Light");
static_assert(offsetof(Ultra_Dynamic_Sky_C___Directional_Light, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Sky_C___Directional_Light::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.📘 Moon
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C___Moon final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C___Moon) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C___Moon");
static_assert(sizeof(Ultra_Dynamic_Sky_C___Moon) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C___Moon");
static_assert(offsetof(Ultra_Dynamic_Sky_C___Moon, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Sky_C___Moon::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.📘 Simulation
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C___Simulation final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C___Simulation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C___Simulation");
static_assert(sizeof(Ultra_Dynamic_Sky_C___Simulation) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C___Simulation");
static_assert(offsetof(Ultra_Dynamic_Sky_C___Simulation, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Sky_C___Simulation::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.📘 Sun
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C___Sun final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C___Sun) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C___Sun");
static_assert(sizeof(Ultra_Dynamic_Sky_C___Sun) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C___Sun");
static_assert(offsetof(Ultra_Dynamic_Sky_C___Sun, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Sky_C___Sun::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.📘Time of Day
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C__Time_of_Day final
{
public:
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C__Time_of_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C__Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C__Time_of_Day) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C__Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C__Time_of_Day, K2Node_MakeArray_Array) == 0x000000, "Member 'Ultra_Dynamic_Sky_C__Time_of_Day::K2Node_MakeArray_Array' has a wrong offset!");

}

