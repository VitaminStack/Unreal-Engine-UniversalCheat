#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_Bed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Buildable_MASTER_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Buildable_Bed.Buildable_Bed_C
// 0x0020 (0x0450 - 0x0430)
class ABuildable_Bed_C final : public ABuildable_MASTER_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Buildable_Bed_C;                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RespawnLocation;                                   // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USleepingUI_C*                          SleepUI;                                           // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);
	void ExecuteUbergraph_Buildable_Bed(int32 EntryPoint);
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void OnEndInteract();
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void ReceiveBeginPlay();
	void SetSpawnPoint();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Buildable_Bed_C">();
	}
	static class ABuildable_Bed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABuildable_Bed_C>();
	}
};
static_assert(alignof(ABuildable_Bed_C) == 0x000008, "Wrong alignment on ABuildable_Bed_C");
static_assert(sizeof(ABuildable_Bed_C) == 0x000450, "Wrong size on ABuildable_Bed_C");
static_assert(offsetof(ABuildable_Bed_C, UberGraphFrame_Buildable_Bed_C) == 0x000430, "Member 'ABuildable_Bed_C::UberGraphFrame_Buildable_Bed_C' has a wrong offset!");
static_assert(offsetof(ABuildable_Bed_C, Billboard) == 0x000438, "Member 'ABuildable_Bed_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABuildable_Bed_C, RespawnLocation) == 0x000440, "Member 'ABuildable_Bed_C::RespawnLocation' has a wrong offset!");
static_assert(offsetof(ABuildable_Bed_C, SleepUI) == 0x000448, "Member 'ABuildable_Bed_C::SleepUI' has a wrong offset!");

}

