#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_RadialMenu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UMG_RadialMenu.UMG_RadialMenu_C.AddChildToRadialMenu
// 0x0028 (0x0028 - 0x0000)
struct UMG_RadialMenu_C_AddChildToRadialMenu final
{
public:
	class UUserWidget*                            Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_AddChildToRadialMenu) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_AddChildToRadialMenu");
static_assert(sizeof(UMG_RadialMenu_C_AddChildToRadialMenu) == 0x000028, "Wrong size on UMG_RadialMenu_C_AddChildToRadialMenu");
static_assert(offsetof(UMG_RadialMenu_C_AddChildToRadialMenu, Content) == 0x000000, "Member 'UMG_RadialMenu_C_AddChildToRadialMenu::Content' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AddChildToRadialMenu, Success) == 0x000008, "Member 'UMG_RadialMenu_C_AddChildToRadialMenu::Success' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AddChildToRadialMenu, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UMG_RadialMenu_C_AddChildToRadialMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AddChildToRadialMenu, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'UMG_RadialMenu_C_AddChildToRadialMenu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AddChildToRadialMenu, CallFunc_AddChildToOverlay_ReturnValue) == 0x000018, "Member 'UMG_RadialMenu_C_AddChildToRadialMenu::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AddChildToRadialMenu, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'UMG_RadialMenu_C_AddChildToRadialMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AddChildToRadialMenu, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'UMG_RadialMenu_C_AddChildToRadialMenu::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.AutoRegisterToInput
// 0x0030 (0x0030 - 0x0000)
struct UMG_RadialMenu_C_AutoRegisterToInput final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterPlayerInput_Success;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_AutoRegisterToInput) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_AutoRegisterToInput");
static_assert(sizeof(UMG_RadialMenu_C_AutoRegisterToInput) == 0x000030, "Wrong size on UMG_RadialMenu_C_AutoRegisterToInput");
static_assert(offsetof(UMG_RadialMenu_C_AutoRegisterToInput, Temp_bool_Variable) == 0x000000, "Member 'UMG_RadialMenu_C_AutoRegisterToInput::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AutoRegisterToInput, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'UMG_RadialMenu_C_AutoRegisterToInput::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AutoRegisterToInput, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'UMG_RadialMenu_C_AutoRegisterToInput::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AutoRegisterToInput, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UMG_RadialMenu_C_AutoRegisterToInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AutoRegisterToInput, K2Node_Select_Default) == 0x000020, "Member 'UMG_RadialMenu_C_AutoRegisterToInput::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_AutoRegisterToInput, CallFunc_RegisterPlayerInput_Success) == 0x000028, "Member 'UMG_RadialMenu_C_AutoRegisterToInput::CallFunc_RegisterPlayerInput_Success' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.ClearChildren
// 0x0020 (0x0020 - 0x0000)
struct UMG_RadialMenu_C_ClearChildren final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_ClearChildren) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_ClearChildren");
static_assert(sizeof(UMG_RadialMenu_C_ClearChildren) == 0x000020, "Wrong size on UMG_RadialMenu_C_ClearChildren");
static_assert(offsetof(UMG_RadialMenu_C_ClearChildren, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UMG_RadialMenu_C_ClearChildren::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ClearChildren, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UMG_RadialMenu_C_ClearChildren::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ClearChildren, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UMG_RadialMenu_C_ClearChildren::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ClearChildren, CallFunc_Array_Get_Item) == 0x000010, "Member 'UMG_RadialMenu_C_ClearChildren::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ClearChildren, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'UMG_RadialMenu_C_ClearChildren::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ClearChildren, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'UMG_RadialMenu_C_ClearChildren::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.DebugIndex
// 0x00E8 (0x00E8 - 0x0000)
struct UMG_RadialMenu_C_DebugIndex final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
};
static_assert(alignof(UMG_RadialMenu_C_DebugIndex) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_DebugIndex");
static_assert(sizeof(UMG_RadialMenu_C_DebugIndex) == 0x0000E8, "Wrong size on UMG_RadialMenu_C_DebugIndex");
static_assert(offsetof(UMG_RadialMenu_C_DebugIndex, ReturnValue) == 0x000000, "Member 'UMG_RadialMenu_C_DebugIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_DebugIndex, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'UMG_RadialMenu_C_DebugIndex::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_DebugIndex, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'UMG_RadialMenu_C_DebugIndex::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_DebugIndex, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'UMG_RadialMenu_C_DebugIndex::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_DebugIndex, K2Node_MakeArray_Array) == 0x0000C0, "Member 'UMG_RadialMenu_C_DebugIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_DebugIndex, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'UMG_RadialMenu_C_DebugIndex::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.ExecuteUbergraph_UMG_RadialMenu
// 0x00D0 (0x00D0 - 0x0000)
struct UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_CustomEvent_Direction;                      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_FixInputRotation_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Segments;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSectionDegreeSize_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InDeadzone;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu");
static_assert(sizeof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu) == 0x0000D0, "Wrong size on UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, EntryPoint) == 0x000000, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, K2Node_CustomEvent_Direction) == 0x000008, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_FixInputRotation_ReturnValue) == 0x000020, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_FixInputRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, K2Node_CustomEvent_Segments) == 0x000030, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::K2Node_CustomEvent_Segments' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000038, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_GetSectionDegreeSize_ReturnValue) == 0x000040, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_GetSectionDegreeSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, K2Node_CustomEvent_InDeadzone) == 0x000060, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::K2Node_CustomEvent_InDeadzone' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000061, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_Normal2D_ReturnValue) == 0x000068, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000078, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_BreakVector2D_X) == 0x000080, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000098, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_DegAtan2_ReturnValue) == 0x0000A0, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_FTrunc_ReturnValue) == 0x0000B8, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, K2Node_Event_IsDesignTime) == 0x0000BC, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000C0, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000C4, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0000C8, "Member 'UMG_RadialMenu_C_ExecuteUbergraph_UMG_RadialMenu::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.FixInputRotation
// 0x0080 (0x0080 - 0x0000)
struct UMG_RadialMenu_C_FixInputRotation final
{
public:
	struct FVector2D                              Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSectionDegreeSize_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_FixInputRotation) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_FixInputRotation");
static_assert(sizeof(UMG_RadialMenu_C_FixInputRotation) == 0x000080, "Wrong size on UMG_RadialMenu_C_FixInputRotation");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, Input) == 0x000000, "Member 'UMG_RadialMenu_C_FixInputRotation::Input' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, ReturnValue) == 0x000010, "Member 'UMG_RadialMenu_C_FixInputRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000020, "Member 'UMG_RadialMenu_C_FixInputRotation::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, CallFunc_GetSectionDegreeSize_ReturnValue) == 0x000038, "Member 'UMG_RadialMenu_C_FixInputRotation::CallFunc_GetSectionDegreeSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'UMG_RadialMenu_C_FixInputRotation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'UMG_RadialMenu_C_FixInputRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000050, "Member 'UMG_RadialMenu_C_FixInputRotation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000068, "Member 'UMG_RadialMenu_C_FixInputRotation::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixInputRotation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000078, "Member 'UMG_RadialMenu_C_FixInputRotation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.FixMainRotation
// 0x0020 (0x0020 - 0x0000)
struct UMG_RadialMenu_C_FixMainRotation final
{
public:
	double                                        CallFunc_GetSectionDegreeSize_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_FixMainRotation) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_FixMainRotation");
static_assert(sizeof(UMG_RadialMenu_C_FixMainRotation) == 0x000020, "Wrong size on UMG_RadialMenu_C_FixMainRotation");
static_assert(offsetof(UMG_RadialMenu_C_FixMainRotation, CallFunc_GetSectionDegreeSize_ReturnValue) == 0x000000, "Member 'UMG_RadialMenu_C_FixMainRotation::CallFunc_GetSectionDegreeSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixMainRotation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'UMG_RadialMenu_C_FixMainRotation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixMainRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'UMG_RadialMenu_C_FixMainRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_FixMainRotation, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000018, "Member 'UMG_RadialMenu_C_FixMainRotation::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.GetChild
// 0x0020 (0x0020 - 0x0000)
struct UMG_RadialMenu_C_GetChild final
{
public:
	int32                                         Param_Index_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Output;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_GetChild) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_GetChild");
static_assert(sizeof(UMG_RadialMenu_C_GetChild) == 0x000020, "Wrong size on UMG_RadialMenu_C_GetChild");
static_assert(offsetof(UMG_RadialMenu_C_GetChild, Param_Index_0) == 0x000000, "Member 'UMG_RadialMenu_C_GetChild::Param_Index_0' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetChild, Output) == 0x000008, "Member 'UMG_RadialMenu_C_GetChild::Output' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetChild, Success) == 0x000010, "Member 'UMG_RadialMenu_C_GetChild::Success' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetChild, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000011, "Member 'UMG_RadialMenu_C_GetChild::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetChild, CallFunc_Array_Get_Item) == 0x000018, "Member 'UMG_RadialMenu_C_GetChild::CallFunc_Array_Get_Item' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.GetCurrentIndex
// 0x0008 (0x0008 - 0x0000)
struct UMG_RadialMenu_C_GetCurrentIndex final
{
public:
	int32                                         Param_Index_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_GetCurrentIndex) == 0x000004, "Wrong alignment on UMG_RadialMenu_C_GetCurrentIndex");
static_assert(sizeof(UMG_RadialMenu_C_GetCurrentIndex) == 0x000008, "Wrong size on UMG_RadialMenu_C_GetCurrentIndex");
static_assert(offsetof(UMG_RadialMenu_C_GetCurrentIndex, Param_Index_0) == 0x000000, "Member 'UMG_RadialMenu_C_GetCurrentIndex::Param_Index_0' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetCurrentIndex, Valid) == 0x000004, "Member 'UMG_RadialMenu_C_GetCurrentIndex::Valid' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetCurrentIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000005, "Member 'UMG_RadialMenu_C_GetCurrentIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.GetCustomInput
// 0x0028 (0x0028 - 0x0000)
struct UMG_RadialMenu_C_GetCustomInput final
{
public:
	struct FVector2D                              Input;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_GetCustomInput) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_GetCustomInput");
static_assert(sizeof(UMG_RadialMenu_C_GetCustomInput) == 0x000028, "Wrong size on UMG_RadialMenu_C_GetCustomInput");
static_assert(offsetof(UMG_RadialMenu_C_GetCustomInput, Input) == 0x000000, "Member 'UMG_RadialMenu_C_GetCustomInput::Input' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetCustomInput, Valid) == 0x000010, "Member 'UMG_RadialMenu_C_GetCustomInput::Valid' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetCustomInput, CallFunc_VSize2D_ReturnValue) == 0x000018, "Member 'UMG_RadialMenu_C_GetCustomInput::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetCustomInput, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'UMG_RadialMenu_C_GetCustomInput::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetCustomInput, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'UMG_RadialMenu_C_GetCustomInput::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.GetSectionDegreeSize
// 0x0018 (0x0018 - 0x0000)
struct UMG_RadialMenu_C_GetSectionDegreeSize final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_GetSectionDegreeSize) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_GetSectionDegreeSize");
static_assert(sizeof(UMG_RadialMenu_C_GetSectionDegreeSize) == 0x000018, "Wrong size on UMG_RadialMenu_C_GetSectionDegreeSize");
static_assert(offsetof(UMG_RadialMenu_C_GetSectionDegreeSize, ReturnValue) == 0x000000, "Member 'UMG_RadialMenu_C_GetSectionDegreeSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetSectionDegreeSize, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'UMG_RadialMenu_C_GetSectionDegreeSize::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetSectionDegreeSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'UMG_RadialMenu_C_GetSectionDegreeSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.GetSelectedWidget
// 0x0010 (0x0010 - 0x0000)
struct UMG_RadialMenu_C_GetSelectedWidget final
{
public:
	class UUserWidget*                            Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_GetSelectedWidget) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_GetSelectedWidget");
static_assert(sizeof(UMG_RadialMenu_C_GetSelectedWidget) == 0x000010, "Wrong size on UMG_RadialMenu_C_GetSelectedWidget");
static_assert(offsetof(UMG_RadialMenu_C_GetSelectedWidget, Output) == 0x000000, "Member 'UMG_RadialMenu_C_GetSelectedWidget::Output' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_GetSelectedWidget, CallFunc_Array_Get_Item) == 0x000008, "Member 'UMG_RadialMenu_C_GetSelectedWidget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.InDeadzone
// 0x0001 (0x0001 - 0x0000)
struct UMG_RadialMenu_C_InDeadzone final
{
public:
	bool                                          InDeadzone_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_InDeadzone) == 0x000001, "Wrong alignment on UMG_RadialMenu_C_InDeadzone");
static_assert(sizeof(UMG_RadialMenu_C_InDeadzone) == 0x000001, "Wrong size on UMG_RadialMenu_C_InDeadzone");
static_assert(offsetof(UMG_RadialMenu_C_InDeadzone, InDeadzone_0) == 0x000000, "Member 'UMG_RadialMenu_C_InDeadzone::InDeadzone_0' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_RadialMenu_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_RadialMenu_C_PreConstruct");
static_assert(sizeof(UMG_RadialMenu_C_PreConstruct) == 0x000001, "Wrong size on UMG_RadialMenu_C_PreConstruct");
static_assert(offsetof(UMG_RadialMenu_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_RadialMenu_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.RegisterPlayerInput
// 0x0028 (0x0028 - 0x0000)
struct UMG_RadialMenu_C_RegisterPlayerInput final
{
public:
	class APlayerController*                      Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIRadialInput_C>       K2Node_DynamicCast_AsIRadial_Input;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_RegisterPlayerInput) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_RegisterPlayerInput");
static_assert(sizeof(UMG_RadialMenu_C_RegisterPlayerInput) == 0x000028, "Wrong size on UMG_RadialMenu_C_RegisterPlayerInput");
static_assert(offsetof(UMG_RadialMenu_C_RegisterPlayerInput, Controller) == 0x000000, "Member 'UMG_RadialMenu_C_RegisterPlayerInput::Controller' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_RegisterPlayerInput, Success) == 0x000008, "Member 'UMG_RadialMenu_C_RegisterPlayerInput::Success' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_RegisterPlayerInput, K2Node_DynamicCast_AsIRadial_Input) == 0x000010, "Member 'UMG_RadialMenu_C_RegisterPlayerInput::K2Node_DynamicCast_AsIRadial_Input' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_RegisterPlayerInput, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UMG_RadialMenu_C_RegisterPlayerInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.RemoveChildIndexFromRadialMenu
// 0x0010 (0x0010 - 0x0000)
struct UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu final
{
public:
	int32                                         IndexToRemove;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu");
static_assert(sizeof(UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu) == 0x000010, "Wrong size on UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu");
static_assert(offsetof(UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu, IndexToRemove) == 0x000000, "Member 'UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu::IndexToRemove' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000004, "Member 'UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu, CallFunc_Array_Get_Item) == 0x000008, "Member 'UMG_RadialMenu_C_RemoveChildIndexFromRadialMenu::CallFunc_Array_Get_Item' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.RemoveChildWidgetFromRadialMenu
// 0x0010 (0x0010 - 0x0000)
struct UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu final
{
public:
	const class UUserWidget*                      ItemToFind;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu");
static_assert(sizeof(UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu) == 0x000010, "Wrong size on UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu");
static_assert(offsetof(UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu, ItemToFind) == 0x000000, "Member 'UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu::ItemToFind' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu, CallFunc_Array_Contains_ReturnValue) == 0x000009, "Member 'UMG_RadialMenu_C_RemoveChildWidgetFromRadialMenu::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.SetCustomInput
// 0x0010 (0x0010 - 0x0000)
struct UMG_RadialMenu_C_SetCustomInput final
{
public:
	struct FVector2D                              CustomInput_0;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_SetCustomInput) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_SetCustomInput");
static_assert(sizeof(UMG_RadialMenu_C_SetCustomInput) == 0x000010, "Wrong size on UMG_RadialMenu_C_SetCustomInput");
static_assert(offsetof(UMG_RadialMenu_C_SetCustomInput, CustomInput_0) == 0x000000, "Member 'UMG_RadialMenu_C_SetCustomInput::CustomInput_0' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.SetIndex
// 0x0050 (0x0050 - 0x0000)
struct UMG_RadialMenu_C_SetIndex final
{
public:
	int32                                         Param_Index_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetSelectedWidget_Output;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetSelectedWidget_Output_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIRadialSlot_C>        K2Node_DynamicCast_AsIRadial_Slot;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIRadialSlot_C>        K2Node_DynamicCast_AsIRadial_Slot_1;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_SetIndex) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_SetIndex");
static_assert(sizeof(UMG_RadialMenu_C_SetIndex) == 0x000050, "Wrong size on UMG_RadialMenu_C_SetIndex");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, Param_Index_0) == 0x000000, "Member 'UMG_RadialMenu_C_SetIndex::Param_Index_0' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, NewIndex) == 0x000004, "Member 'UMG_RadialMenu_C_SetIndex::NewIndex' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UMG_RadialMenu_C_SetIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, CallFunc_GetSelectedWidget_Output) == 0x000010, "Member 'UMG_RadialMenu_C_SetIndex::CallFunc_GetSelectedWidget_Output' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, CallFunc_GetSelectedWidget_Output_1) == 0x000018, "Member 'UMG_RadialMenu_C_SetIndex::CallFunc_GetSelectedWidget_Output_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, K2Node_DynamicCast_AsIRadial_Slot) == 0x000020, "Member 'UMG_RadialMenu_C_SetIndex::K2Node_DynamicCast_AsIRadial_Slot' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'UMG_RadialMenu_C_SetIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, K2Node_DynamicCast_AsIRadial_Slot_1) == 0x000038, "Member 'UMG_RadialMenu_C_SetIndex::K2Node_DynamicCast_AsIRadial_Slot_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'UMG_RadialMenu_C_SetIndex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'UMG_RadialMenu_C_SetIndex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_SetIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00004A, "Member 'UMG_RadialMenu_C_SetIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.SetInputDirection
// 0x0010 (0x0010 - 0x0000)
struct UMG_RadialMenu_C_SetInputDirection final
{
public:
	struct FVector2D                              Direction;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_SetInputDirection) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_SetInputDirection");
static_assert(sizeof(UMG_RadialMenu_C_SetInputDirection) == 0x000010, "Wrong size on UMG_RadialMenu_C_SetInputDirection");
static_assert(offsetof(UMG_RadialMenu_C_SetInputDirection, Direction) == 0x000000, "Member 'UMG_RadialMenu_C_SetInputDirection::Direction' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.UpdateAllChildrenPositions
// 0x0014 (0x0014 - 0x0000)
struct UMG_RadialMenu_C_UpdateAllChildrenPositions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_UpdateAllChildrenPositions) == 0x000004, "Wrong alignment on UMG_RadialMenu_C_UpdateAllChildrenPositions");
static_assert(sizeof(UMG_RadialMenu_C_UpdateAllChildrenPositions) == 0x000014, "Wrong size on UMG_RadialMenu_C_UpdateAllChildrenPositions");
static_assert(offsetof(UMG_RadialMenu_C_UpdateAllChildrenPositions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'UMG_RadialMenu_C_UpdateAllChildrenPositions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateAllChildrenPositions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'UMG_RadialMenu_C_UpdateAllChildrenPositions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateAllChildrenPositions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'UMG_RadialMenu_C_UpdateAllChildrenPositions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateAllChildrenPositions, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'UMG_RadialMenu_C_UpdateAllChildrenPositions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateAllChildrenPositions, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'UMG_RadialMenu_C_UpdateAllChildrenPositions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.UpdateChildPosition
// 0x00E0 (0x00E0 - 0x0000)
struct UMG_RadialMenu_C_UpdateChildPosition final
{
public:
	int32                                         Param_Index_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                out_dir;                                           // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSectionDegreeSize_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSectionDegreeSize_ReturnValue_1;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_UpdateChildPosition) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_UpdateChildPosition");
static_assert(sizeof(UMG_RadialMenu_C_UpdateChildPosition) == 0x0000E0, "Wrong size on UMG_RadialMenu_C_UpdateChildPosition");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, Param_Index_0) == 0x000000, "Member 'UMG_RadialMenu_C_UpdateChildPosition::Param_Index_0' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, out_dir) == 0x000008, "Member 'UMG_RadialMenu_C_UpdateChildPosition::out_dir' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_GetSectionDegreeSize_ReturnValue) == 0x000030, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_GetSectionDegreeSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_RotateAngleAxis_ReturnValue) == 0x000060, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000078, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_GetSectionDegreeSize_ReturnValue_1) == 0x000088, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_GetSectionDegreeSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000090, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0000B0, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D0, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x0000D4, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateChildPosition, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x0000D8, "Member 'UMG_RadialMenu_C_UpdateChildPosition::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.UpdateDirectionWithJoystick
// 0x0038 (0x0038 - 0x0000)
struct UMG_RadialMenu_C_UpdateDirectionWithJoystick final
{
public:
	TScriptInterface<class IIRadialInput_C>       K2Node_DynamicCast_AsIRadial_Input;                // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetJoystickDirection_StickInput;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_UpdateDirectionWithJoystick) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_UpdateDirectionWithJoystick");
static_assert(sizeof(UMG_RadialMenu_C_UpdateDirectionWithJoystick) == 0x000038, "Wrong size on UMG_RadialMenu_C_UpdateDirectionWithJoystick");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithJoystick, K2Node_DynamicCast_AsIRadial_Input) == 0x000000, "Member 'UMG_RadialMenu_C_UpdateDirectionWithJoystick::K2Node_DynamicCast_AsIRadial_Input' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithJoystick, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'UMG_RadialMenu_C_UpdateDirectionWithJoystick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithJoystick, CallFunc_GetJoystickDirection_StickInput) == 0x000018, "Member 'UMG_RadialMenu_C_UpdateDirectionWithJoystick::CallFunc_GetJoystickDirection_StickInput' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithJoystick, CallFunc_VSize2D_ReturnValue) == 0x000028, "Member 'UMG_RadialMenu_C_UpdateDirectionWithJoystick::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithJoystick, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'UMG_RadialMenu_C_UpdateDirectionWithJoystick::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.UpdateDirectionWithMouseCursor
// 0x00D8 (0x00D8 - 0x0000)
struct UMG_RadialMenu_C_UpdateDirectionWithMouseCursor final
{
public:
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetMousePositionOnViewport_ReturnValue;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_UpdateDirectionWithMouseCursor");
static_assert(sizeof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor) == 0x0000D8, "Wrong size on UMG_RadialMenu_C_UpdateDirectionWithMouseCursor");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_GetViewportSize_ReturnValue) == 0x000000, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_GetViewportScale_ReturnValue) == 0x000010, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_BreakVector2D_X) == 0x000018, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000028, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_GetViewportScale_ReturnValue_1) == 0x000038, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_GetMousePositionOnViewport_ReturnValue) == 0x000040, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_GetMousePositionOnViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000058, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_VSize2D_ReturnValue) == 0x0000A8, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Normal2D_ReturnValue) == 0x0000B0, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x0000C8, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateDirectionWithMouseCursor, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000D0, "Member 'UMG_RadialMenu_C_UpdateDirectionWithMouseCursor::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.UpdateInput
// 0x0020 (0x0020 - 0x0000)
struct UMG_RadialMenu_C_UpdateInput final
{
public:
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize2D_ReturnValue_1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_UpdateInput) == 0x000008, "Wrong alignment on UMG_RadialMenu_C_UpdateInput");
static_assert(sizeof(UMG_RadialMenu_C_UpdateInput) == 0x000020, "Wrong size on UMG_RadialMenu_C_UpdateInput");
static_assert(offsetof(UMG_RadialMenu_C_UpdateInput, CallFunc_VSize2D_ReturnValue) == 0x000000, "Member 'UMG_RadialMenu_C_UpdateInput::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateInput, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'UMG_RadialMenu_C_UpdateInput::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateInput, CallFunc_VSize2D_ReturnValue_1) == 0x000010, "Member 'UMG_RadialMenu_C_UpdateInput::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UMG_RadialMenu_C_UpdateInput, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'UMG_RadialMenu_C_UpdateInput::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function UMG_RadialMenu.UMG_RadialMenu_C.UpdateSegments
// 0x0004 (0x0004 - 0x0000)
struct UMG_RadialMenu_C_UpdateSegments final
{
public:
	int32                                         Segments_0;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_RadialMenu_C_UpdateSegments) == 0x000004, "Wrong alignment on UMG_RadialMenu_C_UpdateSegments");
static_assert(sizeof(UMG_RadialMenu_C_UpdateSegments) == 0x000004, "Wrong size on UMG_RadialMenu_C_UpdateSegments");
static_assert(offsetof(UMG_RadialMenu_C_UpdateSegments, Segments_0) == 0x000000, "Member 'UMG_RadialMenu_C_UpdateSegments::Segments_0' has a wrong offset!");

}

