#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Journal_SkillsUI

#include "Basic.hpp"


namespace SDK::Params
{

// Function Journal_SkillsUI.Journal_SkillsUI_C.BindEvents
// 0x00B8 (0x00B8 - 0x0000)
struct Journal_SkillsUI_C_BindEvents final
{
public:
	TDelegate<void(int32 Points)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double CurrentXP, double MaxXP, double CurrentLevel, double NextLevel, double Percentage)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_BindEvents) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_BindEvents");
static_assert(sizeof(Journal_SkillsUI_C_BindEvents) == 0x0000B8, "Wrong size on Journal_SkillsUI_C_BindEvents");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, CallFunc_GetSkillTreeManager_TechTree) == 0x000010, "Member 'Journal_SkillsUI_C_BindEvents::CallFunc_GetSkillTreeManager_TechTree' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_4) == 0x000048, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_5) == 0x000058, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_6) == 0x000068, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_7) == 0x000078, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_8) == 0x000088, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_9) == 0x000098, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_BindEvents, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000A8, "Member 'Journal_SkillsUI_C_BindEvents::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.ExecuteUbergraph_Journal_SkillsUI
// 0x0030 (0x0030 - 0x0000)
struct Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPassiveSkillsComponent_C*              CallFunc_GetPassiveSkillsComponent_SkillsComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UResetSkillsSelect_C*                   CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTechTreeComponent_C*                   CallFunc_GetSkillTreeManager_TechTree;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTooltip_PassiveStats_C*                CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI");
static_assert(sizeof(Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI) == 0x000030, "Wrong size on Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI");
static_assert(offsetof(Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI, EntryPoint) == 0x000000, "Member 'Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI::EntryPoint' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI, CallFunc_GetPassiveSkillsComponent_SkillsComponent) == 0x000008, "Member 'Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI::CallFunc_GetPassiveSkillsComponent_SkillsComponent' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI, CallFunc_Create_ReturnValue) == 0x000010, "Member 'Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI, CallFunc_GetSkillTreeManager_TechTree) == 0x000018, "Member 'Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI::CallFunc_GetSkillTreeManager_TechTree' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI, K2Node_Event_IsDesignTime) == 0x000028, "Member 'Journal_SkillsUI_C_ExecuteUbergraph_Journal_SkillsUI::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.FirstAid_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_FirstAid_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_FirstAid_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_FirstAid_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_FirstAid_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_FirstAid_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_FirstAid_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_FirstAid_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.FirstAidXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_FirstAidXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_FirstAidXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_FirstAidXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_FirstAidXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_FirstAidXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_FirstAidXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_FirstAidXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FirstAidXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_FirstAidXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FirstAidXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_FirstAidXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FirstAidXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_FirstAidXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FirstAidXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_FirstAidXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Fishing_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Fishing_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Fishing_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Fishing_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Fishing_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Fishing_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Fishing_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Fishing_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.FishingXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_FishingXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_FishingXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_FishingXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_FishingXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_FishingXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_FishingXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_FishingXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FishingXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_FishingXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FishingXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_FishingXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FishingXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_FishingXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FishingXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_FishingXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Fitness_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Fitness_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Fitness_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Fitness_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Fitness_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Fitness_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Fitness_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Fitness_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.FitnessXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_FitnessXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_FitnessXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_FitnessXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_FitnessXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_FitnessXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_FitnessXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_FitnessXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FitnessXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_FitnessXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FitnessXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_FitnessXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FitnessXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_FitnessXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_FitnessXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_FitnessXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Marksmanship_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Marksmanship_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Marksmanship_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Marksmanship_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Marksmanship_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Marksmanship_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Marksmanship_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Marksmanship_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.MarksmanshipXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_MarksmanshipXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_MarksmanshipXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_MarksmanshipXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_MarksmanshipXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_MarksmanshipXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_MarksmanshipXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_MarksmanshipXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_MarksmanshipXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_MarksmanshipXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_MarksmanshipXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_MarksmanshipXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_MarksmanshipXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_MarksmanshipXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_MarksmanshipXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_MarksmanshipXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Journal_SkillsUI_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_PreConstruct) == 0x000001, "Wrong alignment on Journal_SkillsUI_C_PreConstruct");
static_assert(sizeof(Journal_SkillsUI_C_PreConstruct) == 0x000001, "Wrong size on Journal_SkillsUI_C_PreConstruct");
static_assert(offsetof(Journal_SkillsUI_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Journal_SkillsUI_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Reloading_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Reloading_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Reloading_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Reloading_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Reloading_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Reloading_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Reloading_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Reloading_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.ReloadingXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_ReloadingXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_ReloadingXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_ReloadingXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_ReloadingXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_ReloadingXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_ReloadingXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_ReloadingXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ReloadingXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_ReloadingXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ReloadingXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_ReloadingXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ReloadingXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_ReloadingXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ReloadingXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_ReloadingXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Scavenging_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Scavenging_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Scavenging_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Scavenging_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Scavenging_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Scavenging_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Scavenging_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Scavenging_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.ScavengingXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_ScavengingXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_ScavengingXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_ScavengingXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_ScavengingXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_ScavengingXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_ScavengingXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_ScavengingXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ScavengingXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_ScavengingXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ScavengingXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_ScavengingXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ScavengingXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_ScavengingXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ScavengingXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_ScavengingXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Sneaking_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Sneaking_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Sneaking_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Sneaking_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Sneaking_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Sneaking_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Sneaking_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Sneaking_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.SneakingXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_SneakingXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_SneakingXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_SneakingXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_SneakingXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_SneakingXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_SneakingXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_SneakingXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_SneakingXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_SneakingXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_SneakingXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_SneakingXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_SneakingXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_SneakingXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_SneakingXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_SneakingXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Strength_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Strength_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Strength_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Strength_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Strength_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Strength_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Strength_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Strength_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.StrengthXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_StrengthXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_StrengthXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_StrengthXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_StrengthXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_StrengthXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_StrengthXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_StrengthXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_StrengthXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_StrengthXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_StrengthXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_StrengthXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_StrengthXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_StrengthXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_StrengthXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_StrengthXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Thief_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Thief_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Thief_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Thief_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Thief_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Thief_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Thief_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Thief_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.ThiefXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_ThiefXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_ThiefXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_ThiefXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_ThiefXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_ThiefXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_ThiefXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_ThiefXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ThiefXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_ThiefXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ThiefXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_ThiefXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ThiefXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_ThiefXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ThiefXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_ThiefXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Toughness_ToolTipWidget
// 0x0008 (0x0008 - 0x0000)
struct Journal_SkillsUI_C_Toughness_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Toughness_ToolTipWidget) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Toughness_ToolTipWidget");
static_assert(sizeof(Journal_SkillsUI_C_Toughness_ToolTipWidget) == 0x000008, "Wrong size on Journal_SkillsUI_C_Toughness_ToolTipWidget");
static_assert(offsetof(Journal_SkillsUI_C_Toughness_ToolTipWidget, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_Toughness_ToolTipWidget::ReturnValue' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.ToughnessXPMultiplier
// 0x0068 (0x0068 - 0x0000)
struct Journal_SkillsUI_C_ToughnessXPMultiplier final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_ToughnessXPMultiplier) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_ToughnessXPMultiplier");
static_assert(sizeof(Journal_SkillsUI_C_ToughnessXPMultiplier) == 0x000068, "Wrong size on Journal_SkillsUI_C_ToughnessXPMultiplier");
static_assert(offsetof(Journal_SkillsUI_C_ToughnessXPMultiplier, ReturnValue) == 0x000000, "Member 'Journal_SkillsUI_C_ToughnessXPMultiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ToughnessXPMultiplier, Temp_bool_Variable) == 0x000018, "Member 'Journal_SkillsUI_C_ToughnessXPMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ToughnessXPMultiplier, Temp_text_Variable) == 0x000020, "Member 'Journal_SkillsUI_C_ToughnessXPMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ToughnessXPMultiplier, Temp_text_Variable_1) == 0x000038, "Member 'Journal_SkillsUI_C_ToughnessXPMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_ToughnessXPMultiplier, K2Node_Select_Default) == 0x000050, "Member 'Journal_SkillsUI_C_ToughnessXPMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_FirstAidUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_FirstAidUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_FirstAidUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_FirstAidUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_FirstAidUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_FirstAidUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FirstAidUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_FirstAidUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_FishingUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_FishingUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_FishingUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_FishingUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_FishingUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_FishingUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_FishingUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_FishingUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_FishingUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_FishingUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_FishingUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_FishingUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_FishingUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_FishingUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_FishingUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FishingUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_FishingUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_FitnessUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_FitnessUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_FitnessUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_FitnessUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_FitnessUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_FitnessUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_FitnessUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_FitnessUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_FitnessUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_FitnessUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_FitnessUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_FitnessUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_FitnessUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_FitnessUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_FitnessUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_FitnessUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_FitnessUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_MarksmanshipUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_MarksmanshipUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_MarksmanshipUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_MarksmanshipUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_MarksmanshipUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_MarksmanshipUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_MarksmanshipUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_MarksmanshipUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_ReloadingUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_ReloadingUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_ReloadingUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_ReloadingUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_ReloadingUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_ReloadingUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ReloadingUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_ReloadingUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_ScavengingUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_ScavengingUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_ScavengingUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_ScavengingUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_ScavengingUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_ScavengingUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ScavengingUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_ScavengingUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_SkillPoints
// 0x0038 (0x0038 - 0x0000)
struct Journal_SkillsUI_C_Update_SkillPoints final
{
public:
	int32                                         Points_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_Append_Text_Return_Value;                 // 0x0020(0x0018)()
};
static_assert(alignof(Journal_SkillsUI_C_Update_SkillPoints) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_SkillPoints");
static_assert(sizeof(Journal_SkillsUI_C_Update_SkillPoints) == 0x000038, "Wrong size on Journal_SkillsUI_C_Update_SkillPoints");
static_assert(offsetof(Journal_SkillsUI_C_Update_SkillPoints, Points_0) == 0x000000, "Member 'Journal_SkillsUI_C_Update_SkillPoints::Points_0' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SkillPoints, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'Journal_SkillsUI_C_Update_SkillPoints::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SkillPoints, CallFunc_Append_Text_Return_Value) == 0x000020, "Member 'Journal_SkillsUI_C_Update_SkillPoints::CallFunc_Append_Text_Return_Value' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_SneakingUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_SneakingUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_SneakingUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_SneakingUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_SneakingUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_SneakingUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_SneakingUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_SneakingUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_SneakingUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_SneakingUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_SneakingUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_SneakingUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_SneakingUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_SneakingUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_SneakingUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_SneakingUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_SneakingUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_StrengthUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_StrengthUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_StrengthUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_StrengthUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_StrengthUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_StrengthUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_StrengthUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_StrengthUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_StrengthUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_StrengthUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_StrengthUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_StrengthUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_StrengthUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_StrengthUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_StrengthUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_StrengthUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_StrengthUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_ThiefUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_ThiefUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_ThiefUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_ThiefUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_ThiefUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_ThiefUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_ThiefUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_ThiefUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_ThiefUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_ThiefUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_ThiefUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_ThiefUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_ThiefUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_ThiefUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_ThiefUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ThiefUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_ThiefUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function Journal_SkillsUI.Journal_SkillsUI_C.Update_ToughnessUI
// 0x0090 (0x0090 - 0x0000)
struct Journal_SkillsUI_C_Update_ToughnessUI final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLevel;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NextLevel;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percentage;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x0058(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x0070(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Journal_SkillsUI_C_Update_ToughnessUI) == 0x000008, "Wrong alignment on Journal_SkillsUI_C_Update_ToughnessUI");
static_assert(sizeof(Journal_SkillsUI_C_Update_ToughnessUI) == 0x000090, "Wrong size on Journal_SkillsUI_C_Update_ToughnessUI");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, CurrentXP) == 0x000000, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::CurrentXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, MaxXP) == 0x000008, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::MaxXP' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, CurrentLevel) == 0x000010, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::CurrentLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, NextLevel) == 0x000018, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::NextLevel' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, Percentage) == 0x000020, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::Percentage' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000028, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000040, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x000058, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x000070, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Journal_SkillsUI_C_Update_ToughnessUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000088, "Member 'Journal_SkillsUI_C_Update_ToughnessUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

}

