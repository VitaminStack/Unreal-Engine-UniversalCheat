#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PassiveSkillsComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP
// 0x0028 (0x0028 - 0x0000)
struct PassiveSkillsComponent_C_AddXP final
{
public:
	double                                        AddXP_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Skill;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewXP;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XP;                                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP) == 0x000028, "Wrong size on PassiveSkillsComponent_C_AddXP");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP, AddXP_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP::AddXP_0' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP, Skill) == 0x000008, "Member 'PassiveSkillsComponent_C_AddXP::Skill' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP, NewXP) == 0x000010, "Member 'PassiveSkillsComponent_C_AddXP::NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP, XP) == 0x000018, "Member 'PassiveSkillsComponent_C_AddXP::XP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'PassiveSkillsComponent_C_AddXP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_FirstAid
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_FirstAid final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_FirstAid) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_FirstAid");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_FirstAid) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_FirstAid");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_FirstAid, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_FirstAid::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Fishing
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Fishing final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Fishing) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Fishing");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Fishing) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Fishing");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Fishing, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Fishing::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Fitness
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Fitness final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Fitness) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Fitness");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Fitness) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Fitness");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Fitness, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Fitness::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Marksmanship
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Marksmanship final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Marksmanship) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Marksmanship");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Marksmanship) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Marksmanship");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Marksmanship, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Marksmanship::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Reloading
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Reloading final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Reloading) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Reloading");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Reloading) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Reloading");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Reloading, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Reloading::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Scavenging
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Scavenging final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Scavenging) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Scavenging");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Scavenging) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Scavenging");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Scavenging, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Scavenging::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Sneaking
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Sneaking final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Sneaking) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Sneaking");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Sneaking) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Sneaking");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Sneaking, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Sneaking::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Strength
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Strength final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Strength) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Strength");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Strength) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Strength");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Strength, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Strength::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Thief
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Thief final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Thief) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Thief");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Thief) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Thief");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Thief, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Thief::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.AddXP_Toughness
// 0x0008 (0x0008 - 0x0000)
struct PassiveSkillsComponent_C_AddXP_Toughness final
{
public:
	double                                        float_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_AddXP_Toughness) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_AddXP_Toughness");
static_assert(sizeof(PassiveSkillsComponent_C_AddXP_Toughness) == 0x000008, "Wrong size on PassiveSkillsComponent_C_AddXP_Toughness");
static_assert(offsetof(PassiveSkillsComponent_C_AddXP_Toughness, float_0) == 0x000000, "Member 'PassiveSkillsComponent_C_AddXP_Toughness::float_0' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.CalculateMaxXP
// 0x0030 (0x0030 - 0x0000)
struct PassiveSkillsComponent_C_CalculateMaxXP final
{
public:
	double                                        MaxXP;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxXPLevel;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_MaxXPLevel_ImplicitCast;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_CalculateMaxXP) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_CalculateMaxXP");
static_assert(sizeof(PassiveSkillsComponent_C_CalculateMaxXP) == 0x000030, "Wrong size on PassiveSkillsComponent_C_CalculateMaxXP");
static_assert(offsetof(PassiveSkillsComponent_C_CalculateMaxXP, MaxXP) == 0x000000, "Member 'PassiveSkillsComponent_C_CalculateMaxXP::MaxXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_CalculateMaxXP, MaxXPLevel) == 0x000008, "Member 'PassiveSkillsComponent_C_CalculateMaxXP::MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_CalculateMaxXP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_CalculateMaxXP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_CalculateMaxXP, CallFunc_FCeil_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_CalculateMaxXP::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_CalculateMaxXP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'PassiveSkillsComponent_C_CalculateMaxXP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_CalculateMaxXP, K2Node_FunctionResult_MaxXPLevel_ImplicitCast) == 0x000028, "Member 'PassiveSkillsComponent_C_CalculateMaxXP::K2Node_FunctionResult_MaxXPLevel_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.CalculatePercentage
// 0x0020 (0x0020 - 0x0000)
struct PassiveSkillsComponent_C_CalculatePercentage final
{
public:
	double                                        CurrentXP;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxXP;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentPercentage;                                 // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_CalculatePercentage) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_CalculatePercentage");
static_assert(sizeof(PassiveSkillsComponent_C_CalculatePercentage) == 0x000020, "Wrong size on PassiveSkillsComponent_C_CalculatePercentage");
static_assert(offsetof(PassiveSkillsComponent_C_CalculatePercentage, CurrentXP) == 0x000000, "Member 'PassiveSkillsComponent_C_CalculatePercentage::CurrentXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_CalculatePercentage, MaxXP) == 0x000008, "Member 'PassiveSkillsComponent_C_CalculatePercentage::MaxXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_CalculatePercentage, CurrentPercentage) == 0x000010, "Member 'PassiveSkillsComponent_C_CalculatePercentage::CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_CalculatePercentage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_CalculatePercentage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.ExecuteUbergraph_PassiveSkillsComponent
// 0x02D8 (0x02D8 - 0x0000)
struct PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3;  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4;  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5;  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_6;  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_7;  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_9;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_8;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_7;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_6;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_5;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_1;  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_1;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_2;  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_4;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_3;  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_2;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_3;                              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_4;  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_3;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_2;                              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_5;  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_4;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float_1;                              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_6;  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_5;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_6;                            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Float;                                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_7;  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_7;                            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_6;                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_8;  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_7;                     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage_9;  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_8;                            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_8;                     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_8;  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_9;  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_12;          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_13;          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_14;          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_15;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_16;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_17;          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_9;                // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP_9;                            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_18;          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_9;                     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_19;          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent");
static_assert(sizeof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent) == 0x0002D8, "Wrong size on PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, EntryPoint) == 0x000000, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000010, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_2) == 0x000030, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3) == 0x000039, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_3) == 0x000040, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4) == 0x000048, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_4) == 0x000050, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5) == 0x000058, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_6) == 0x000059, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_5) == 0x000060, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_7) == 0x000068, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_6) == 0x000070, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_9) == 0x000080, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_9' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_8) == 0x000090, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_8' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_7) == 0x0000A0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_7' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0000A8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_6) == 0x0000B0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_6' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP) == 0x0000D0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue) == 0x0000D8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0000E0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_5) == 0x0000E8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_5' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_1) == 0x0000F0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_1) == 0x000100, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_1) == 0x000108, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_2) == 0x000110, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000118, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_4) == 0x000120, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_4' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000128, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_3) == 0x000130, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_2) == 0x000138, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_2) == 0x000140, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_7) == 0x000148, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000150, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000158, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_3) == 0x000160, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000168, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_4) == 0x000170, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_4' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_3) == 0x000178, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_3) == 0x000180, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000188, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_2) == 0x000190, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000198, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_5) == 0x0001A0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_5' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_4) == 0x0001A8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_4' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_4) == 0x0001B0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x0001B8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float_1) == 0x0001C0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0001C8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_6) == 0x0001D0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_6' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_5) == 0x0001D8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_5' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_5) == 0x0001E0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x0001E8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_6) == 0x0001F0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_6' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, K2Node_Event_Float) == 0x0001F8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::K2Node_Event_Float' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_7) == 0x000200, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_7' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000208, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_7) == 0x000210, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_7' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_6) == 0x000218, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_8) == 0x000220, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_8' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_7) == 0x000228, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_8) == 0x000230, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000238, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_CalculatePercentage_CurrentPercentage_9) == 0x000240, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_CalculatePercentage_CurrentPercentage_9' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_8) == 0x000248, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_8' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_8) == 0x000250, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_8) == 0x000258, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000260, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000268, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_9) == 0x000270, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_12) == 0x000278, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_13) == 0x000280, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_14) == 0x000288, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_15) == 0x000290, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_16) == 0x000298, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_17) == 0x0002A0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_SelectFloat_ReturnValue_9) == 0x0002A8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0002B0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_AddXP_NewXP_9) == 0x0002B8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_AddXP_NewXP_9' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_18) == 0x0002C0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_FClamp_ReturnValue_9) == 0x0002C8, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent, CallFunc_Add_DoubleDouble_ReturnValue_19) == 0x0002D0, "Member 'PassiveSkillsComponent_C_ExecuteUbergraph_PassiveSkillsComponent::CallFunc_Add_DoubleDouble_ReturnValue_19' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.FirstAid_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_FirstAid_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxFirstAidXP_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_FirstAid_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_FirstAid_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_FirstAid_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_FirstAid_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, CallFunc_AddXP_NewXP) == 0x000020, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000030, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000038, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_FirstAid_LevelUp, K2Node_VariableSet_MaxFirstAidXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_FirstAid_LevelUp::K2Node_VariableSet_MaxFirstAidXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Fishing_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_Fishing_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxFishingXP_ImplicitCast;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Fishing_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Fishing_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Fishing_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_Fishing_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, CallFunc_AddXP_NewXP) == 0x000020, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000030, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000038, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fishing_LevelUp, K2Node_VariableSet_MaxFishingXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_Fishing_LevelUp::K2Node_VariableSet_MaxFishingXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Fitness_LevelUp
// 0x0068 (0x0068 - 0x0000)
struct PassiveSkillsComponent_C_Fitness_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxFitnessXP_ImplicitCast;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Fitness_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Fitness_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Fitness_LevelUp) == 0x000068, "Wrong size on PassiveSkillsComponent_C_Fitness_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000028, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000030, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_AddXP_NewXP) == 0x000040, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000048, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Fitness_LevelUp, K2Node_VariableSet_MaxFitnessXP_ImplicitCast) == 0x000060, "Member 'PassiveSkillsComponent_C_Fitness_LevelUp::K2Node_VariableSet_MaxFitnessXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.LevelUpNotification
// 0x00E8 (0x00E8 - 0x0000)
struct PassiveSkillsComponent_C_LevelUpNotification final
{
public:
	class FText                                   Skill;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Level;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
};
static_assert(alignof(PassiveSkillsComponent_C_LevelUpNotification) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_LevelUpNotification");
static_assert(sizeof(PassiveSkillsComponent_C_LevelUpNotification) == 0x0000E8, "Wrong size on PassiveSkillsComponent_C_LevelUpNotification");
static_assert(offsetof(PassiveSkillsComponent_C_LevelUpNotification, Skill) == 0x000000, "Member 'PassiveSkillsComponent_C_LevelUpNotification::Skill' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_LevelUpNotification, Level) == 0x000018, "Member 'PassiveSkillsComponent_C_LevelUpNotification::Level' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_LevelUpNotification, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'PassiveSkillsComponent_C_LevelUpNotification::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_LevelUpNotification, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'PassiveSkillsComponent_C_LevelUpNotification::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_LevelUpNotification, K2Node_MakeArray_Array) == 0x0000C0, "Member 'PassiveSkillsComponent_C_LevelUpNotification::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_LevelUpNotification, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'PassiveSkillsComponent_C_LevelUpNotification::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Marksmanship_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_Marksmanship_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxMarksmanshipXP_ImplicitCast; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Marksmanship_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Marksmanship_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Marksmanship_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_Marksmanship_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, CallFunc_AddXP_NewXP) == 0x000020, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000030, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000038, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Marksmanship_LevelUp, K2Node_VariableSet_MaxMarksmanshipXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_Marksmanship_LevelUp::K2Node_VariableSet_MaxMarksmanshipXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Reloading_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_Reloading_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxReloadingXP_ImplicitCast;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Reloading_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Reloading_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Reloading_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_Reloading_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, CallFunc_AddXP_NewXP) == 0x000020, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000030, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000038, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Reloading_LevelUp, K2Node_VariableSet_MaxReloadingXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_Reloading_LevelUp::K2Node_VariableSet_MaxReloadingXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.ResetPassiveSkills
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_ResetPassiveSkills final
{
public:
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_ResetPassiveSkills) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_ResetPassiveSkills");
static_assert(sizeof(PassiveSkillsComponent_C_ResetPassiveSkills) == 0x000001, "Wrong size on PassiveSkillsComponent_C_ResetPassiveSkills");
static_assert(offsetof(PassiveSkillsComponent_C_ResetPassiveSkills, CallFunc_GetBoolCVar_ReturnValue) == 0x000000, "Member 'PassiveSkillsComponent_C_ResetPassiveSkills::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Scavenging_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_Scavenging_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxScavengingXP_ImplicitCast;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Scavenging_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Scavenging_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Scavenging_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_Scavenging_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, CallFunc_AddXP_NewXP) == 0x000020, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000030, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000038, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Scavenging_LevelUp, K2Node_VariableSet_MaxScavengingXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_Scavenging_LevelUp::K2Node_VariableSet_MaxScavengingXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Sneaking_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_Sneaking_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxSneakingXP_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Sneaking_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Sneaking_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Sneaking_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_Sneaking_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, CallFunc_AddXP_NewXP) == 0x000020, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000030, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000038, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Sneaking_LevelUp, K2Node_VariableSet_MaxSneakingXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_Sneaking_LevelUp::K2Node_VariableSet_MaxSneakingXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Strength_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_Strength_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxStrengthXP_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Strength_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Strength_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Strength_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_Strength_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000020, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, CallFunc_AddXP_NewXP) == 0x000030, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000040, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000044, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Strength_LevelUp, K2Node_VariableSet_MaxStrengthXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_Strength_LevelUp::K2Node_VariableSet_MaxStrengthXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Thief_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_Thief_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxThiefXP_ImplicitCast;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Thief_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Thief_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Thief_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_Thief_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, CallFunc_AddXP_NewXP) == 0x000020, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000030, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000038, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Thief_LevelUp, K2Node_VariableSet_MaxThiefXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_Thief_LevelUp::K2Node_VariableSet_MaxThiefXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.Toughness_LevelUp
// 0x0050 (0x0050 - 0x0000)
struct PassiveSkillsComponent_C_Toughness_LevelUp final
{
public:
	double                                        RemainingXP;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AddXP_NewXP;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateMaxXP_MaxXPLevel;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculatePercentage_CurrentPercentage;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxToughnessXP_ImplicitCast;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_Toughness_LevelUp) == 0x000008, "Wrong alignment on PassiveSkillsComponent_C_Toughness_LevelUp");
static_assert(sizeof(PassiveSkillsComponent_C_Toughness_LevelUp) == 0x000050, "Wrong size on PassiveSkillsComponent_C_Toughness_LevelUp");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, RemainingXP) == 0x000000, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::RemainingXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, Temp_real_Variable) == 0x000008, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, CallFunc_AddXP_NewXP) == 0x000020, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::CallFunc_AddXP_NewXP' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, CallFunc_CalculateMaxXP_MaxXPLevel) == 0x000030, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::CallFunc_CalculateMaxXP_MaxXPLevel' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, CallFunc_CalculatePercentage_CurrentPercentage) == 0x000038, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::CallFunc_CalculatePercentage_CurrentPercentage' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PassiveSkillsComponent_C_Toughness_LevelUp, K2Node_VariableSet_MaxToughnessXP_ImplicitCast) == 0x000048, "Member 'PassiveSkillsComponent_C_Toughness_LevelUp::K2Node_VariableSet_MaxToughnessXP_ImplicitCast' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_FirstAid
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_FirstAid final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_FirstAid) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_FirstAid");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_FirstAid) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_FirstAid");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_FirstAid, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_FirstAid::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Fishing
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Fishing final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Fishing) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Fishing");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Fishing) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Fishing");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Fishing, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Fishing::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Fitness
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Fitness final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Fitness) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Fitness");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Fitness) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Fitness");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Fitness, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Fitness::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Marksmanship
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Marksmanship final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Marksmanship) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Marksmanship");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Marksmanship) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Marksmanship");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Marksmanship, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Marksmanship::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Reloading
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Reloading final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Reloading) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Reloading");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Reloading) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Reloading");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Reloading, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Reloading::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Scavenging
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Scavenging final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Scavenging) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Scavenging");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Scavenging) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Scavenging");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Scavenging, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Scavenging::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Sneaking
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Sneaking final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Sneaking) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Sneaking");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Sneaking) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Sneaking");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Sneaking, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Sneaking::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Strength
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Strength final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Strength) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Strength");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Strength) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Strength");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Strength, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Strength::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Thief
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Thief final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Thief) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Thief");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Thief) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Thief");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Thief, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Thief::Used_' has a wrong offset!");

// Function PassiveSkillsComponent.PassiveSkillsComponent_C.XPMultiplier_Toughness
// 0x0001 (0x0001 - 0x0000)
struct PassiveSkillsComponent_C_XPMultiplier_Toughness final
{
public:
	bool                                          Used_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PassiveSkillsComponent_C_XPMultiplier_Toughness) == 0x000001, "Wrong alignment on PassiveSkillsComponent_C_XPMultiplier_Toughness");
static_assert(sizeof(PassiveSkillsComponent_C_XPMultiplier_Toughness) == 0x000001, "Wrong size on PassiveSkillsComponent_C_XPMultiplier_Toughness");
static_assert(offsetof(PassiveSkillsComponent_C_XPMultiplier_Toughness, Used_) == 0x000000, "Member 'PassiveSkillsComponent_C_XPMultiplier_Toughness::Used_' has a wrong offset!");

}

