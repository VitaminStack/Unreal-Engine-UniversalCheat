#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StatW

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_StatW.BP_StatW_C
// 0x0078 (0x0338 - 0x02C0)
class UBP_StatW_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             ExtraTxt;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PrefixTxt;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_76;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ProgressBarBox;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_56;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGameplayTag                           StatName;                                          // 0x02F8(0x0008)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              VectValue;                                         // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   Prefix;                                            // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   ExtraText;                                         // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              MinMax;                                            // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          BothMinMaxRolled_;                                 // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          NoRandomisation_;                                  // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_BP_StatW(int32 EntryPoint);
	void GetStat(const struct FGameplayTag& Tag, class FText* Name_0, bool* ProgressBar_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_StatW_C">();
	}
	static class UBP_StatW_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_StatW_C>();
	}
};
static_assert(alignof(UBP_StatW_C) == 0x000008, "Wrong alignment on UBP_StatW_C");
static_assert(sizeof(UBP_StatW_C) == 0x000338, "Wrong size on UBP_StatW_C");
static_assert(offsetof(UBP_StatW_C, UberGraphFrame) == 0x0002C0, "Member 'UBP_StatW_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, ExtraTxt) == 0x0002C8, "Member 'UBP_StatW_C::ExtraTxt' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, PrefixTxt) == 0x0002D0, "Member 'UBP_StatW_C::PrefixTxt' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, ProgressBar_76) == 0x0002D8, "Member 'UBP_StatW_C::ProgressBar_76' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, ProgressBarBox) == 0x0002E0, "Member 'UBP_StatW_C::ProgressBarBox' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, TextBlock) == 0x0002E8, "Member 'UBP_StatW_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, TextBlock_56) == 0x0002F0, "Member 'UBP_StatW_C::TextBlock_56' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, StatName) == 0x0002F8, "Member 'UBP_StatW_C::StatName' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, VectValue) == 0x000300, "Member 'UBP_StatW_C::VectValue' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, Prefix) == 0x000310, "Member 'UBP_StatW_C::Prefix' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, ExtraText) == 0x000318, "Member 'UBP_StatW_C::ExtraText' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, MinMax) == 0x000320, "Member 'UBP_StatW_C::MinMax' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, BothMinMaxRolled_) == 0x000330, "Member 'UBP_StatW_C::BothMinMaxRolled_' has a wrong offset!");
static_assert(offsetof(UBP_StatW_C, NoRandomisation_) == 0x000331, "Member 'UBP_StatW_C::NoRandomisation_' has a wrong offset!");

}

