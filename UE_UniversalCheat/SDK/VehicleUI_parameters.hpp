#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehicleUI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function VehicleUI.VehicleUI_C.ExecuteUbergraph_VehicleUI
// 0x00E0 (0x00E0 - 0x0000)
struct VehicleUI_C_ExecuteUbergraph_VehicleUI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVehicleDrivingComponent_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Fuel;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxFuel;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Health;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MaxHealth;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetForwardSpeedMPH_ReturnValue;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x00A0(0x0018)()
	class FText                                   CallFunc_Append_Text_Return_Value;                 // 0x00B8(0x0018)()
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_1;      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleUI_C_ExecuteUbergraph_VehicleUI) == 0x000008, "Wrong alignment on VehicleUI_C_ExecuteUbergraph_VehicleUI");
static_assert(sizeof(VehicleUI_C_ExecuteUbergraph_VehicleUI) == 0x0000E0, "Wrong size on VehicleUI_C_ExecuteUbergraph_VehicleUI");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, EntryPoint) == 0x000000, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::EntryPoint' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, K2Node_CustomEvent_Fuel) == 0x000018, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::K2Node_CustomEvent_Fuel' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, K2Node_CustomEvent_MaxFuel) == 0x000020, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::K2Node_CustomEvent_MaxFuel' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, K2Node_CustomEvent_Health) == 0x000030, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::K2Node_CustomEvent_Health' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, K2Node_CustomEvent_MaxHealth) == 0x000038, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::K2Node_CustomEvent_MaxHealth' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, K2Node_Event_MyGeometry) == 0x000048, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, K2Node_Event_InDeltaTime) == 0x000080, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_GetForwardSpeedMPH_ReturnValue) == 0x000090, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_GetForwardSpeedMPH_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_Abs_ReturnValue) == 0x000098, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0000A0, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_Append_Text_Return_Value) == 0x0000B8, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_Append_Text_Return_Value' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0000D0, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_SetPercent_InPercent_ImplicitCast_1) == 0x0000D4, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_SetPercent_InPercent_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_ExecuteUbergraph_VehicleUI, CallFunc_Abs_A_ImplicitCast) == 0x0000D8, "Member 'VehicleUI_C_ExecuteUbergraph_VehicleUI::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");

// Function VehicleUI.VehicleUI_C.GetName
// 0x0050 (0x0050 - 0x0000)
struct VehicleUI_C_GetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVehicleDrivingComponent_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetName_Name;                             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(VehicleUI_C_GetName) == 0x000008, "Wrong alignment on VehicleUI_C_GetName");
static_assert(sizeof(VehicleUI_C_GetName) == 0x000050, "Wrong size on VehicleUI_C_GetName");
static_assert(offsetof(VehicleUI_C_GetName, ReturnValue) == 0x000000, "Member 'VehicleUI_C_GetName::ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_GetName, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'VehicleUI_C_GetName::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_GetName, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'VehicleUI_C_GetName::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_GetName, CallFunc_GetName_Name) == 0x000028, "Member 'VehicleUI_C_GetName::CallFunc_GetName_Name' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_GetName, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'VehicleUI_C_GetName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function VehicleUI.VehicleUI_C.Tick
// 0x003C (0x003C - 0x0000)
struct VehicleUI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleUI_C_Tick) == 0x000004, "Wrong alignment on VehicleUI_C_Tick");
static_assert(sizeof(VehicleUI_C_Tick) == 0x00003C, "Wrong size on VehicleUI_C_Tick");
static_assert(offsetof(VehicleUI_C_Tick, MyGeometry) == 0x000000, "Member 'VehicleUI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_Tick, InDeltaTime) == 0x000038, "Member 'VehicleUI_C_Tick::InDeltaTime' has a wrong offset!");

// Function VehicleUI.VehicleUI_C.UpdateFuel
// 0x0010 (0x0010 - 0x0000)
struct VehicleUI_C_UpdateFuel final
{
public:
	double                                        Fuel;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxFuel;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleUI_C_UpdateFuel) == 0x000008, "Wrong alignment on VehicleUI_C_UpdateFuel");
static_assert(sizeof(VehicleUI_C_UpdateFuel) == 0x000010, "Wrong size on VehicleUI_C_UpdateFuel");
static_assert(offsetof(VehicleUI_C_UpdateFuel, Fuel) == 0x000000, "Member 'VehicleUI_C_UpdateFuel::Fuel' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_UpdateFuel, MaxFuel) == 0x000008, "Member 'VehicleUI_C_UpdateFuel::MaxFuel' has a wrong offset!");

// Function VehicleUI.VehicleUI_C.UpdateHealth
// 0x0010 (0x0010 - 0x0000)
struct VehicleUI_C_UpdateHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxHealth;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VehicleUI_C_UpdateHealth) == 0x000008, "Wrong alignment on VehicleUI_C_UpdateHealth");
static_assert(sizeof(VehicleUI_C_UpdateHealth) == 0x000010, "Wrong size on VehicleUI_C_UpdateHealth");
static_assert(offsetof(VehicleUI_C_UpdateHealth, Health) == 0x000000, "Member 'VehicleUI_C_UpdateHealth::Health' has a wrong offset!");
static_assert(offsetof(VehicleUI_C_UpdateHealth, MaxHealth) == 0x000008, "Member 'VehicleUI_C_UpdateHealth::MaxHealth' has a wrong offset!");

}

