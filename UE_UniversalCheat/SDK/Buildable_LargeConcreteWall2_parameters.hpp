#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_LargeConcreteWall2

#include "Basic.hpp"

#include "S_RandomStatsConfig_structs.hpp"


namespace SDK::Params
{

// Function Buildable_LargeConcreteWall2.Buildable_LargeConcreteWall2_C.BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature final
{
public:
	bool                                          bIsBeyondLastLayer;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LayerIndex;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSeen;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x000004, "Wrong alignment on Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(sizeof(Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature) == 0x00000C, "Wrong size on Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsBeyondLastLayer) == 0x000000, "Member 'Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, LayerIndex) == 0x000004, "Member 'Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::LayerIndex' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature, bIsSeen) == 0x000008, "Member 'Buildable_LargeConcreteWall2_C_BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature::bIsSeen' has a wrong offset!");

// Function Buildable_LargeConcreteWall2.Buildable_LargeConcreteWall2_C.ExecuteUbergraph_Buildable_LargeConcreteWall2
// 0x0010 (0x0010 - 0x0000)
struct Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsBeyondLastLayer;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_LayerIndex;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsSeen;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2) == 0x000004, "Wrong alignment on Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2");
static_assert(sizeof(Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2) == 0x000010, "Wrong size on Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2, EntryPoint) == 0x000000, "Member 'Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2::EntryPoint' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2, K2Node_ComponentBoundEvent_bIsBeyondLastLayer) == 0x000004, "Member 'Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2::K2Node_ComponentBoundEvent_bIsBeyondLastLayer' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2, K2Node_ComponentBoundEvent_LayerIndex) == 0x000008, "Member 'Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2::K2Node_ComponentBoundEvent_LayerIndex' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2, K2Node_ComponentBoundEvent_bIsSeen) == 0x00000C, "Member 'Buildable_LargeConcreteWall2_C_ExecuteUbergraph_Buildable_LargeConcreteWall2::K2Node_ComponentBoundEvent_bIsSeen' has a wrong offset!");

// Function Buildable_LargeConcreteWall2.Buildable_LargeConcreteWall2_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct Buildable_LargeConcreteWall2_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(Buildable_LargeConcreteWall2_C_GetItemInfo) == 0x000008, "Wrong alignment on Buildable_LargeConcreteWall2_C_GetItemInfo");
static_assert(sizeof(Buildable_LargeConcreteWall2_C_GetItemInfo) == 0x000078, "Wrong size on Buildable_LargeConcreteWall2_C_GetItemInfo");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_GetItemInfo, Info) == 0x000000, "Member 'Buildable_LargeConcreteWall2_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_GetItemInfo, Count) == 0x000008, "Member 'Buildable_LargeConcreteWall2_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'Buildable_LargeConcreteWall2_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_GetItemInfo, CustomData) == 0x000028, "Member 'Buildable_LargeConcreteWall2_C_GetItemInfo::CustomData' has a wrong offset!");

// Function Buildable_LargeConcreteWall2.Buildable_LargeConcreteWall2_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct Buildable_LargeConcreteWall2_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_LargeConcreteWall2_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on Buildable_LargeConcreteWall2_C_GetJigMultiplayerComponent");
static_assert(sizeof(Buildable_LargeConcreteWall2_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on Buildable_LargeConcreteWall2_C_GetJigMultiplayerComponent");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'Buildable_LargeConcreteWall2_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function Buildable_LargeConcreteWall2.Buildable_LargeConcreteWall2_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct Buildable_LargeConcreteWall2_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_LargeConcreteWall2_C_JigCanInteract) == 0x000001, "Wrong alignment on Buildable_LargeConcreteWall2_C_JigCanInteract");
static_assert(sizeof(Buildable_LargeConcreteWall2_C_JigCanInteract) == 0x000001, "Wrong size on Buildable_LargeConcreteWall2_C_JigCanInteract");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_JigCanInteract, Result) == 0x000000, "Member 'Buildable_LargeConcreteWall2_C_JigCanInteract::Result' has a wrong offset!");

// Function Buildable_LargeConcreteWall2.Buildable_LargeConcreteWall2_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct Buildable_LargeConcreteWall2_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_LargeConcreteWall2_C_JigSetCanInteract) == 0x000001, "Wrong alignment on Buildable_LargeConcreteWall2_C_JigSetCanInteract");
static_assert(sizeof(Buildable_LargeConcreteWall2_C_JigSetCanInteract) == 0x000003, "Wrong size on Buildable_LargeConcreteWall2_C_JigSetCanInteract");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'Buildable_LargeConcreteWall2_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'Buildable_LargeConcreteWall2_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_JigSetCanInteract, Result) == 0x000002, "Member 'Buildable_LargeConcreteWall2_C_JigSetCanInteract::Result' has a wrong offset!");

// Function Buildable_LargeConcreteWall2.Buildable_LargeConcreteWall2_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct Buildable_LargeConcreteWall2_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_LargeConcreteWall2_C_SetPickupCount) == 0x000004, "Wrong alignment on Buildable_LargeConcreteWall2_C_SetPickupCount");
static_assert(sizeof(Buildable_LargeConcreteWall2_C_SetPickupCount) == 0x000008, "Wrong size on Buildable_LargeConcreteWall2_C_SetPickupCount");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_SetPickupCount, NewCount) == 0x000000, "Member 'Buildable_LargeConcreteWall2_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(Buildable_LargeConcreteWall2_C_SetPickupCount, Result) == 0x000004, "Member 'Buildable_LargeConcreteWall2_C_SetPickupCount::Result' has a wrong offset!");

}

