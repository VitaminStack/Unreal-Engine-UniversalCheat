#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Container_AnimalMeat

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_ContainerLootTables_structs.hpp"


namespace SDK::Params
{

// Function Container_AnimalMeat.Container_AnimalMeat_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct Container_AnimalMeat_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ContainerLootTables                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ContainerLootTables                      Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ContainerLootTables                      K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Container_AnimalMeat_C_UserConstructionScript) == 0x000001, "Wrong alignment on Container_AnimalMeat_C_UserConstructionScript");
static_assert(sizeof(Container_AnimalMeat_C_UserConstructionScript) == 0x000004, "Wrong size on Container_AnimalMeat_C_UserConstructionScript");
static_assert(offsetof(Container_AnimalMeat_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'Container_AnimalMeat_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_UserConstructionScript, Temp_byte_Variable) == 0x000001, "Member 'Container_AnimalMeat_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_UserConstructionScript, Temp_byte_Variable_1) == 0x000002, "Member 'Container_AnimalMeat_C_UserConstructionScript::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_UserConstructionScript, K2Node_Select_Default) == 0x000003, "Member 'Container_AnimalMeat_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");

// Function Container_AnimalMeat.Container_AnimalMeat_C.TraceForFloor
// 0x0420 (0x0420 - 0x0000)
struct Container_AnimalMeat_C_TraceForFloor final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0170(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25B[0x1];                                      // 0x025B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0330(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Container_AnimalMeat_C_TraceForFloor) == 0x000008, "Wrong alignment on Container_AnimalMeat_C_TraceForFloor");
static_assert(sizeof(Container_AnimalMeat_C_TraceForFloor) == 0x000420, "Wrong size on Container_AnimalMeat_C_TraceForFloor");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, Temp_object_Variable) == 0x000000, "Member 'Container_AnimalMeat_C_TraceForFloor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, K2Node_MakeArray_Array) == 0x000040, "Member 'Container_AnimalMeat_C_TraceForFloor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000050, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000138, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000140, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000158, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000170, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000258, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_bBlockingHit) == 0x000259, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_bInitialOverlap) == 0x00025A, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_Time) == 0x00025C, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_Distance) == 0x000260, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_Location) == 0x000268, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_ImpactPoint) == 0x000280, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_Normal) == 0x000298, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B0, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_PhysMat) == 0x0002C8, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_HitActor) == 0x0002D0, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_HitComponent) == 0x0002D8, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_HitBoneName) == 0x0002E0, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_BoneName) == 0x0002E8, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_HitItem) == 0x0002F0, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_ElementIndex) == 0x0002F4, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_FaceIndex) == 0x0002F8, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_TraceStart) == 0x000300, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_BreakHitResult_TraceEnd) == 0x000318, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000330, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_TraceForFloor, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000418, "Member 'Container_AnimalMeat_C_TraceForFloor::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");

// Function Container_AnimalMeat.Container_AnimalMeat_C.ExecuteUbergraph_Container_AnimalMeat
// 0x0010 (0x0010 - 0x0000)
struct Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat) == 0x000008, "Wrong alignment on Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat");
static_assert(sizeof(Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat) == 0x000010, "Wrong size on Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat");
static_assert(offsetof(Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat, EntryPoint) == 0x000000, "Member 'Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat::EntryPoint' has a wrong offset!");
static_assert(offsetof(Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'Container_AnimalMeat_C_ExecuteUbergraph_Container_AnimalMeat::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

}

