#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BatteryComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"


namespace SDK::Params
{

// Function BatteryComponent.BatteryComponent_C.CheckBatteryLevel
// 0x01F8 (0x01F8 - 0x0000)
struct BatteryComponent_C_CheckBatteryLevel final
{
public:
	class UBP_JigMultiplayer_C*                   JigComp;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Battery_;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  CallFunc_GetItemByUID_Item;                        // 0x0028(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_Found;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_InMainContainer_;            // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetContainerItemByInContainerIndex_Found_; // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetContainerItemByInContainerIndex_FoundItem; // 0x0108(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BatteryComponent_C_CheckBatteryLevel) == 0x000008, "Wrong alignment on BatteryComponent_C_CheckBatteryLevel");
static_assert(sizeof(BatteryComponent_C_CheckBatteryLevel) == 0x0001F8, "Wrong size on BatteryComponent_C_CheckBatteryLevel");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, JigComp) == 0x000000, "Member 'BatteryComponent_C_CheckBatteryLevel::JigComp' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, UID) == 0x000008, "Member 'BatteryComponent_C_CheckBatteryLevel::UID' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, Battery_) == 0x000018, "Member 'BatteryComponent_C_CheckBatteryLevel::Battery_' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, Value) == 0x000020, "Member 'BatteryComponent_C_CheckBatteryLevel::Value' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, CallFunc_GetItemByUID_Item) == 0x000028, "Member 'BatteryComponent_C_CheckBatteryLevel::CallFunc_GetItemByUID_Item' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, CallFunc_GetItemByUID_Found) == 0x000100, "Member 'BatteryComponent_C_CheckBatteryLevel::CallFunc_GetItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, CallFunc_GetItemByUID_InMainContainer_) == 0x000101, "Member 'BatteryComponent_C_CheckBatteryLevel::CallFunc_GetItemByUID_InMainContainer_' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, CallFunc_GetContainerItemByInContainerIndex_Found_) == 0x000102, "Member 'BatteryComponent_C_CheckBatteryLevel::CallFunc_GetContainerItemByInContainerIndex_Found_' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, CallFunc_GetContainerItemByInContainerIndex_FoundItem) == 0x000108, "Member 'BatteryComponent_C_CheckBatteryLevel::CallFunc_GetContainerItemByInContainerIndex_FoundItem' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, CallFunc_BreakVector2D_X) == 0x0001E0, "Member 'BatteryComponent_C_CheckBatteryLevel::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, CallFunc_BreakVector2D_Y) == 0x0001E8, "Member 'BatteryComponent_C_CheckBatteryLevel::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_CheckBatteryLevel, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'BatteryComponent_C_CheckBatteryLevel::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BatteryComponent.BatteryComponent_C.ExecuteUbergraph_BatteryComponent
// 0x0004 (0x0004 - 0x0000)
struct BatteryComponent_C_ExecuteUbergraph_BatteryComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BatteryComponent_C_ExecuteUbergraph_BatteryComponent) == 0x000004, "Wrong alignment on BatteryComponent_C_ExecuteUbergraph_BatteryComponent");
static_assert(sizeof(BatteryComponent_C_ExecuteUbergraph_BatteryComponent) == 0x000004, "Wrong size on BatteryComponent_C_ExecuteUbergraph_BatteryComponent");
static_assert(offsetof(BatteryComponent_C_ExecuteUbergraph_BatteryComponent, EntryPoint) == 0x000000, "Member 'BatteryComponent_C_ExecuteUbergraph_BatteryComponent::EntryPoint' has a wrong offset!");

// Function BatteryComponent.BatteryComponent_C.UseBattery
// 0x01F0 (0x01F0 - 0x0000)
struct BatteryComponent_C_UseBattery final
{
public:
	class UBP_JigMultiplayer_C*                   JigComp;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinusDur;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewDur;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Successful_;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetItemByUID_Item;                        // 0x0030(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_Found;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemByUID_InMainContainer_;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetContainerItemByInContainerIndex_Found_; // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetContainerItemByInContainerIndex_FoundItem; // 0x0110(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_ServerFuncUpdateDurabilityByUID_NewDur;   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BatteryComponent_C_UseBattery) == 0x000008, "Wrong alignment on BatteryComponent_C_UseBattery");
static_assert(sizeof(BatteryComponent_C_UseBattery) == 0x0001F0, "Wrong size on BatteryComponent_C_UseBattery");
static_assert(offsetof(BatteryComponent_C_UseBattery, JigComp) == 0x000000, "Member 'BatteryComponent_C_UseBattery::JigComp' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, UID) == 0x000008, "Member 'BatteryComponent_C_UseBattery::UID' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, MinusDur) == 0x000018, "Member 'BatteryComponent_C_UseBattery::MinusDur' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, NewDur) == 0x000020, "Member 'BatteryComponent_C_UseBattery::NewDur' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, Successful_) == 0x000028, "Member 'BatteryComponent_C_UseBattery::Successful_' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, CallFunc_GetItemByUID_Item) == 0x000030, "Member 'BatteryComponent_C_UseBattery::CallFunc_GetItemByUID_Item' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, CallFunc_GetItemByUID_Found) == 0x000108, "Member 'BatteryComponent_C_UseBattery::CallFunc_GetItemByUID_Found' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, CallFunc_GetItemByUID_InMainContainer_) == 0x000109, "Member 'BatteryComponent_C_UseBattery::CallFunc_GetItemByUID_InMainContainer_' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, CallFunc_GetContainerItemByInContainerIndex_Found_) == 0x00010A, "Member 'BatteryComponent_C_UseBattery::CallFunc_GetContainerItemByInContainerIndex_Found_' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, CallFunc_GetContainerItemByInContainerIndex_FoundItem) == 0x000110, "Member 'BatteryComponent_C_UseBattery::CallFunc_GetContainerItemByInContainerIndex_FoundItem' has a wrong offset!");
static_assert(offsetof(BatteryComponent_C_UseBattery, CallFunc_ServerFuncUpdateDurabilityByUID_NewDur) == 0x0001E8, "Member 'BatteryComponent_C_UseBattery::CallFunc_ServerFuncUpdateDurabilityByUID_NewDur' has a wrong offset!");

}

