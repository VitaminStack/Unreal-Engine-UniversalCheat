#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerMarker

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_MarkerData_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerMarker.BP_PlayerMarker_C
// 0x00A0 (0x0338 - 0x0298)
class ABP_PlayerMarker_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_PlayerMarker_C*>              Markers;                                           // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FS_MarkerData                          Marker_Data;                                       // 0x02B8(0x0070)(Edit, BlueprintVisible, SaveGame, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CompassMarker_C*                    CompassMarker;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ActorLoaded();
	void ActorPreLoad();
	void ActorPreSave();
	void ActorSaved();
	void ComponentsToSave(TArray<class UActorComponent*>* Components);
	void Event_AddMarker();
	void ExecuteUbergraph_BP_PlayerMarker(int32 EntryPoint);
	void ReceiveDestroyed();
	void RespawnMarker();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerMarker_C">();
	}
	static class ABP_PlayerMarker_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerMarker_C>();
	}
};
static_assert(alignof(ABP_PlayerMarker_C) == 0x000008, "Wrong alignment on ABP_PlayerMarker_C");
static_assert(sizeof(ABP_PlayerMarker_C) == 0x000338, "Wrong size on ABP_PlayerMarker_C");
static_assert(offsetof(ABP_PlayerMarker_C, UberGraphFrame) == 0x000298, "Member 'ABP_PlayerMarker_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerMarker_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_PlayerMarker_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PlayerMarker_C, Markers) == 0x0002A8, "Member 'ABP_PlayerMarker_C::Markers' has a wrong offset!");
static_assert(offsetof(ABP_PlayerMarker_C, Marker_Data) == 0x0002B8, "Member 'ABP_PlayerMarker_C::Marker_Data' has a wrong offset!");
static_assert(offsetof(ABP_PlayerMarker_C, Index_0) == 0x000328, "Member 'ABP_PlayerMarker_C::Index_0' has a wrong offset!");
static_assert(offsetof(ABP_PlayerMarker_C, CompassMarker) == 0x000330, "Member 'ABP_PlayerMarker_C::CompassMarker' has a wrong offset!");

}

