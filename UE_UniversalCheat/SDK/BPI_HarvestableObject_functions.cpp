#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_HarvestableObject

#include "Basic.hpp"

#include "BPI_HarvestableObject_classes.hpp"
#include "BPI_HarvestableObject_parameters.hpp"


namespace SDK
{

// Function BPI_HarvestableObject.BPI_HarvestableObject_C.HitHarvestableObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Hits                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_HarvestableObject_C::HitHarvestableObject(const struct FVector& HitLocation, int32 Hits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_HarvestableObject_C", "HitHarvestableObject");

	Params::BPI_HarvestableObject_C_HitHarvestableObject Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.Hits = Hits;

	UObject::ProcessEvent(Func, &Parms);
}

}

