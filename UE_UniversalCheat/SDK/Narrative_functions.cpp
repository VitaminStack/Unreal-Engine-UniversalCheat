#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Narrative

#include "Basic.hpp"

#include "Narrative_classes.hpp"
#include "Narrative_parameters.hpp"


namespace SDK
{

// Function Narrative.Dialogue.AdjustPlayerTransform
// (Native, Event, Protected, BlueprintEvent)

void UDialogue::AdjustPlayerTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "AdjustPlayerTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.BlendingOutFinished
// (Native, Protected)

void UDialogue::BlendingOutFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "BlendingOutFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.DestroySpeakerAvatar
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSpeakerInfo                     Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           SpeakerAvatar                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogue::DestroySpeakerAvatar(const struct FSpeakerInfo& Info, class AActor* SpeakerAvatar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "DestroySpeakerAvatar");

	Params::Dialogue_DestroySpeakerAvatar Parms{};

	Parms.Info = std::move(Info);
	Parms.SpeakerAvatar = SpeakerAvatar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.EndCurrentLine
// (Native, Public, BlueprintCallable)

void UDialogue::EndCurrentLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "EndCurrentLine");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.FinishDialogueNode
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode*                    Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSpeakerInfo                     Speaker                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           SpeakerActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ListenerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogue::FinishDialogueNode(class UDialogueNode* Node, const struct FDialogueLine& Line, const struct FSpeakerInfo& Speaker, class AActor* SpeakerActor, class AActor* ListenerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "FinishDialogueNode");

	Params::Dialogue_FinishDialogueNode Parms{};

	Parms.Node = Node;
	Parms.Line = std::move(Line);
	Parms.Speaker = std::move(Speaker);
	Parms.SpeakerActor = SpeakerActor;
	Parms.ListenerActor = ListenerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.FinishNPCDialogue
// (Native, Protected, BlueprintCallable)

void UDialogue::FinishNPCDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "FinishNPCDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.FinishPlayerDialogue
// (Native, Protected, BlueprintCallable)

void UDialogue::FinishPlayerDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "FinishPlayerDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.GetLineDuration
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode*                    Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UDialogue::GetLineDuration(class UDialogueNode* Node, const struct FDialogueLine& Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "GetLineDuration");

	Params::Dialogue_GetLineDuration Parms{};

	Parms.Node = Node;
	Parms.Line = std::move(Line);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.GetStringVariable
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode*                    Node                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class FString                           VariableName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UDialogue::GetStringVariable(const class UDialogueNode* Node, const struct FDialogueLine& Line, const class FString& VariableName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "GetStringVariable");

	Params::Dialogue_GetStringVariable Parms{};

	Parms.Node = Node;
	Parms.Line = std::move(Line);
	Parms.VariableName = std::move(VariableName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.K2_OnBeginDialogue
// (Event, Protected, BlueprintEvent)

void UDialogue::K2_OnBeginDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "K2_OnBeginDialogue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Narrative.Dialogue.K2_OnEndDialogue
// (Event, Protected, BlueprintEvent)

void UDialogue::K2_OnEndDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "K2_OnEndDialogue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Narrative.Dialogue.LinkSpeakerAvatar
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSpeakerInfo                     Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UDialogue::LinkSpeakerAvatar(const struct FSpeakerInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "LinkSpeakerAvatar");

	Params::Dialogue_LinkSpeakerAvatar Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.OnNPCDialogueLineFinished
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode_NPC*                Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    DialogueLine                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSpeakerInfo                     Speaker                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UDialogue::OnNPCDialogueLineFinished(class UDialogueNode_NPC* Node, const struct FDialogueLine& DialogueLine, const struct FSpeakerInfo& Speaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "OnNPCDialogueLineFinished");

	Params::Dialogue_OnNPCDialogueLineFinished Parms{};

	Parms.Node = Node;
	Parms.DialogueLine = std::move(DialogueLine);
	Parms.Speaker = std::move(Speaker);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.OnNPCDialogueLineStarted
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode_NPC*                Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    DialogueLine                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSpeakerInfo                     Speaker                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UDialogue::OnNPCDialogueLineStarted(class UDialogueNode_NPC* Node, const struct FDialogueLine& DialogueLine, const struct FSpeakerInfo& Speaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "OnNPCDialogueLineStarted");

	Params::Dialogue_OnNPCDialogueLineStarted Parms{};

	Parms.Node = Node;
	Parms.DialogueLine = std::move(DialogueLine);
	Parms.Speaker = std::move(Speaker);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.OnPlayerDialogueLineFinished
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode_Player*             Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    DialogueLine                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UDialogue::OnPlayerDialogueLineFinished(class UDialogueNode_Player* Node, const struct FDialogueLine& DialogueLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "OnPlayerDialogueLineFinished");

	Params::Dialogue_OnPlayerDialogueLineFinished Parms{};

	Parms.Node = Node;
	Parms.DialogueLine = std::move(DialogueLine);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.OnPlayerDialogueLineStarted
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode_Player*             Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    DialogueLine                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UDialogue::OnPlayerDialogueLineStarted(class UDialogueNode_Player* Node, const struct FDialogueLine& DialogueLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "OnPlayerDialogueLineStarted");

	Params::Dialogue_OnPlayerDialogueLineStarted Parms{};

	Parms.Node = Node;
	Parms.DialogueLine = std::move(DialogueLine);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.PlayDialogueAnimation
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDialogueNode*                    Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Listener                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogue::PlayDialogueAnimation(class UDialogueNode* Node, const struct FDialogueLine& Line, class AActor* Speaker, class AActor* Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "PlayDialogueAnimation");

	Params::Dialogue_PlayDialogueAnimation Parms{};

	Parms.Node = Node;
	Parms.Line = std::move(Line);
	Parms.Speaker = Speaker;
	Parms.Listener = Listener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.PlayDialogueNode
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode*                    Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSpeakerInfo                     Speaker                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           SpeakerActor                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ListenerActor                                          (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogue::PlayDialogueNode(class UDialogueNode* Node, const struct FDialogueLine& Line, const struct FSpeakerInfo& Speaker, class AActor* SpeakerActor, class AActor* ListenerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "PlayDialogueNode");

	Params::Dialogue_PlayDialogueNode Parms{};

	Parms.Node = Node;
	Parms.Line = std::move(Line);
	Parms.Speaker = std::move(Speaker);
	Parms.SpeakerActor = SpeakerActor;
	Parms.ListenerActor = ListenerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.PlayDialogueSequence
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UNarrativeDialogueSequence*       Sequence                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Listener                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogue::PlayDialogueSequence(class UNarrativeDialogueSequence* Sequence, class AActor* Speaker, class AActor* Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "PlayDialogueSequence");

	Params::Dialogue_PlayDialogueSequence Parms{};

	Parms.Sequence = Sequence;
	Parms.Speaker = Speaker;
	Parms.Listener = Listener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.PlayDialogueSound
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDialogueLine                    Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           Speaker                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Listener                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogue::PlayDialogueSound(const struct FDialogueLine& Line, class AActor* Speaker, class AActor* Listener)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "PlayDialogueSound");

	Params::Dialogue_PlayDialogueSound Parms{};

	Parms.Line = std::move(Line);
	Parms.Speaker = Speaker;
	Parms.Listener = Listener;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.PlayNextNPCReply
// (Native, Protected)

void UDialogue::PlayNextNPCReply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "PlayNextNPCReply");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.PlayNPCDialogue
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode_NPC*                NPCReply                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSpeakerInfo                     Speaker                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UDialogue::PlayNPCDialogue(class UDialogueNode_NPC* NPCReply, const struct FDialogueLine& Line, const struct FSpeakerInfo& Speaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "PlayNPCDialogue");

	Params::Dialogue_PlayNPCDialogue Parms{};

	Parms.NPCReply = NPCReply;
	Parms.Line = std::move(Line);
	Parms.Speaker = std::move(Speaker);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.PlayPlayerDialogue
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UDialogueNode_Player*             PlayerReply                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    Line                                                   (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UDialogue::PlayPlayerDialogue(class UDialogueNode_Player* PlayerReply, const struct FDialogueLine& Line)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "PlayPlayerDialogue");

	Params::Dialogue_PlayPlayerDialogue Parms{};

	Parms.PlayerReply = PlayerReply;
	Parms.Line = std::move(Line);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.SkipCurrentLine
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogue::SkipCurrentLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "SkipCurrentLine");

	Params::Dialogue_SkipCurrentLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.StopDialogueAnimation
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UDialogue::StopDialogueAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "StopDialogueAnimation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.StopDialogueSequence
// (Native, Protected, BlueprintCallable)

void UDialogue::StopDialogueSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "StopDialogueSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.TickDialogue
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDialogue::TickDialogue(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "TickDialogue");

	Params::Dialogue_TickDialogue Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Dialogue.CanSkipCurrentLine
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogue::CanSkipCurrentLine() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "CanSkipCurrentLine");

	Params::Dialogue_CanSkipCurrentLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.GetAvatar
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SpeakerID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UDialogue::GetAvatar(const class FName& SpeakerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "GetAvatar");

	Params::Dialogue_GetAvatar Parms{};

	Parms.SpeakerID = SpeakerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.GetConversationCenterPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UDialogue::GetConversationCenterPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "GetConversationCenterPoint");

	Params::Dialogue_GetConversationCenterPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.GetNodes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UDialogueNode*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UDialogueNode*> UDialogue::GetNodes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "GetNodes");

	Params::Dialogue_GetNodes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.GetPlayerAvatar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UDialogue::GetPlayerAvatar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "GetPlayerAvatar");

	Params::Dialogue_GetPlayerAvatar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.GetSpeakerHeadLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UDialogue::GetSpeakerHeadLocation(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "GetSpeakerHeadLocation");

	Params::Dialogue_GetSpeakerHeadLocation Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Dialogue.IsPartyDialogue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDialogue::IsPartyDialogue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialogue", "IsPartyDialogue");

	Params::Dialogue_IsPartyDialogue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeNodeBase.AreConditionsMet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeComponent*              NarrativeComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeNodeBase::AreConditionsMet(class APawn* Pawn, class APlayerController* Controller, class UNarrativeComponent* NarrativeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeNodeBase", "AreConditionsMet");

	Params::NarrativeNodeBase_AreConditionsMet Parms{};

	Parms.Pawn = Pawn;
	Parms.Controller = Controller;
	Parms.NarrativeComponent = NarrativeComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeNodeBase.ProcessEvents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeComponent*              NarrativeComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEventRuntime                           Runtime                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeNodeBase::ProcessEvents(class APawn* Pawn, class APlayerController* Controller, class UNarrativeComponent* NarrativeComponent, const EEventRuntime Runtime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeNodeBase", "ProcessEvents");

	Params::NarrativeNodeBase_ProcessEvents Parms{};

	Parms.Pawn = Pawn;
	Parms.Controller = Controller;
	Parms.NarrativeComponent = NarrativeComponent;
	Parms.Runtime = Runtime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.DialogueNode_NPC.GetSpeakerID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UDialogueNode_NPC::GetSpeakerID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogueNode_NPC", "GetSpeakerID");

	Params::DialogueNode_NPC_GetSpeakerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.DialogueNode_Player.GetHintText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogue*                        InDialogue                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UDialogueNode_Player::GetHintText(class UDialogue* InDialogue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogueNode_Player", "GetHintText");

	Params::DialogueNode_Player_GetHintText Parms{};

	Parms.InDialogue = InDialogue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.DialogueNode_Player.GetOptionText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogue*                        InDialogue                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UDialogueNode_Player::GetOptionText(class UDialogue* InDialogue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DialogueNode_Player", "GetOptionText");

	Params::DialogueNode_Player_GetOptionText Parms{};

	Parms.InDialogue = InDialogue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.BeginDialogue
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UDialogue>            Dialogue                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialoguePlayParams              PlayParams                                             (ConstParm, Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::BeginDialogue(TSubclassOf<class UDialogue> Dialogue, const struct FDialoguePlayParams& PlayParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "BeginDialogue");

	Params::NarrativeComponent_BeginDialogue Parms{};

	Parms.Dialogue = Dialogue;
	Parms.PlayParams = std::move(PlayParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.BeginLoad
// (Native, Protected)
// Parameters:
// class FString                           SaveName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::BeginLoad(const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "BeginLoad");

	Params::NarrativeComponent_BeginLoad Parms{};

	Parms.SaveName = std::move(SaveName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.BeginQuest
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartFromID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuest*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuest* UNarrativeComponent::BeginQuest(TSubclassOf<class UQuest> QuestClass, class FName StartFromID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "BeginQuest");

	Params::NarrativeComponent_BeginQuest Parms{};

	Parms.QuestClass = QuestClass;
	Parms.StartFromID = StartFromID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.BeginSave
// (Native, Protected)
// Parameters:
// class FString                           SaveName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::BeginSave(const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "BeginSave");

	Params::NarrativeComponent_BeginSave Parms{};

	Parms.SaveName = std::move(SaveName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ClientBeginDialogue
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TSubclassOf<class UDialogue>            Dialogue                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     NPCReplyChainIDs                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     AvailableResponseIDs                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNarrativeComponent::ClientBeginDialogue(TSubclassOf<class UDialogue> Dialogue, const TArray<class FName>& NPCReplyChainIDs, const TArray<class FName>& AvailableResponseIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ClientBeginDialogue");

	Params::NarrativeComponent_ClientBeginDialogue Parms{};

	Parms.Dialogue = Dialogue;
	Parms.NPCReplyChainIDs = std::move(NPCReplyChainIDs);
	Parms.AvailableResponseIDs = std::move(AvailableResponseIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ClientBeginPartyDialogue
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TSubclassOf<class UDialogue>            Dialogue                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     NPCReplyChainIDs                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     AvailableResponseIDs                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNarrativeComponent::ClientBeginPartyDialogue(TSubclassOf<class UDialogue> Dialogue, const TArray<class FName>& NPCReplyChainIDs, const TArray<class FName>& AvailableResponseIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ClientBeginPartyDialogue");

	Params::NarrativeComponent_ClientBeginPartyDialogue Parms{};

	Parms.Dialogue = Dialogue;
	Parms.NPCReplyChainIDs = std::move(NPCReplyChainIDs);
	Parms.AvailableResponseIDs = std::move(AvailableResponseIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ClientExitDialogue
// (Net, NetReliable, Native, Event, Public, NetClient)

void UNarrativeComponent::ClientExitDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ClientExitDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ClientExitPartyDialogue
// (Net, NetReliable, Native, Event, Public, NetClient)

void UNarrativeComponent::ClientExitPartyDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ClientExitPartyDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ClientReceiveSave
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FNarrativeSavedQuest>     SavedQuests                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   Tasks                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           Quantities                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNarrativeComponent::ClientReceiveSave(const TArray<struct FNarrativeSavedQuest>& SavedQuests, const TArray<class FString>& Tasks, const TArray<int32>& Quantities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ClientReceiveSave");

	Params::NarrativeComponent_ClientReceiveSave Parms{};

	Parms.SavedQuests = std::move(SavedQuests);
	Parms.Tasks = std::move(Tasks);
	Parms.Quantities = std::move(Quantities);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ClientRecieveDialogueChunk
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<class FName>                     NPCReplyChainIDs                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     AvailableResponseIDs                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNarrativeComponent::ClientRecieveDialogueChunk(const TArray<class FName>& NPCReplyChainIDs, const TArray<class FName>& AvailableResponseIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ClientRecieveDialogueChunk");

	Params::NarrativeComponent_ClientRecieveDialogueChunk Parms{};

	Parms.NPCReplyChainIDs = std::move(NPCReplyChainIDs);
	Parms.AvailableResponseIDs = std::move(AvailableResponseIDs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ClientSelectDialogueOption
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FName                             OptionID                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     Selector                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::ClientSelectDialogueOption(const class FName& OptionID, class APlayerState* Selector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ClientSelectDialogueOption");

	Params::NarrativeComponent_ClientSelectDialogueOption Parms{};

	Parms.OptionID = OptionID;
	Parms.Selector = Selector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.DeleteSave
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SaveName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::DeleteSave(const class FString& SaveName, const int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "DeleteSave");

	Params::NarrativeComponent_DeleteSave Parms{};

	Parms.SaveName = std::move(SaveName);
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.DialogueBegan
// (Native, Protected)
// Parameters:
// class UDialogue*                        Dialogue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::DialogueBegan(class UDialogue* Dialogue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "DialogueBegan");

	Params::NarrativeComponent_DialogueBegan Parms{};

	Parms.Dialogue = Dialogue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.DialogueFinished
// (Native, Protected)
// Parameters:
// class UDialogue*                        Dialogue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStartingNewDialogue                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::DialogueFinished(class UDialogue* Dialogue, const bool bStartingNewDialogue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "DialogueFinished");

	Params::NarrativeComponent_DialogueFinished Parms{};

	Parms.Dialogue = Dialogue;
	Parms.bStartingNewDialogue = bStartingNewDialogue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.DialogueLineFinished
// (Native, Protected, HasOutParams)
// Parameters:
// class UDialogue*                        Dialogue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogueNode*                    Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    DialogueLine                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UNarrativeComponent::DialogueLineFinished(class UDialogue* Dialogue, class UDialogueNode* Node, const struct FDialogueLine& DialogueLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "DialogueLineFinished");

	Params::NarrativeComponent_DialogueLineFinished Parms{};

	Parms.Dialogue = Dialogue;
	Parms.Node = Node;
	Parms.DialogueLine = std::move(DialogueLine);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.DialogueLineStarted
// (Native, Protected, HasOutParams)
// Parameters:
// class UDialogue*                        Dialogue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDialogueNode*                    Node                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialogueLine                    DialogueLine                                           (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UNarrativeComponent::DialogueLineStarted(class UDialogue* Dialogue, class UDialogueNode* Node, const struct FDialogueLine& DialogueLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "DialogueLineStarted");

	Params::NarrativeComponent_DialogueLineStarted Parms{};

	Parms.Dialogue = Dialogue;
	Parms.Node = Node;
	Parms.DialogueLine = std::move(DialogueLine);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.DialogueRepliesAvailable
// (Native, Protected, HasOutParams)
// Parameters:
// class UDialogue*                        Dialogue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UDialogueNode_Player*>     PlayerReplies                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UNarrativeComponent::DialogueRepliesAvailable(class UDialogue* Dialogue, const TArray<class UDialogueNode_Player*>& PlayerReplies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "DialogueRepliesAvailable");

	Params::NarrativeComponent_DialogueRepliesAvailable Parms{};

	Parms.Dialogue = Dialogue;
	Parms.PlayerReplies = std::move(PlayerReplies);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ForgetQuest
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::ForgetQuest(TSubclassOf<class UQuest> QuestClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ForgetQuest");

	Params::NarrativeComponent_ForgetQuest Parms{};

	Parms.QuestClass = QuestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetNumberOfTimesTaskWasCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UNarrativeDataTask*               Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNarrativeComponent::GetNumberOfTimesTaskWasCompleted(const class UNarrativeDataTask* Task, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetNumberOfTimesTaskWasCompleted");

	Params::NarrativeComponent_GetNumberOfTimesTaskWasCompleted Parms{};

	Parms.Task = Task;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.HasCompletedTask
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UNarrativeDataTask*               Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::HasCompletedTask(const class UNarrativeDataTask* Task, const class FString& Name_0, const int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "HasCompletedTask");

	Params::NarrativeComponent_HasCompletedTask Parms{};

	Parms.Task = Task;
	Parms.Name_0 = std::move(Name_0);
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.HasDialogueAvailable
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UDialogue>            Dialogue                                               (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDialoguePlayParams              PlayParams                                             (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::HasDialogueAvailable(TSubclassOf<class UDialogue> Dialogue, const struct FDialoguePlayParams& PlayParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "HasDialogueAvailable");

	Params::NarrativeComponent_HasDialogueAvailable Parms{};

	Parms.Dialogue = Dialogue;
	Parms.PlayParams = std::move(PlayParams);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.IsInDialogue
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::IsInDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "IsInDialogue");

	Params::NarrativeComponent_IsInDialogue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.Load
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SaveName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::Load(const class FString& SaveName, const int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "Load");

	Params::NarrativeComponent_Load Parms{};

	Parms.SaveName = std::move(SaveName);
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.LoadComplete
// (Native, Protected)
// Parameters:
// class FString                           SaveName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::LoadComplete(const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "LoadComplete");

	Params::NarrativeComponent_LoadComplete Parms{};

	Parms.SaveName = std::move(SaveName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.NarrativeDataTaskCompleted
// (Native, Protected)
// Parameters:
// class UNarrativeDataTask*               NarrativeTask                                          (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::NarrativeDataTaskCompleted(const class UNarrativeDataTask* NarrativeTask, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "NarrativeDataTaskCompleted");

	Params::NarrativeComponent_NarrativeDataTaskCompleted Parms{};

	Parms.NarrativeTask = NarrativeTask;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.OnRep_PartyComponent
// (Final, Native, Protected)
// Parameters:
// class UNarrativePartyComponent*         OldPartyComponent                                      (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::OnRep_PartyComponent(class UNarrativePartyComponent* OldPartyComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "OnRep_PartyComponent");

	Params::NarrativeComponent_OnRep_PartyComponent Parms{};

	Parms.OldPartyComponent = OldPartyComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.OnRep_PendingUpdateList
// (Final, Native, Protected)

void UNarrativeComponent::OnRep_PendingUpdateList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "OnRep_PendingUpdateList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.QuestBranchCompleted
// (Native, Protected)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     Branch                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::QuestBranchCompleted(const class UQuest* Quest, const class UQuestBranch* Branch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "QuestBranchCompleted");

	Params::NarrativeComponent_QuestBranchCompleted Parms{};

	Parms.Quest = Quest;
	Parms.Branch = Branch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.QuestFailed
// (Native, Protected, HasOutParams)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             QuestFailedMessage                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNarrativeComponent::QuestFailed(const class UQuest* Quest, const class FText& QuestFailedMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "QuestFailed");

	Params::NarrativeComponent_QuestFailed Parms{};

	Parms.Quest = Quest;
	Parms.QuestFailedMessage = std::move(QuestFailedMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.QuestForgotten
// (Native, Protected)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::QuestForgotten(const class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "QuestForgotten");

	Params::NarrativeComponent_QuestForgotten Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.QuestNewState
// (Native, Protected)
// Parameters:
// class UQuest*                           Quest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestState*                      NewState                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::QuestNewState(class UQuest* Quest, const class UQuestState* NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "QuestNewState");

	Params::NarrativeComponent_QuestNewState Parms{};

	Parms.Quest = Quest;
	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.QuestStarted
// (Native, Protected)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::QuestStarted(const class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "QuestStarted");

	Params::NarrativeComponent_QuestStarted Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.QuestSucceeded
// (Native, Protected, HasOutParams)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             QuestSucceededMessage                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UNarrativeComponent::QuestSucceeded(const class UQuest* Quest, const class FText& QuestSucceededMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "QuestSucceeded");

	Params::NarrativeComponent_QuestSucceeded Parms{};

	Parms.Quest = Quest;
	Parms.QuestSucceededMessage = std::move(QuestSucceededMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.QuestTaskCompleted
// (Native, Protected)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeTask*                   Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     Branch                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::QuestTaskCompleted(const class UQuest* Quest, const class UNarrativeTask* Task, const class UQuestBranch* Branch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "QuestTaskCompleted");

	Params::NarrativeComponent_QuestTaskCompleted Parms{};

	Parms.Quest = Quest;
	Parms.Task = Task;
	Parms.Branch = Branch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.QuestTaskProgressMade
// (Native, Protected)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeTask*                   Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     Branch                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldProgress                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewProgress                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::QuestTaskProgressMade(const class UQuest* Quest, const class UNarrativeTask* Task, const class UQuestBranch* Branch, int32 OldProgress, int32 NewProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "QuestTaskProgressMade");

	Params::NarrativeComponent_QuestTaskProgressMade Parms{};

	Parms.Quest = Quest;
	Parms.Task = Task;
	Parms.Branch = Branch;
	Parms.OldProgress = OldProgress;
	Parms.NewProgress = NewProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.RestartQuest
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartFromID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::RestartQuest(TSubclassOf<class UQuest> QuestClass, class FName StartFromID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "RestartQuest");

	Params::NarrativeComponent_RestartQuest Parms{};

	Parms.QuestClass = QuestClass;
	Parms.StartFromID = StartFromID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.Save
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           SaveName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::Save(const class FString& SaveName, const int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "Save");

	Params::NarrativeComponent_Save Parms{};

	Parms.SaveName = std::move(SaveName);
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.SaveComplete
// (Native, Protected)
// Parameters:
// class FString                           SaveName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::SaveComplete(const class FString& SaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "SaveComplete");

	Params::NarrativeComponent_SaveComplete Parms{};

	Parms.SaveName = std::move(SaveName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ServerSelectDialogueOption
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class FName                             OptionID                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::ServerSelectDialogueOption(const class FName& OptionID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ServerSelectDialogueOption");

	Params::NarrativeComponent_ServerSelectDialogueOption Parms{};

	Parms.OptionID = OptionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ServerTryExitDialogue
// (Net, NetReliable, Native, Event, Public, NetServer)

void UNarrativeComponent::ServerTryExitDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ServerTryExitDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.ServerTrySkipCurrentDialogueLine
// (Net, NetReliable, Native, Event, Public, NetServer)

void UNarrativeComponent::ServerTrySkipCurrentDialogueLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "ServerTrySkipCurrentDialogueLine");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.TryExitDialogue
// (Native, Public, BlueprintCallable)

void UNarrativeComponent::TryExitDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "TryExitDialogue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.TrySelectDialogueOption
// (Native, Public, BlueprintCallable)
// Parameters:
// class UDialogueNode_Player*             Option                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeComponent::TrySelectDialogueOption(class UDialogueNode_Player* Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "TrySelectDialogueOption");

	Params::NarrativeComponent_TrySelectDialogueOption Parms{};

	Parms.Option = Option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeComponent.TrySkipCurrentDialogueLine
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::TrySkipCurrentDialogueLine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "TrySkipCurrentDialogueLine");

	Params::NarrativeComponent_TrySkipCurrentDialogueLine Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetAllQuests
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuest*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuest*> UNarrativeComponent::GetAllQuests() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetAllQuests");

	Params::NarrativeComponent_GetAllQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetCurrentDialogue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDialogue*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDialogue* UNarrativeComponent::GetCurrentDialogue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetCurrentDialogue");

	Params::NarrativeComponent_GetCurrentDialogue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetFailedQuests
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuest*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuest*> UNarrativeComponent::GetFailedQuests() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetFailedQuests");

	Params::NarrativeComponent_GetFailedQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetInProgressQuests
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuest*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuest*> UNarrativeComponent::GetInProgressQuests() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetInProgressQuests");

	Params::NarrativeComponent_GetInProgressQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetOwningController
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* UNarrativeComponent::GetOwningController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetOwningController");

	Params::NarrativeComponent_GetOwningController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetOwningPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UNarrativeComponent::GetOwningPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetOwningPawn");

	Params::NarrativeComponent_GetOwningPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetParty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNarrativePartyComponent*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNarrativePartyComponent* UNarrativeComponent::GetParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetParty");

	Params::NarrativeComponent_GetParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetQuestInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuest*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuest* UNarrativeComponent::GetQuestInstance(TSubclassOf<class UQuest> QuestClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetQuestInstance");

	Params::NarrativeComponent_GetQuestInstance Parms{};

	Parms.QuestClass = QuestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.GetSucceededQuests
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuest*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuest*> UNarrativeComponent::GetSucceededQuests() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "GetSucceededQuests");

	Params::NarrativeComponent_GetSucceededQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.IsQuestFailed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::IsQuestFailed(TSubclassOf<class UQuest> QuestClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "IsQuestFailed");

	Params::NarrativeComponent_IsQuestFailed Parms{};

	Parms.QuestClass = QuestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.IsQuestFinished
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::IsQuestFinished(TSubclassOf<class UQuest> QuestClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "IsQuestFinished");

	Params::NarrativeComponent_IsQuestFinished Parms{};

	Parms.QuestClass = QuestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.IsQuestInProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::IsQuestInProgress(TSubclassOf<class UQuest> QuestClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "IsQuestInProgress");

	Params::NarrativeComponent_IsQuestInProgress Parms{};

	Parms.QuestClass = QuestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.IsQuestStartedOrFinished
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::IsQuestStartedOrFinished(TSubclassOf<class UQuest> QuestClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "IsQuestStartedOrFinished");

	Params::NarrativeComponent_IsQuestStartedOrFinished Parms{};

	Parms.QuestClass = QuestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeComponent.IsQuestSucceeded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UQuest>               QuestClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeComponent::IsQuestSucceeded(TSubclassOf<class UQuest> QuestClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeComponent", "IsQuestSucceeded");

	Params::NarrativeComponent_IsQuestSucceeded Parms{};

	Parms.QuestClass = QuestClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeCondition.CheckCondition
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeComponent*              NarrativeComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeCondition::CheckCondition(class APawn* Pawn, class APlayerController* Controller, class UNarrativeComponent* NarrativeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeCondition", "CheckCondition");

	Params::NarrativeCondition_CheckCondition Parms{};

	Parms.Pawn = Pawn;
	Parms.Controller = Controller;
	Parms.NarrativeComponent = NarrativeComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeCondition.GetGraphDisplayText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNarrativeCondition::GetGraphDisplayText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeCondition", "GetGraphDisplayText");

	Params::NarrativeCondition_GetGraphDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeDialogueSequence.EndSequence
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UNarrativeDialogueSequence::EndSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeDialogueSequence", "EndSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeDialogueSequence.GetGraphDisplayText
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UNarrativeDialogueSequence::GetGraphDisplayText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeDialogueSequence", "GetGraphDisplayText");

	Params::NarrativeDialogueSequence_GetGraphDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeDialogueSequence.GetShotAnchorTransform
// (Native, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTransform UNarrativeDialogueSequence::GetShotAnchorTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeDialogueSequence", "GetShotAnchorTransform");

	Params::NarrativeDialogueSequence_GetShotAnchorTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeDialogueSequence.OnStop
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UNarrativeDialogueSequence::OnStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeDialogueSequence", "OnStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Narrative.NarrativeDialogueSequence.PlaySequence
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UNarrativeDialogueSequence::PlaySequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeDialogueSequence", "PlaySequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeEvent.ExecuteEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Controller                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeComponent*              NarrativeComponent                                     (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeEvent::ExecuteEvent(class APawn* Pawn, class APlayerController* Controller, class UNarrativeComponent* NarrativeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeEvent", "ExecuteEvent");

	Params::NarrativeEvent_ExecuteEvent Parms{};

	Parms.Pawn = Pawn;
	Parms.Controller = Controller;
	Parms.NarrativeComponent = NarrativeComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeEvent.GetGraphDisplayText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNarrativeEvent::GetGraphDisplayText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeEvent", "GetGraphDisplayText");

	Params::NarrativeEvent_GetGraphDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeEvent.GetHintText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UNarrativeEvent::GetHintText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeEvent", "GetHintText");

	Params::NarrativeEvent_GetHintText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeFunctionLibrary.CompleteLooseNarrativeDataTask
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UNarrativeComponent*              Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Argument                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeFunctionLibrary::CompleteLooseNarrativeDataTask(class UNarrativeComponent* Target, const class FString& Argument, const int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NarrativeFunctionLibrary", "CompleteLooseNarrativeDataTask");

	Params::NarrativeFunctionLibrary_CompleteLooseNarrativeDataTask Parms{};

	Parms.Target = Target;
	Parms.Argument = std::move(Argument);
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeFunctionLibrary.CompleteNarrativeDataTask
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UNarrativeComponent*              Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeDataTask*               Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Argument                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeFunctionLibrary::CompleteNarrativeDataTask(class UNarrativeComponent* Target, const class UNarrativeDataTask* Task, const class FString& Argument, const int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NarrativeFunctionLibrary", "CompleteNarrativeDataTask");

	Params::NarrativeFunctionLibrary_CompleteNarrativeDataTask Parms{};

	Parms.Target = Target;
	Parms.Task = Task;
	Parms.Argument = std::move(Argument);
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeFunctionLibrary.GetNarrativeComponent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNarrativeComponent* UNarrativeFunctionLibrary::GetNarrativeComponent(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NarrativeFunctionLibrary", "GetNarrativeComponent");

	Params::NarrativeFunctionLibrary_GetNarrativeComponent Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeFunctionLibrary.GetNarrativeComponentFromTarget
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNarrativeComponent* UNarrativeFunctionLibrary::GetNarrativeComponentFromTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NarrativeFunctionLibrary", "GetNarrativeComponentFromTarget");

	Params::NarrativeFunctionLibrary_GetNarrativeComponentFromTarget Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeFunctionLibrary.GetTaskByName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeDataTask*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNarrativeDataTask* UNarrativeFunctionLibrary::GetTaskByName(const class UObject* WorldContextObject, const class FString& EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NarrativeFunctionLibrary", "GetTaskByName");

	Params::NarrativeFunctionLibrary_GetTaskByName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventName = std::move(EventName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeFunctionLibrary.MakeDisplayString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           String                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UNarrativeFunctionLibrary::MakeDisplayString(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NarrativeFunctionLibrary", "MakeDisplayString");

	Params::NarrativeFunctionLibrary_MakeDisplayString Parms{};

	Parms.String = std::move(String);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativePartyComponent.AddPartyMember
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UNarrativeComponent*              Member                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativePartyComponent::AddPartyMember(class UNarrativeComponent* Member)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativePartyComponent", "AddPartyMember");

	Params::NarrativePartyComponent_AddPartyMember Parms{};

	Parms.Member = Member;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativePartyComponent.IsPartyLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerState*                     Member                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativePartyComponent::IsPartyLeader(class APlayerState* Member)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativePartyComponent", "IsPartyLeader");

	Params::NarrativePartyComponent_IsPartyLeader Parms{};

	Parms.Member = Member;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativePartyComponent.RemovePartyMember
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UNarrativeComponent*              Member                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativePartyComponent::RemovePartyMember(class UNarrativeComponent* Member)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativePartyComponent", "RemovePartyMember");

	Params::NarrativePartyComponent_RemovePartyMember Parms{};

	Parms.Member = Member;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativePartyComponent.GetPartyLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNarrativeComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNarrativeComponent* UNarrativePartyComponent::GetPartyLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativePartyComponent", "GetPartyLeader");

	Params::NarrativePartyComponent_GetPartyLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativePartyComponent.GetPartyMembers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UNarrativeComponent*>      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UNarrativeComponent*> UNarrativePartyComponent::GetPartyMembers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativePartyComponent", "GetPartyMembers");

	Params::NarrativePartyComponent_GetPartyMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativePartyComponent.GetPartyMemberStates
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APlayerState*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APlayerState*> UNarrativePartyComponent::GetPartyMemberStates() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativePartyComponent", "GetPartyMemberStates");

	Params::NarrativePartyComponent_GetPartyMemberStates Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.BPOnQuestBranchCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     Branch                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::BPOnQuestBranchCompleted(const class UQuest* Quest, const class UQuestBranch* Branch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPOnQuestBranchCompleted");

	Params::Quest_BPOnQuestBranchCompleted Parms{};

	Parms.Quest = Quest;
	Parms.Branch = Branch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.BPOnQuestFailed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             QuestFailedMessage                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQuest::BPOnQuestFailed(const class UQuest* Quest, const class FText& QuestFailedMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPOnQuestFailed");

	Params::Quest_BPOnQuestFailed Parms{};

	Parms.Quest = Quest;
	Parms.QuestFailedMessage = std::move(QuestFailedMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.BPOnQuestNewState
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestState*                      NewState                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::BPOnQuestNewState(class UQuest* Quest, const class UQuestState* NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPOnQuestNewState");

	Params::Quest_BPOnQuestNewState Parms{};

	Parms.Quest = Quest;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.BPOnQuestStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::BPOnQuestStarted(const class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPOnQuestStarted");

	Params::Quest_BPOnQuestStarted Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.BPOnQuestSucceeded
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             QuestSucceededMessage                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQuest::BPOnQuestSucceeded(const class UQuest* Quest, const class FText& QuestSucceededMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPOnQuestSucceeded");

	Params::Quest_BPOnQuestSucceeded Parms{};

	Parms.Quest = Quest;
	Parms.QuestSucceededMessage = std::move(QuestSucceededMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.BPOnQuestTaskCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeTask*                   Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     Step                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::BPOnQuestTaskCompleted(const class UQuest* Quest, const class UNarrativeTask* Task, const class UQuestBranch* Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPOnQuestTaskCompleted");

	Params::Quest_BPOnQuestTaskCompleted Parms{};

	Parms.Quest = Quest;
	Parms.Task = Task;
	Parms.Step = Step;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.BPOnQuestTaskProgressChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNarrativeTask*                   Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     Step                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentProgress                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RequiredProgress                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::BPOnQuestTaskProgressChanged(const class UQuest* Quest, const class UNarrativeTask* Task, const class UQuestBranch* Step, int32 CurrentProgress, int32 RequiredProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPOnQuestTaskProgressChanged");

	Params::Quest_BPOnQuestTaskProgressChanged Parms{};

	Parms.Quest = Quest;
	Parms.Task = Task;
	Parms.Step = Step;
	Parms.CurrentProgress = CurrentProgress;
	Parms.RequiredProgress = RequiredProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.BPOnTrackedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewTracked                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::BPOnTrackedChanged(const class UQuest* Quest, const bool bNewTracked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPOnTrackedChanged");

	Params::Quest_BPOnTrackedChanged Parms{};

	Parms.Quest = Quest;
	Parms.bNewTracked = bNewTracked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.BPPreQuestStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UQuest*                           Quest                                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::BPPreQuestStarted(const class UQuest* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "BPPreQuestStarted");

	Params::Quest_BPPreQuestStarted Parms{};

	Parms.Quest = Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Narrative.Quest.EnterState
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UQuestState*                      NewState                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::EnterState(class UQuestState* NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "EnterState");

	Params::Quest_EnterState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.FailQuest
// (Final, Native, Protected)
// Parameters:
// class FText                             QuestFailedMessage                                     (Parm, NativeAccessSpecifierPublic)

void UQuest::FailQuest(const class FText& QuestFailedMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "FailQuest");

	Params::Quest_FailQuest Parms{};

	Parms.QuestFailedMessage = std::move(QuestFailedMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.OnQuestBranchCompleted
// (Final, Native, Protected)
// Parameters:
// class UQuestBranch*                     Branch                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::OnQuestBranchCompleted(const class UQuestBranch* Branch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "OnQuestBranchCompleted");

	Params::Quest_OnQuestBranchCompleted Parms{};

	Parms.Branch = Branch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.OnQuestTaskCompleted
// (Final, Native, Protected)
// Parameters:
// class UNarrativeTask*                   Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     Branch                                                 (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::OnQuestTaskCompleted(const class UNarrativeTask* Task, const class UQuestBranch* Branch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "OnQuestTaskCompleted");

	Params::Quest_OnQuestTaskCompleted Parms{};

	Parms.Task = Task;
	Parms.Branch = Branch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.OnQuestTaskProgressChanged
// (Final, Native, Protected)
// Parameters:
// class UNarrativeTask*                   Task                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     Step                                                   (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentProgress                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RequiredProgress                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::OnQuestTaskProgressChanged(const class UNarrativeTask* Task, const class UQuestBranch* Step, int32 CurrentProgress, int32 RequiredProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "OnQuestTaskProgressChanged");

	Params::Quest_OnQuestTaskProgressChanged Parms{};

	Parms.Task = Task;
	Parms.Step = Step;
	Parms.CurrentProgress = CurrentProgress;
	Parms.RequiredProgress = RequiredProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.SetQuestDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             NewDescription                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQuest::SetQuestDescription(const class FText& NewDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "SetQuestDescription");

	Params::Quest_SetQuestDescription Parms{};

	Parms.NewDescription = std::move(NewDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.SetQuestName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             NewName                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UQuest::SetQuestName(const class FText& NewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "SetQuestName");

	Params::Quest_SetQuestName Parms{};

	Parms.NewName = std::move(NewName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.SetTracked
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNewTracked                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UQuest::SetTracked(const bool bNewTracked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "SetTracked");

	Params::Quest_SetTracked Parms{};

	Parms.bNewTracked = bNewTracked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.SpawnQuestActor
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ActorTransform                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UQuest::SpawnQuestActor(TSubclassOf<class AActor> ActorClass, const struct FTransform& ActorTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "SpawnQuestActor");

	Params::Quest_SpawnQuestActor Parms{};

	Parms.ActorClass = ActorClass;
	Parms.ActorTransform = std::move(ActorTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.SucceedQuest
// (Final, Native, Protected)
// Parameters:
// class FText                             QuestSucceededMessage                                  (Parm, NativeAccessSpecifierPublic)

void UQuest::SucceedQuest(const class FText& QuestSucceededMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "SucceedQuest");

	Params::Quest_SucceedQuest Parms{};

	Parms.QuestSucceededMessage = std::move(QuestSucceededMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.Quest.GetBranch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestBranch*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestBranch* UQuest::GetBranch(class FName ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetBranch");

	Params::Quest_GetBranch Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetBranches
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestBranch*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestBranch*> UQuest::GetBranches() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetBranches");

	Params::Quest_GetBranches Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetGroupMembers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class APlayerController*>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class APlayerController*> UQuest::GetGroupMembers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetGroupMembers");

	Params::Quest_GetGroupMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetNodes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestNode*>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestNode*> UQuest::GetNodes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetNodes");

	Params::Quest_GetNodes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetOwningComp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNarrativeComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNarrativeComponent* UQuest::GetOwningComp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetOwningComp");

	Params::Quest_GetOwningComp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetOwningController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* UQuest::GetOwningController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetOwningController");

	Params::Quest_GetOwningController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetOwningPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APawn* UQuest::GetOwningPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetOwningPawn");

	Params::Quest_GetOwningPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetQuestCompletion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EQuestCompletion                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EQuestCompletion UQuest::GetQuestCompletion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetQuestCompletion");

	Params::Quest_GetQuestCompletion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetQuestDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuest::GetQuestDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetQuestDescription");

	Params::Quest_GetQuestDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetQuestName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UQuest::GetQuestName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetQuestName");

	Params::Quest_GetQuestName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetQuestStartState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestState*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestState* UQuest::GetQuestStartState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetQuestStartState");

	Params::Quest_GetQuestStartState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UQuestState*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestState* UQuest::GetState(class FName ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetState");

	Params::Quest_GetState Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.GetStates
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UQuestState*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UQuestState*> UQuest::GetStates() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "GetStates");

	Params::Quest_GetStates Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.Quest.IsTracked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UQuest::IsTracked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Quest", "IsTracked");

	Params::Quest_IsTracked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeTask.AddProgress
// (BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ProgressToAdd                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeTask::AddProgress(const int32 ProgressToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "AddProgress");

	Params::NarrativeTask_AddProgress Parms{};

	Parms.ProgressToAdd = ProgressToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeTask.CompleteTask
// (BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void UNarrativeTask::CompleteTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "CompleteTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeTask.K2_BeginTask
// (Event, Protected, BlueprintEvent)

void UNarrativeTask::K2_BeginTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "K2_BeginTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Narrative.NarrativeTask.K2_EndTask
// (Event, Protected, BlueprintEvent)

void UNarrativeTask::K2_EndTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "K2_EndTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Narrative.NarrativeTask.K2_OnTaskCompleted
// (Event, Protected, BlueprintEvent)

void UNarrativeTask::K2_OnTaskCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "K2_OnTaskCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Narrative.NarrativeTask.SetProgress
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NewProgress                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNarrativeTask::SetProgress(const int32 NewProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "SetProgress");

	Params::NarrativeTask_SetProgress Parms{};

	Parms.NewProgress = NewProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeTask.TickTask
// (Native, Event, Protected, BlueprintEvent)

void UNarrativeTask::TickTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "TickTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Narrative.NarrativeTask.GetOwningBranch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UQuestBranch*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UQuestBranch* UNarrativeTask::GetOwningBranch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "GetOwningBranch");

	Params::NarrativeTask_GetOwningBranch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeTask.GetTaskDescription
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UNarrativeTask::GetTaskDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "GetTaskDescription");

	Params::NarrativeTask_GetTaskDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeTask.GetTaskNodeDescription
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UNarrativeTask::GetTaskNodeDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "GetTaskNodeDescription");

	Params::NarrativeTask_GetTaskNodeDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeTask.GetTaskProgressText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UNarrativeTask::GetTaskProgressText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "GetTaskProgressText");

	Params::NarrativeTask_GetTaskProgressText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Narrative.NarrativeTask.IsComplete
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNarrativeTask::IsComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NarrativeTask", "IsComplete");

	Params::NarrativeTask_IsComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

