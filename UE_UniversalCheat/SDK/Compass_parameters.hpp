#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Compass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function Compass.Compass_C.ExecuteUbergraph_Compass
// 0x0040 (0x0040 - 0x0000)
struct Compass_C_ExecuteUbergraph_Compass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_ExecuteUbergraph_Compass) == 0x000008, "Wrong alignment on Compass_C_ExecuteUbergraph_Compass");
static_assert(sizeof(Compass_C_ExecuteUbergraph_Compass) == 0x000040, "Wrong size on Compass_C_ExecuteUbergraph_Compass");
static_assert(offsetof(Compass_C_ExecuteUbergraph_Compass, EntryPoint) == 0x000000, "Member 'Compass_C_ExecuteUbergraph_Compass::EntryPoint' has a wrong offset!");
static_assert(offsetof(Compass_C_ExecuteUbergraph_Compass, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Compass_C_ExecuteUbergraph_Compass::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Compass_C_ExecuteUbergraph_Compass, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Compass_C_ExecuteUbergraph_Compass::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Compass_C_ExecuteUbergraph_Compass, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'Compass_C_ExecuteUbergraph_Compass::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ExecuteUbergraph_Compass, CallFunc_K2_SetTimer_ReturnValue) == 0x000030, "Member 'Compass_C_ExecuteUbergraph_Compass::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ExecuteUbergraph_Compass, K2Node_CustomEvent_InVisibility) == 0x000038, "Member 'Compass_C_ExecuteUbergraph_Compass::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(Compass_C_ExecuteUbergraph_Compass, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'Compass_C_ExecuteUbergraph_Compass::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Compass.Compass_C.GetWidgetReference
// 0x0030 (0x0030 - 0x0000)
struct Compass_C_GetWidgetReference final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCompassMarkerUI_C*                     Array_Element;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCompassMarkerUI_C*                     CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_GetWidgetReference) == 0x000008, "Wrong alignment on Compass_C_GetWidgetReference");
static_assert(sizeof(Compass_C_GetWidgetReference) == 0x000030, "Wrong size on Compass_C_GetWidgetReference");
static_assert(offsetof(Compass_C_GetWidgetReference, Object) == 0x000000, "Member 'Compass_C_GetWidgetReference::Object' has a wrong offset!");
static_assert(offsetof(Compass_C_GetWidgetReference, Array_Element) == 0x000008, "Member 'Compass_C_GetWidgetReference::Array_Element' has a wrong offset!");
static_assert(offsetof(Compass_C_GetWidgetReference, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Compass_C_GetWidgetReference::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Compass_C_GetWidgetReference, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Compass_C_GetWidgetReference::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Compass_C_GetWidgetReference, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Compass_C_GetWidgetReference::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_GetWidgetReference, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Compass_C_GetWidgetReference::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_GetWidgetReference, CallFunc_Array_Get_Item) == 0x000020, "Member 'Compass_C_GetWidgetReference::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Compass_C_GetWidgetReference, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Compass_C_GetWidgetReference::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_GetWidgetReference, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000029, "Member 'Compass_C_GetWidgetReference::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function Compass.Compass_C.NavPoints
// 0x0050 (0x0050 - 0x0000)
struct Compass_C_NavPoints final
{
public:
	class ABP_CompassMarker_C*                    L_Marker;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCompassMarkerUI_C*                     CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectBehind_Behind;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UsedActor_Used;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CompassMarker_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	class ABP_CompassMarker_C*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_NavPoints) == 0x000008, "Wrong alignment on Compass_C_NavPoints");
static_assert(sizeof(Compass_C_NavPoints) == 0x000050, "Wrong size on Compass_C_NavPoints");
static_assert(offsetof(Compass_C_NavPoints, L_Marker) == 0x000000, "Member 'Compass_C_NavPoints::L_Marker' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Compass_C_NavPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Compass_C_NavPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Compass_C_NavPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_Create_ReturnValue) == 0x000018, "Member 'Compass_C_NavPoints::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_ObjectBehind_Behind) == 0x000020, "Member 'Compass_C_NavPoints::CallFunc_ObjectBehind_Behind' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_UsedActor_Used) == 0x000021, "Member 'Compass_C_NavPoints::CallFunc_UsedActor_Used' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'Compass_C_NavPoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_AddChildToCanvas_ReturnValue) == 0x000028, "Member 'Compass_C_NavPoints::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'Compass_C_NavPoints::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_Array_Get_Item) == 0x000040, "Member 'Compass_C_NavPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Compass_C_NavPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NavPoints, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Compass_C_NavPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Compass.Compass_C.NewPointPosition
// 0x0040 (0x0040 - 0x0000)
struct Compass_C_NewPointPosition final
{
public:
	class AActor*                                 Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NewXPosition_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ObjectBehind_Behind;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCompassMarkerUI_C*                     CallFunc_GetWidgetReference_Array_Element;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_NewPointPosition) == 0x000008, "Wrong alignment on Compass_C_NewPointPosition");
static_assert(sizeof(Compass_C_NewPointPosition) == 0x000040, "Wrong size on Compass_C_NewPointPosition");
static_assert(offsetof(Compass_C_NewPointPosition, Object) == 0x000000, "Member 'Compass_C_NewPointPosition::Object' has a wrong offset!");
static_assert(offsetof(Compass_C_NewPointPosition, CallFunc_NewXPosition_ReturnValue) == 0x000008, "Member 'Compass_C_NewPointPosition::CallFunc_NewXPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewPointPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Compass_C_NewPointPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewPointPosition, CallFunc_ObjectBehind_Behind) == 0x000018, "Member 'Compass_C_NewPointPosition::CallFunc_ObjectBehind_Behind' has a wrong offset!");
static_assert(offsetof(Compass_C_NewPointPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'Compass_C_NewPointPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewPointPosition, CallFunc_GetWidgetReference_Array_Element) == 0x000030, "Member 'Compass_C_NewPointPosition::CallFunc_GetWidgetReference_Array_Element' has a wrong offset!");
static_assert(offsetof(Compass_C_NewPointPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000038, "Member 'Compass_C_NewPointPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function Compass.Compass_C.NewXPosition
// 0x00E8 (0x00E8 - 0x0000)
struct Compass_C_NewXPosition final
{
public:
	class AActor*                                 Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_NewXPosition) == 0x000008, "Wrong alignment on Compass_C_NewXPosition");
static_assert(sizeof(Compass_C_NewXPosition) == 0x0000E8, "Wrong size on Compass_C_NewXPosition");
static_assert(offsetof(Compass_C_NewXPosition, Object) == 0x000000, "Member 'Compass_C_NewXPosition::Object' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, ReturnValue) == 0x000008, "Member 'Compass_C_NewXPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'Compass_C_NewXPosition::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Compass_C_NewXPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000030, "Member 'Compass_C_NewXPosition::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'Compass_C_NewXPosition::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'Compass_C_NewXPosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_GetRightVector_ReturnValue) == 0x000068, "Member 'Compass_C_NewXPosition::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_FindLookAtRotation_ReturnValue) == 0x000080, "Member 'Compass_C_NewXPosition::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000098, "Member 'Compass_C_NewXPosition::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_Vector_Normal2D_ReturnValue) == 0x0000B0, "Member 'Compass_C_NewXPosition::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000C8, "Member 'Compass_C_NewXPosition::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'Compass_C_NewXPosition::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Compass_C_NewXPosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_NewXPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Compass_C_NewXPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Compass.Compass_C.ObjectBehind
// 0x00E0 (0x00E0 - 0x0000)
struct Compass_C_ObjectBehind final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Behind;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_ObjectBehind) == 0x000008, "Wrong alignment on Compass_C_ObjectBehind");
static_assert(sizeof(Compass_C_ObjectBehind) == 0x0000E0, "Wrong size on Compass_C_ObjectBehind");
static_assert(offsetof(Compass_C_ObjectBehind, Target) == 0x000000, "Member 'Compass_C_ObjectBehind::Target' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, Behind) == 0x000008, "Member 'Compass_C_ObjectBehind::Behind' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'Compass_C_ObjectBehind::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Compass_C_ObjectBehind::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000030, "Member 'Compass_C_ObjectBehind::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'Compass_C_ObjectBehind::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'Compass_C_ObjectBehind::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_Normal_ReturnValue) == 0x000068, "Member 'Compass_C_ObjectBehind::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_FindLookAtRotation_ReturnValue) == 0x000080, "Member 'Compass_C_ObjectBehind::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000098, "Member 'Compass_C_ObjectBehind::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_Normal_ReturnValue_1) == 0x0000B0, "Member 'Compass_C_ObjectBehind::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000C8, "Member 'Compass_C_ObjectBehind::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_DegAcos_ReturnValue) == 0x0000D0, "Member 'Compass_C_ObjectBehind::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_ObjectBehind, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Compass_C_ObjectBehind::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Compass.Compass_C.OnVisibilityChanged_Event_0
// 0x0001 (0x0001 - 0x0000)
struct Compass_C_OnVisibilityChanged_Event_0 final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_OnVisibilityChanged_Event_0) == 0x000001, "Wrong alignment on Compass_C_OnVisibilityChanged_Event_0");
static_assert(sizeof(Compass_C_OnVisibilityChanged_Event_0) == 0x000001, "Wrong size on Compass_C_OnVisibilityChanged_Event_0");
static_assert(offsetof(Compass_C_OnVisibilityChanged_Event_0, InVisibility) == 0x000000, "Member 'Compass_C_OnVisibilityChanged_Event_0::InVisibility' has a wrong offset!");

// Function Compass.Compass_C.RemoveFromCompass
// 0x0018 (0x0018 - 0x0000)
struct Compass_C_RemoveFromCompass final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCompassMarkerUI_C*                     CallFunc_GetWidgetReference_Array_Element;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_RemoveFromCompass) == 0x000008, "Wrong alignment on Compass_C_RemoveFromCompass");
static_assert(sizeof(Compass_C_RemoveFromCompass) == 0x000018, "Wrong size on Compass_C_RemoveFromCompass");
static_assert(offsetof(Compass_C_RemoveFromCompass, Object) == 0x000000, "Member 'Compass_C_RemoveFromCompass::Object' has a wrong offset!");
static_assert(offsetof(Compass_C_RemoveFromCompass, CallFunc_GetWidgetReference_Array_Element) == 0x000008, "Member 'Compass_C_RemoveFromCompass::CallFunc_GetWidgetReference_Array_Element' has a wrong offset!");
static_assert(offsetof(Compass_C_RemoveFromCompass, CallFunc_RemoveChild_ReturnValue) == 0x000010, "Member 'Compass_C_RemoveFromCompass::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_RemoveFromCompass, CallFunc_Array_RemoveItem_ReturnValue) == 0x000011, "Member 'Compass_C_RemoveFromCompass::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Compass.Compass_C.SetDirection
// 0x0070 (0x0070 - 0x0000)
struct Compass_C_SetDirection final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_SetDirection) == 0x000008, "Wrong alignment on Compass_C_SetDirection");
static_assert(sizeof(Compass_C_SetDirection) == 0x000070, "Wrong size on Compass_C_SetDirection");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'Compass_C_SetDirection::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'Compass_C_SetDirection::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'Compass_C_SetDirection::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'Compass_C_SetDirection::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Compass_C_SetDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'Compass_C_SetDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'Compass_C_SetDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'Compass_C_SetDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Compass_C_SetDirection::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Compass_C_SetDirection::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'Compass_C_SetDirection::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'Compass_C_SetDirection::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_SetDirection, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'Compass_C_SetDirection::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Compass.Compass_C.UsedActor
// 0x0038 (0x0038 - 0x0000)
struct Compass_C_UsedActor final
{
public:
	TArray<class UCompassMarkerUI_C*>             Widgets;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UObject*                                Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Used;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCompassMarkerUI_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Compass_C_UsedActor) == 0x000008, "Wrong alignment on Compass_C_UsedActor");
static_assert(sizeof(Compass_C_UsedActor) == 0x000038, "Wrong size on Compass_C_UsedActor");
static_assert(offsetof(Compass_C_UsedActor, Widgets) == 0x000000, "Member 'Compass_C_UsedActor::Widgets' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, Actor) == 0x000010, "Member 'Compass_C_UsedActor::Actor' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, Used) == 0x000018, "Member 'Compass_C_UsedActor::Used' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Compass_C_UsedActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Compass_C_UsedActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Compass_C_UsedActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, CallFunc_Array_Get_Item) == 0x000028, "Member 'Compass_C_UsedActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'Compass_C_UsedActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'Compass_C_UsedActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Compass_C_UsedActor, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'Compass_C_UsedActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

