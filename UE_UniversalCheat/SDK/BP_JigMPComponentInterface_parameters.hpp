#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JigMPComponentInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "RepItemInfo_structs.hpp"


namespace SDK::Params
{

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_GetLootWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_GetLootWidget final
{
public:
	class UWidget*                                Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_GetLootWidget) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_GetLootWidget");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_GetLootWidget) == 0x000010, "Wrong size on BP_JigMPComponentInterface_C_JigMP_GetLootWidget");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_GetLootWidget, Result) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_GetLootWidget::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_GetLootWidget, Valid_) == 0x000008, "Member 'BP_JigMPComponentInterface_C_JigMP_GetLootWidget::Valid_' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnContainersSwap
// 0x0018 (0x0018 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnContainersSwap final
{
public:
	class UJSIContainer_C*                        Container1;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container2;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnContainersSwap) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnContainersSwap");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnContainersSwap) == 0x000018, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnContainersSwap");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnContainersSwap, Container1) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnContainersSwap::Container1' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnContainersSwap, Container2) == 0x000008, "Member 'BP_JigMPComponentInterface_C_JigMP_OnContainersSwap::Container2' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnContainersSwap, Result) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnContainersSwap::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnItemAdded
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnItemAdded final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        FromComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnItemAdded) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnItemAdded");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnItemAdded) == 0x000040, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnItemAdded");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemAdded, ItemUID) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemAdded, FromContainerUID) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemAdded::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemAdded, ToContainerUID) == 0x000020, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemAdded, FromComponent) == 0x000030, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemAdded::FromComponent' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemAdded, Result) == 0x000038, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemAdded::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnItemConsumed
// 0x0118 (0x0118 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnItemConsumed final
{
public:
	struct FRepItemInfo                           ConsumedItem;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining;                                         // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           InsideOf;                                          // 0x0080(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromContainer;                                     // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CustomData;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallbackToPlayer_;                                 // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0111(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnItemConsumed");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed) == 0x000118, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnItemConsumed");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed, ConsumedItem) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemConsumed::ConsumedItem' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed, Amount) == 0x000078, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemConsumed::Amount' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed, Remaining) == 0x00007C, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemConsumed::Remaining' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed, InsideOf) == 0x000080, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemConsumed::InsideOf' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed, FromContainer) == 0x0000F8, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemConsumed::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed, CustomData) == 0x000100, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemConsumed::CustomData' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed, CallbackToPlayer_) == 0x000110, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemConsumed::CallbackToPlayer_' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemConsumed, Result) == 0x000111, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemConsumed::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnItemDropped
// 0x0030 (0x0030 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnItemDropped final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnItemDropped) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnItemDropped");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnItemDropped) == 0x000030, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnItemDropped");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemDropped, ItemUID) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemDropped::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemDropped, FromContainerUID) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemDropped::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemDropped, ActorRef) == 0x000020, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemDropped::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemDropped, Result) == 0x000028, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemDropped::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnItemMoved
// 0x0034 (0x0034 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnItemMoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnItemMoved) == 0x000004, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnItemMoved");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnItemMoved) == 0x000034, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnItemMoved");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemMoved, ItemUID) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemMoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemMoved, FromContainerUID) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemMoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemMoved, ToContainerUID) == 0x000020, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemMoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemMoved, Result) == 0x000030, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemMoved::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnItemRemoved
// 0x0040 (0x0040 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnItemRemoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        ToComponent;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnItemRemoved) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnItemRemoved");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnItemRemoved) == 0x000040, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnItemRemoved");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemRemoved, ItemUID) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemRemoved, FromContainerUID) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemRemoved, ToContainerUID) == 0x000020, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemRemoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemRemoved, ToComponent) == 0x000030, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemRemoved::ToComponent' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnItemRemoved, Result) == 0x000038, "Member 'BP_JigMPComponentInterface_C_JigMP_OnItemRemoved::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnMainContainerItemAdded
// 0x00B8 (0x00B8 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded final
{
public:
	struct FGuid                                  ToContainerUID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemInfo;                                          // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromMain;                                          // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorRef;                                          // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded) == 0x0000B8, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded, ToContainerUID) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded, ItemUID) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded, ToContainerName) == 0x000020, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded::ToContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded, ItemInfo) == 0x000028, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded, FromMain) == 0x0000A0, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded::FromMain' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded, Result) == 0x0000A8, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded, ActorRef) == 0x0000B0, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemAdded::ActorRef' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnMainContainerItemRemoved
// 0x00A8 (0x00A8 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved final
{
public:
	struct FGuid                                  FromContainerUID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemRemovedInfo;                                   // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved) == 0x0000A8, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved, FromContainerUID) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved, ItemUID) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved, ContainerName) == 0x000020, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved, ItemRemovedInfo) == 0x000028, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved::ItemRemovedInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved, Result) == 0x0000A0, "Member 'BP_JigMPComponentInterface_C_JigMP_OnMainContainerItemRemoved::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnPickupAdded
// 0x00A8 (0x00A8 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnPickupAdded final
{
public:
	struct FRepItemInfo                           Info;                                              // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnPickupAdded) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnPickupAdded");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnPickupAdded) == 0x0000A8, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnPickupAdded");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupAdded, Info) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupAdded::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupAdded, ItemUID) == 0x000078, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupAdded, ToContainerUID) == 0x000088, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupAdded, ToContainer) == 0x000098, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupAdded::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupAdded, Result) == 0x0000A0, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupAdded::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnPickupEquipped
// 0x00B8 (0x00B8 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           Info;                                              // 0x0030(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OverrideActor;                                     // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped) == 0x0000B8, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped, ActorRef) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped::ActorRef' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped, ToContainerName) == 0x000008, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped::ToContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped, UID) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped::UID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped, ToContainerUID) == 0x000020, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped::ToContainerUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped, Info) == 0x000030, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped::Info' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped, Result) == 0x0000A8, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped::Result' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped, OverrideActor) == 0x0000B0, "Member 'BP_JigMPComponentInterface_C_JigMP_OnPickupEquipped::OverrideActor' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnRequestDropItem
// 0x0088 (0x0088 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem final
{
public:
	struct FRepItemInfo                           ItemInfo;                                          // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem) == 0x000008, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem) == 0x000088, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem, ItemInfo) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem, ContainerName) == 0x000078, "Member 'BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem::ContainerName' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem, ActorRef) == 0x000080, "Member 'BP_JigMPComponentInterface_C_JigMP_OnRequestDropItem::ActorRef' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnTwoContainersSwap
// 0x0014 (0x0014 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap final
{
public:
	class FName                                   FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap) == 0x000004, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap) == 0x000014, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap, FromContainer) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap::FromContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap, ToContainer) == 0x000008, "Member 'BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap::ToContainer' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap, Result) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnTwoContainersSwap::Result' has a wrong offset!");

// Function BP_JigMPComponentInterface.BP_JigMPComponentInterface_C.JigMP_OnUpdateChamberUID
// 0x0014 (0x0014 - 0x0000)
struct BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID final
{
public:
	struct FGuid                                  NewUID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID) == 0x000004, "Wrong alignment on BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID");
static_assert(sizeof(BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID) == 0x000014, "Wrong size on BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID, NewUID) == 0x000000, "Member 'BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID::NewUID' has a wrong offset!");
static_assert(offsetof(BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID, Result) == 0x000010, "Member 'BP_JigMPComponentInterface_C_JigMP_OnUpdateChamberUID::Result' has a wrong offset!");

}

