#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterAICharacter

#include "Basic.hpp"

#include "BP_MasterAICharacter_classes.hpp"
#include "BP_MasterAICharacter_parameters.hpp"


namespace SDK
{

// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Actor Aim Focus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::Actor_Aim_Focus(class AActor* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Actor Aim Focus");

	Params::BP_MasterAICharacter_C_Actor_Aim_Focus Parms{};

	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Actor Attack Target
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attack_Target                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::Actor_Attack_Target(class AActor** Attack_Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Actor Attack Target");

	Params::BP_MasterAICharacter_C_Actor_Attack_Target Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_Target != nullptr)
		*Attack_Target = Parms.Attack_Target;
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.ActorDead?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::ActorDead_(bool* Dead_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "ActorDead?");

	Params::BP_MasterAICharacter_C_ActorDead_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead_ != nullptr)
		*Dead_ = Parms.Dead_;
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.AI Alert
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Alert_Actor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::AI_Alert(class AActor* Alert_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "AI Alert");

	Params::BP_MasterAICharacter_C_AI_Alert Parms{};

	Parms.Alert_Actor = Alert_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.AI Animation Switch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_AIBehaviour                           Behaviour                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::AI_Animation_Switch(E_AIBehaviour Behaviour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "AI Animation Switch");

	Params::BP_MasterAICharacter_C_AI_Animation_Switch Parms{};

	Parms.Behaviour = Behaviour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.AI Block
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BlockType                             Block_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Block_Attacker                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::AI_Block(E_BlockType Block_Type, class AActor* Block_Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "AI Block");

	Params::BP_MasterAICharacter_C_AI_Block Parms{};

	Parms.Block_Type = Block_Type;
	Parms.Block_Attacker = Block_Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.AI Camera Activate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Activate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::AI_Camera_Activate(bool Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "AI Camera Activate");

	Params::BP_MasterAICharacter_C_AI_Camera_Activate Parms{};

	Parms.Activate = Activate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.AI Can Interact?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_Interact                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::AI_Can_Interact_(bool* Can_Interact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "AI Can Interact?");

	Params::BP_MasterAICharacter_C_AI_Can_Interact_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can_Interact != nullptr)
		*Can_Interact = Parms.Can_Interact;
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.AI Dead
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterAICharacter_C::AI_Dead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "AI Dead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.AI End Alert
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterAICharacter_C::AI_End_Alert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "AI End Alert");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Alert Actor Defenders
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::Alert_Actor_Defenders(class AActor* Attacked, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Alert Actor Defenders");

	Params::BP_MasterAICharacter_C_Alert_Actor_Defenders Parms{};

	Parms.Attacked = Attacked;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Climb Location Movement
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Valting                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End_Climb_Location_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Play_Rate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::Climb_Location_Movement(bool Is_Valting, const struct FVector& End_Climb_Location_0, double Play_Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Climb Location Movement");

	Params::BP_MasterAICharacter_C_Climb_Location_Movement Parms{};

	Parms.Is_Valting = Is_Valting;
	Parms.End_Climb_Location_0 = std::move(End_Climb_Location_0);
	Parms.Play_Rate = Play_Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Climb Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_MasterAICharacter_C::Climb_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Climb Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Climb Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_MasterAICharacter_C::Climb_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Climb Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Debug Text
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FLinearColor                     TextColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::Debug_Text(const class FString& InString, const struct FLinearColor& TextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Debug Text");

	Params::BP_MasterAICharacter_C_Debug_Text Parms{};

	Parms.InString = std::move(InString);
	Parms.TextColor = std::move(TextColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Edge Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_MasterAICharacter_C::Edge_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Edge Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Edge Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_MasterAICharacter_C::Edge_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Edge Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Event_BloodSplatter
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterAICharacter_C::Event_BloodSplatter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Event_BloodSplatter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.ExecuteUbergraph_BP_MasterAICharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::ExecuteUbergraph_BP_MasterAICharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "ExecuteUbergraph_BP_MasterAICharacter");

	Params::BP_MasterAICharacter_C_ExecuteUbergraph_BP_MasterAICharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.GetQuestArgument
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Argument                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::GetQuestArgument(const class FString& Argument)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "GetQuestArgument");

	Params::BP_MasterAICharacter_C_GetQuestArgument Parms{};

	Parms.Argument = std::move(Argument);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_MasterAICharacter_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "OnLanded");

	Params::BP_MasterAICharacter_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MasterAICharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "ReceivePossessed");

	Params::BP_MasterAICharacter_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Smooth Move AI Actor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       End_Location_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Play_Time                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::Smooth_Move_AI_Actor(const struct FTransform& End_Location_0, double Play_Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Smooth Move AI Actor");

	Params::BP_MasterAICharacter_C_Smooth_Move_AI_Actor Parms{};

	Parms.End_Location_0 = std::move(End_Location_0);
	Parms.Play_Time = Play_Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Smooth Move__FinishedFunc
// (BlueprintEvent)

void ABP_MasterAICharacter_C::Smooth_Move__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Smooth Move__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Smooth Move__UpdateFunc
// (BlueprintEvent)

void ABP_MasterAICharacter_C::Smooth_Move__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Smooth Move__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Turret Destroyed Effect
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterAICharacter_C::Turret_Destroyed_Effect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Turret Destroyed Effect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Turret End Reload
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterAICharacter_C::Turret_End_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Turret End Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Turret Idle Start
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterAICharacter_C::Turret_Idle_Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Turret Idle Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Turret Idle Stop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterAICharacter_C::Turret_Idle_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Turret Idle Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Turret Start Reload
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterAICharacter_C::Turret_Start_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Turret Start Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Valt Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_MasterAICharacter_C::Valt_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Valt Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.Valt Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_MasterAICharacter_C::Valt_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "Valt Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.XP
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::XP(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "XP");

	Params::BP_MasterAICharacter_C_XP Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterAICharacter.BP_MasterAICharacter_C.AI Is Dead?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Dead                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterAICharacter_C::AI_Is_Dead_(bool* Dead) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterAICharacter_C", "AI Is Dead?");

	Params::BP_MasterAICharacter_C_AI_Is_Dead_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead != nullptr)
		*Dead = Parms.Dead;
}

}

