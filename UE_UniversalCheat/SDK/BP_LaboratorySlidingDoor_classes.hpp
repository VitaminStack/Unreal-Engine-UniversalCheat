#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LaboratorySlidingDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_LaboratoryMaster_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LaboratorySlidingDoor.BP_LaboratorySlidingDoor_C
// 0x0058 (0x0300 - 0x02A8)
class ABP_LaboratorySlidingDoor_C final : public ABP_LaboratoryMaster_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Debug_Front;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_DoorsAuto_Alpha_F06518C54DEEEC3499FB10AFDCD4E288; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_DoorsAuto__Direction_F06518C54DEEEC3499FB10AFDCD4E288; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_DoorsAuto;                                      // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         TL_DoorsKeycard_Alpha_1807B7464BB9E4B5B4A4719F4AF08F9D; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_DoorsKeycard__Direction_1807B7464BB9E4B5B4A4719F4AF08F9D; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_DoorsKeycard;                                   // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClosed;                                          // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJigsawItem_DataAsset_C*                Keycard;                                           // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Unlocked;                                          // 0x02F8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Locked;                                            // 0x02F9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Warning;                                           // 0x02FA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          XPGiven_;                                          // 0x02FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanOpenDoorFromBehind_;                            // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void TL_DoorsKeycard__UpdateFunc();
	void TL_DoorsKeycard__FinishedFunc();
	void TL_DoorsAuto__UpdateFunc();
	void TL_DoorsAuto__FinishedFunc();
	void SetPower_Warning(bool SetWarning);
	void SetPower_TurnedOn(bool TurnOn);
	void SetPickupCount(int32 NewCount, bool* Result);
	void SetInteractOption(const struct FGameplayTag& Option);
	void PickupBuildFromGround();
	void OnStopExecuteInteract(class AActor* InteractingActor);
	void OnServerExecuteInteract(const struct FGameplayTag& Option, class AActor* ByActor, const struct FS_JigPayload& Payload);
	void OnRequestServerInteract(class AActor* Actor, const struct FGameplayTag& Option, const struct FS_JigPayload& Payload, bool* Result);
	void OnRep_Warning();
	void OnRep_Unlocked();
	void OnRep_Locked();
	void OnExecuteInteractEnded();
	void OnExecuteInteractDialogue(class AActor* InteractingActor);
	void OnExecuteInteract(class AActor* InteractingActor, const struct FGameplayTag& Option);
	void OnEndInteract();
	void OnBeginInteract(class AActor* InteractingActor, const TMap<struct FGameplayTag, class FText>& Options);
	void JigSetCanInteract(bool CanInteract, bool EnablePhysics, bool* Result);
	void JigCanInteract(bool* Result);
	void GetMainSceneComp(class USceneComponent** Comp);
	void GetJigMultiplayerComponent(class UActorComponent** JigComp);
	void GetItemInfo(class UJigsawItem_DataAsset_C** Info, int32* Count, struct FS_RandomStatsConfig* RandomStatsConfig, TMap<class FString, class FString>* CustomData);
	void GetInteractOptions(TMap<struct FGameplayTag, class FText>* Options);
	void ExecuteUbergraph_BP_LaboratorySlidingDoor(int32 EntryPoint);
	void Event_Door(class AActor* Interactor);
	void Event_AutoDoor();
	void CallInteractOnObject();
	void BndEvt__BP_CookingStation_AIOSubject_K2Node_ComponentBoundEvent_0_OnOptimizationUpdate__DelegateSignature(bool bIsBeyondLastLayer, int32 LayerIndex, bool bIsSeen);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LaboratorySlidingDoor_C">();
	}
	static class ABP_LaboratorySlidingDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LaboratorySlidingDoor_C>();
	}
};
static_assert(alignof(ABP_LaboratorySlidingDoor_C) == 0x000008, "Wrong alignment on ABP_LaboratorySlidingDoor_C");
static_assert(sizeof(ABP_LaboratorySlidingDoor_C) == 0x000300, "Wrong size on ABP_LaboratorySlidingDoor_C");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, UberGraphFrame) == 0x0002A8, "Member 'ABP_LaboratorySlidingDoor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, Debug_Front) == 0x0002B0, "Member 'ABP_LaboratorySlidingDoor_C::Debug_Front' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, Frame) == 0x0002B8, "Member 'ABP_LaboratorySlidingDoor_C::Frame' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, Door) == 0x0002C0, "Member 'ABP_LaboratorySlidingDoor_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, TL_DoorsAuto_Alpha_F06518C54DEEEC3499FB10AFDCD4E288) == 0x0002C8, "Member 'ABP_LaboratorySlidingDoor_C::TL_DoorsAuto_Alpha_F06518C54DEEEC3499FB10AFDCD4E288' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, TL_DoorsAuto__Direction_F06518C54DEEEC3499FB10AFDCD4E288) == 0x0002CC, "Member 'ABP_LaboratorySlidingDoor_C::TL_DoorsAuto__Direction_F06518C54DEEEC3499FB10AFDCD4E288' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, TL_DoorsAuto) == 0x0002D0, "Member 'ABP_LaboratorySlidingDoor_C::TL_DoorsAuto' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, TL_DoorsKeycard_Alpha_1807B7464BB9E4B5B4A4719F4AF08F9D) == 0x0002D8, "Member 'ABP_LaboratorySlidingDoor_C::TL_DoorsKeycard_Alpha_1807B7464BB9E4B5B4A4719F4AF08F9D' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, TL_DoorsKeycard__Direction_1807B7464BB9E4B5B4A4719F4AF08F9D) == 0x0002DC, "Member 'ABP_LaboratorySlidingDoor_C::TL_DoorsKeycard__Direction_1807B7464BB9E4B5B4A4719F4AF08F9D' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, TL_DoorsKeycard) == 0x0002E0, "Member 'ABP_LaboratorySlidingDoor_C::TL_DoorsKeycard' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, IsClosed) == 0x0002E8, "Member 'ABP_LaboratorySlidingDoor_C::IsClosed' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, Keycard) == 0x0002F0, "Member 'ABP_LaboratorySlidingDoor_C::Keycard' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, Unlocked) == 0x0002F8, "Member 'ABP_LaboratorySlidingDoor_C::Unlocked' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, Locked) == 0x0002F9, "Member 'ABP_LaboratorySlidingDoor_C::Locked' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, Warning) == 0x0002FA, "Member 'ABP_LaboratorySlidingDoor_C::Warning' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, XPGiven_) == 0x0002FB, "Member 'ABP_LaboratorySlidingDoor_C::XPGiven_' has a wrong offset!");
static_assert(offsetof(ABP_LaboratorySlidingDoor_C, CanOpenDoorFromBehind_) == 0x0002FC, "Member 'ABP_LaboratorySlidingDoor_C::CanOpenDoorFromBehind_' has a wrong offset!");

}

