#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Buildable_MASTER

#include "Basic.hpp"

#include "Enum_BuildingSnapTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_JigPayload_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "RepItemInfo_structs.hpp"
#include "S_RandomStatsConfig_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"


namespace SDK::Params
{

// Function Buildable_MASTER.Buildable_MASTER_C.CheckDistanceFromActor
// 0x0058 (0x0058 - 0x0000)
struct Buildable_MASTER_C_CheckDistanceFromActor final
{
public:
	TScriptInterface<class IBP_JigCharacterInterface_C> K2Node_DynamicCast_AsBP_Jig_Character_Interface;   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnInteractActorOverDistance_Result;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_CheckDistanceFromActor) == 0x000008, "Wrong alignment on Buildable_MASTER_C_CheckDistanceFromActor");
static_assert(sizeof(Buildable_MASTER_C_CheckDistanceFromActor) == 0x000058, "Wrong size on Buildable_MASTER_C_CheckDistanceFromActor");
static_assert(offsetof(Buildable_MASTER_C_CheckDistanceFromActor, K2Node_DynamicCast_AsBP_Jig_Character_Interface) == 0x000000, "Member 'Buildable_MASTER_C_CheckDistanceFromActor::K2Node_DynamicCast_AsBP_Jig_Character_Interface' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_CheckDistanceFromActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Buildable_MASTER_C_CheckDistanceFromActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_CheckDistanceFromActor, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'Buildable_MASTER_C_CheckDistanceFromActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_CheckDistanceFromActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'Buildable_MASTER_C_CheckDistanceFromActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_CheckDistanceFromActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'Buildable_MASTER_C_CheckDistanceFromActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_CheckDistanceFromActor, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'Buildable_MASTER_C_CheckDistanceFromActor::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_CheckDistanceFromActor, CallFunc_OnInteractActorOverDistance_Result) == 0x000050, "Member 'Buildable_MASTER_C_CheckDistanceFromActor::CallFunc_OnInteractActorOverDistance_Result' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_CheckDistanceFromActor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000051, "Member 'Buildable_MASTER_C_CheckDistanceFromActor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.ComponentsToSave
// 0x0010 (0x0010 - 0x0000)
struct Buildable_MASTER_C_ComponentsToSave final
{
public:
	TArray<class UActorComponent*>                Components;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(Buildable_MASTER_C_ComponentsToSave) == 0x000008, "Wrong alignment on Buildable_MASTER_C_ComponentsToSave");
static_assert(sizeof(Buildable_MASTER_C_ComponentsToSave) == 0x000010, "Wrong size on Buildable_MASTER_C_ComponentsToSave");
static_assert(offsetof(Buildable_MASTER_C_ComponentsToSave, Components) == 0x000000, "Member 'Buildable_MASTER_C_ComponentsToSave::Components' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.ExecuteUbergraph_Buildable_MASTER
// 0x0468 (0x0468 - 0x0000)
struct Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor_3;                              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_Name;                                 // 0x0030(0x0018)()
	class AActor*                                 K2Node_Event_InteractingActor_3;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor_2;                              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor_1;                              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor_2;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FText>                K2Node_MakeMap_Map;                                // 0x0068(0x0050)()
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_1;                              // 0x00B8(0x0050)(ConstParm)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD;                               // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player;                   // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_ShowInteractWidget_Widget;                // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_JigMultiplayer_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigTryAddItemSomewhere_Added_;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_JigTryAddItemSomewhere_UID;               // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                K2Node_MakeMap_Map_2;                              // 0x0158(0x0050)()
	TMap<class FName, class FText>                K2Node_MakeMap_Map_3;                              // 0x01A8(0x0050)()
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_1;                             // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_4;                              // 0x0200(0x0050)(ConstParm)
	TMap<struct FGameplayTag, class FText>        K2Node_MakeMap_Map_5;                              // 0x0250(0x0050)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_2;                             // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_1;              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_3;                             // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Quick_;                         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetHUD_HUD_4;                             // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_2;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD;                           // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD_Game_C*                            CallFunc_GetGameHUD_HUD_1;                         // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Buildables_C>     K2Node_DynamicCast_AsBPI_Buildables;               // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Buildables_C>     K2Node_DynamicCast_AsBPI_Buildables_1;             // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InteractingActor_1;                   // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option_2;                             // 0x0338(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_MpInteractInterface_C> K2Node_DynamicCast_AsBP_Mp_Interact_Interface;     // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Option_1;                             // 0x0354(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_ByActor;                              // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          K2Node_Event_Payload;                              // 0x0368(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryVisible__Result;               // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Player_C>         K2Node_DynamicCast_AsBPI_Player_1;                 // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnRequestServerInteract_Result;           // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3[0x5];                                      // 0x03B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x03B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Option;                               // 0x03C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InteractingActor;                     // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        K2Node_Event_Options;                              // 0x03D0(0x0050)(ConstParm)
	class UWidget*                                CallFunc_ShowInteractWidget_Widget_3;              // 0x0420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0428(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0438(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentTime_ImplicitCast;       // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER) == 0x000008, "Wrong alignment on Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER");
static_assert(sizeof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER) == 0x000468, "Wrong size on Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, EntryPoint) == 0x000000, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::EntryPoint' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Damage) == 0x000004, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_DamageType) == 0x000008, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_InstigatedBy) == 0x000010, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_DamageCauser) == 0x000018, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_ActorHasTag_ReturnValue) == 0x000020, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Actor_3) == 0x000028, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Actor_3' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Name) == 0x000030, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_InteractingActor_3) == 0x000048, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_InteractingActor_3' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Actor_2) == 0x000050, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Actor_2' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Actor_1) == 0x000058, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Actor_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_InteractingActor_2) == 0x000060, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_InteractingActor_2' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_MakeMap_Map) == 0x000068, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_MakeMap_Map_1) == 0x0000B8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetHUD_HUD) == 0x000108, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetHUD_HUD' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_AsBPI_Player) == 0x000110, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_AsBPI_Player' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_ShowInteractWidget_Widget) == 0x000128, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_ShowInteractWidget_Widget' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000130, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetComponentByClass_ReturnValue) == 0x000138, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_JigTryAddItemSomewhere_Added_) == 0x000140, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_JigTryAddItemSomewhere_Added_' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_JigTryAddItemSomewhere_UID) == 0x000144, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_JigTryAddItemSomewhere_UID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_MakeMap_Map_2) == 0x000158, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_MakeMap_Map_2' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_MakeMap_Map_3) == 0x0001A8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_MakeMap_Map_3' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetHUD_HUD_1) == 0x0001F8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_MakeMap_Map_4) == 0x000200, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_MakeMap_Map_4' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_MakeMap_Map_5) == 0x000250, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_MakeMap_Map_5' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_IsValid_ReturnValue) == 0x0002A0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetHUD_HUD_2) == 0x0002A8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetHUD_HUD_2' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_ShowInteractWidget_Widget_1) == 0x0002B0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_ShowInteractWidget_Widget_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetHUD_HUD_3) == 0x0002B8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetHUD_HUD_3' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_CustomEvent_Quick_) == 0x0002C0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_CustomEvent_Quick_' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Actor) == 0x0002C8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetHUD_HUD_4) == 0x0002D0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetHUD_HUD_4' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_ShowInteractWidget_Widget_2) == 0x0002D8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_ShowInteractWidget_Widget_2' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetGameHUD_HUD) == 0x0002E0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetGameHUD_HUD' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetGameHUD_HUD_1) == 0x0002E8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetGameHUD_HUD_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_CustomEvent_Actor_1) == 0x0002F0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_AsBPI_Buildables) == 0x0002F8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_AsBPI_Buildables' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_bSuccess_1) == 0x000308, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_CustomEvent_Actor) == 0x000310, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_AsBPI_Buildables_1) == 0x000318, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_AsBPI_Buildables_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_bSuccess_2) == 0x000328, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_InteractingActor_1) == 0x000330, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_InteractingActor_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Option_2) == 0x000338, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Option_2' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_AsBP_Mp_Interact_Interface) == 0x000340, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_AsBP_Mp_Interact_Interface' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_bSuccess_3) == 0x000350, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Option_1) == 0x000354, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Option_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_ByActor) == 0x000360, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_ByActor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Payload) == 0x000368, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_IsInventoryVisible__Result) == 0x000398, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_IsInventoryVisible__Result' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000399, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_AsBPI_Player_1) == 0x0003A0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_AsBPI_Player_1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_DynamicCast_bSuccess_4) == 0x0003B0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_OnRequestServerInteract_Result) == 0x0003B1, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_OnRequestServerInteract_Result' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_GetBoolCVar_ReturnValue) == 0x0003B2, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_K2_SetTimer_ReturnValue) == 0x0003B8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Option) == 0x0003C0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Option' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_InteractingActor) == 0x0003C8, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_InteractingActor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_Event_Options) == 0x0003D0, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_Event_Options' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_ShowInteractWidget_Widget_3) == 0x000420, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_ShowInteractWidget_Widget_3' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_CreateDelegate_OutputDelegate) == 0x000428, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000438, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000440, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000444, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000448, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000450, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000458, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER, K2Node_VariableSet_CurrentTime_ImplicitCast) == 0x000460, "Member 'Buildable_MASTER_C_ExecuteUbergraph_Buildable_MASTER::K2Node_VariableSet_CurrentTime_ImplicitCast' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.GetAllItemsInContainer
// 0x0108 (0x0108 - 0x0000)
struct Buildable_MASTER_C_GetAllItemsInContainer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          CallFunc_GetContainerItems_AllItems;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0020(0x00D8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_GetAllItemsInContainer) == 0x000008, "Wrong alignment on Buildable_MASTER_C_GetAllItemsInContainer");
static_assert(sizeof(Buildable_MASTER_C_GetAllItemsInContainer) == 0x000108, "Wrong size on Buildable_MASTER_C_GetAllItemsInContainer");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, ReturnValue) == 0x000000, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, CallFunc_GetContainerItems_AllItems) == 0x000010, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::CallFunc_GetContainerItems_AllItems' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, CallFunc_Array_Get_Item) == 0x000020, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, CallFunc_IsValidClass_ReturnValue) == 0x0000F8, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F9, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, CallFunc_Array_Length_ReturnValue) == 0x0000FC, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetAllItemsInContainer, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'Buildable_MASTER_C_GetAllItemsInContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.GetBuildType
// 0x0001 (0x0001 - 0x0000)
struct Buildable_MASTER_C_GetBuildType final
{
public:
	Enum_BuildingSnapTypes                        Type;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_GetBuildType) == 0x000001, "Wrong alignment on Buildable_MASTER_C_GetBuildType");
static_assert(sizeof(Buildable_MASTER_C_GetBuildType) == 0x000001, "Wrong size on Buildable_MASTER_C_GetBuildType");
static_assert(offsetof(Buildable_MASTER_C_GetBuildType, Type) == 0x000000, "Member 'Buildable_MASTER_C_GetBuildType::Type' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.GetInteractOptions
// 0x0050 (0x0050 - 0x0000)
struct Buildable_MASTER_C_GetInteractOptions final
{
public:
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(Buildable_MASTER_C_GetInteractOptions) == 0x000008, "Wrong alignment on Buildable_MASTER_C_GetInteractOptions");
static_assert(sizeof(Buildable_MASTER_C_GetInteractOptions) == 0x000050, "Wrong size on Buildable_MASTER_C_GetInteractOptions");
static_assert(offsetof(Buildable_MASTER_C_GetInteractOptions, Options) == 0x000000, "Member 'Buildable_MASTER_C_GetInteractOptions::Options' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.GetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct Buildable_MASTER_C_GetItemInfo final
{
public:
	class UJigsawItem_DataAsset_C*                Info;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RandomStatsConfig                   RandomStatsConfig;                                 // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class FString, class FString>            CustomData;                                        // 0x0028(0x0050)(Parm, OutParm)
};
static_assert(alignof(Buildable_MASTER_C_GetItemInfo) == 0x000008, "Wrong alignment on Buildable_MASTER_C_GetItemInfo");
static_assert(sizeof(Buildable_MASTER_C_GetItemInfo) == 0x000078, "Wrong size on Buildable_MASTER_C_GetItemInfo");
static_assert(offsetof(Buildable_MASTER_C_GetItemInfo, Info) == 0x000000, "Member 'Buildable_MASTER_C_GetItemInfo::Info' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetItemInfo, Count) == 0x000008, "Member 'Buildable_MASTER_C_GetItemInfo::Count' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetItemInfo, RandomStatsConfig) == 0x000010, "Member 'Buildable_MASTER_C_GetItemInfo::RandomStatsConfig' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_GetItemInfo, CustomData) == 0x000028, "Member 'Buildable_MASTER_C_GetItemInfo::CustomData' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.GetJigMultiplayerComponent
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_GetJigMultiplayerComponent final
{
public:
	class UActorComponent*                        JigComp;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_GetJigMultiplayerComponent) == 0x000008, "Wrong alignment on Buildable_MASTER_C_GetJigMultiplayerComponent");
static_assert(sizeof(Buildable_MASTER_C_GetJigMultiplayerComponent) == 0x000008, "Wrong size on Buildable_MASTER_C_GetJigMultiplayerComponent");
static_assert(offsetof(Buildable_MASTER_C_GetJigMultiplayerComponent, JigComp) == 0x000000, "Member 'Buildable_MASTER_C_GetJigMultiplayerComponent::JigComp' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.GetMainSceneComp
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_GetMainSceneComp final
{
public:
	class USceneComponent*                        Comp;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_GetMainSceneComp) == 0x000008, "Wrong alignment on Buildable_MASTER_C_GetMainSceneComp");
static_assert(sizeof(Buildable_MASTER_C_GetMainSceneComp) == 0x000008, "Wrong size on Buildable_MASTER_C_GetMainSceneComp");
static_assert(offsetof(Buildable_MASTER_C_GetMainSceneComp, Comp) == 0x000000, "Member 'Buildable_MASTER_C_GetMainSceneComp::Comp' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigCanInteract
// 0x0001 (0x0001 - 0x0000)
struct Buildable_MASTER_C_JigCanInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigCanInteract) == 0x000001, "Wrong alignment on Buildable_MASTER_C_JigCanInteract");
static_assert(sizeof(Buildable_MASTER_C_JigCanInteract) == 0x000001, "Wrong size on Buildable_MASTER_C_JigCanInteract");
static_assert(offsetof(Buildable_MASTER_C_JigCanInteract, Result) == 0x000000, "Member 'Buildable_MASTER_C_JigCanInteract::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_GetLootWidget
// 0x0010 (0x0010 - 0x0000)
struct Buildable_MASTER_C_JigMP_GetLootWidget final
{
public:
	class UWidget*                                Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_GetLootWidget) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_GetLootWidget");
static_assert(sizeof(Buildable_MASTER_C_JigMP_GetLootWidget) == 0x000010, "Wrong size on Buildable_MASTER_C_JigMP_GetLootWidget");
static_assert(offsetof(Buildable_MASTER_C_JigMP_GetLootWidget, Result) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_GetLootWidget::Result' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_GetLootWidget, Valid_) == 0x000008, "Member 'Buildable_MASTER_C_JigMP_GetLootWidget::Valid_' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnContainersSwap
// 0x0018 (0x0018 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnContainersSwap final
{
public:
	class UJSIContainer_C*                        Container1;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        Container2;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnContainersSwap) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnContainersSwap");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnContainersSwap) == 0x000018, "Wrong size on Buildable_MASTER_C_JigMP_OnContainersSwap");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnContainersSwap, Container1) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnContainersSwap::Container1' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnContainersSwap, Container2) == 0x000008, "Member 'Buildable_MASTER_C_JigMP_OnContainersSwap::Container2' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnContainersSwap, Result) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnContainersSwap::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnItemAdded
// 0x0040 (0x0040 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnItemAdded final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        FromComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnItemAdded) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnItemAdded");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnItemAdded) == 0x000040, "Wrong size on Buildable_MASTER_C_JigMP_OnItemAdded");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemAdded, ItemUID) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemAdded, FromContainerUID) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnItemAdded::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemAdded, ToContainerUID) == 0x000020, "Member 'Buildable_MASTER_C_JigMP_OnItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemAdded, FromComponent) == 0x000030, "Member 'Buildable_MASTER_C_JigMP_OnItemAdded::FromComponent' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemAdded, Result) == 0x000038, "Member 'Buildable_MASTER_C_JigMP_OnItemAdded::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnItemConsumed
// 0x0118 (0x0118 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnItemConsumed final
{
public:
	struct FRepItemInfo                           ConsumedItem;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0078(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining;                                         // 0x007C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           InsideOf;                                          // 0x0080(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromContainer;                                     // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CustomData;                                        // 0x0100(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallbackToPlayer_;                                 // 0x0110(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0111(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnItemConsumed) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnItemConsumed");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnItemConsumed) == 0x000118, "Wrong size on Buildable_MASTER_C_JigMP_OnItemConsumed");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemConsumed, ConsumedItem) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnItemConsumed::ConsumedItem' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemConsumed, Amount) == 0x000078, "Member 'Buildable_MASTER_C_JigMP_OnItemConsumed::Amount' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemConsumed, Remaining) == 0x00007C, "Member 'Buildable_MASTER_C_JigMP_OnItemConsumed::Remaining' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemConsumed, InsideOf) == 0x000080, "Member 'Buildable_MASTER_C_JigMP_OnItemConsumed::InsideOf' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemConsumed, FromContainer) == 0x0000F8, "Member 'Buildable_MASTER_C_JigMP_OnItemConsumed::FromContainer' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemConsumed, CustomData) == 0x000100, "Member 'Buildable_MASTER_C_JigMP_OnItemConsumed::CustomData' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemConsumed, CallbackToPlayer_) == 0x000110, "Member 'Buildable_MASTER_C_JigMP_OnItemConsumed::CallbackToPlayer_' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemConsumed, Result) == 0x000111, "Member 'Buildable_MASTER_C_JigMP_OnItemConsumed::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnItemDropped
// 0x0030 (0x0030 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnItemDropped final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JigMP_OnItemRemoved_Result;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnItemDropped) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnItemDropped");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnItemDropped) == 0x000030, "Wrong size on Buildable_MASTER_C_JigMP_OnItemDropped");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemDropped, ItemUID) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnItemDropped::ItemUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemDropped, FromContainerUID) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnItemDropped::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemDropped, ActorRef) == 0x000020, "Member 'Buildable_MASTER_C_JigMP_OnItemDropped::ActorRef' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemDropped, Result) == 0x000028, "Member 'Buildable_MASTER_C_JigMP_OnItemDropped::Result' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemDropped, CallFunc_JigMP_OnItemRemoved_Result) == 0x000029, "Member 'Buildable_MASTER_C_JigMP_OnItemDropped::CallFunc_JigMP_OnItemRemoved_Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnItemMoved
// 0x0034 (0x0034 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnItemMoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnItemMoved) == 0x000004, "Wrong alignment on Buildable_MASTER_C_JigMP_OnItemMoved");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnItemMoved) == 0x000034, "Wrong size on Buildable_MASTER_C_JigMP_OnItemMoved");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemMoved, ItemUID) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnItemMoved::ItemUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemMoved, FromContainerUID) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnItemMoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemMoved, ToContainerUID) == 0x000020, "Member 'Buildable_MASTER_C_JigMP_OnItemMoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemMoved, Result) == 0x000030, "Member 'Buildable_MASTER_C_JigMP_OnItemMoved::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnItemRemoved
// 0x0040 (0x0040 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnItemRemoved final
{
public:
	struct FGuid                                  ItemUID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FromContainerUID;                                  // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        ToComponent;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnItemRemoved) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnItemRemoved");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnItemRemoved) == 0x000040, "Wrong size on Buildable_MASTER_C_JigMP_OnItemRemoved");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemRemoved, ItemUID) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemRemoved, FromContainerUID) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemRemoved, ToContainerUID) == 0x000020, "Member 'Buildable_MASTER_C_JigMP_OnItemRemoved::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemRemoved, ToComponent) == 0x000030, "Member 'Buildable_MASTER_C_JigMP_OnItemRemoved::ToComponent' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnItemRemoved, Result) == 0x000038, "Member 'Buildable_MASTER_C_JigMP_OnItemRemoved::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnMainContainerItemAdded
// 0x00B8 (0x00B8 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnMainContainerItemAdded final
{
public:
	struct FGuid                                  ToContainerUID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemInfo;                                          // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   FromMain;                                          // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorRef;                                          // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnMainContainerItemAdded");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded) == 0x0000B8, "Wrong size on Buildable_MASTER_C_JigMP_OnMainContainerItemAdded");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded, ToContainerUID) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded, ItemUID) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded, ToContainerName) == 0x000020, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemAdded::ToContainerName' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded, ItemInfo) == 0x000028, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemAdded::ItemInfo' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded, FromMain) == 0x0000A0, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemAdded::FromMain' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded, Result) == 0x0000A8, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemAdded::Result' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemAdded, ActorRef) == 0x0000B0, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemAdded::ActorRef' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnMainContainerItemRemoved
// 0x00A8 (0x00A8 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved final
{
public:
	struct FGuid                                  FromContainerUID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           ItemRemovedInfo;                                   // 0x0028(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved) == 0x0000A8, "Wrong size on Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved, FromContainerUID) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved::FromContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved, ItemUID) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved::ItemUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved, ContainerName) == 0x000020, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved::ContainerName' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved, ItemRemovedInfo) == 0x000028, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved::ItemRemovedInfo' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved, Result) == 0x0000A0, "Member 'Buildable_MASTER_C_JigMP_OnMainContainerItemRemoved::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnPickupAdded
// 0x00A8 (0x00A8 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnPickupAdded final
{
public:
	struct FRepItemInfo                           Info;                                              // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FGuid                                  ItemUID;                                           // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0088(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnPickupAdded) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnPickupAdded");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnPickupAdded) == 0x0000A8, "Wrong size on Buildable_MASTER_C_JigMP_OnPickupAdded");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupAdded, Info) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnPickupAdded::Info' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupAdded, ItemUID) == 0x000078, "Member 'Buildable_MASTER_C_JigMP_OnPickupAdded::ItemUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupAdded, ToContainerUID) == 0x000088, "Member 'Buildable_MASTER_C_JigMP_OnPickupAdded::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupAdded, ToContainer) == 0x000098, "Member 'Buildable_MASTER_C_JigMP_OnPickupAdded::ToContainer' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupAdded, Result) == 0x0000A0, "Member 'Buildable_MASTER_C_JigMP_OnPickupAdded::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnPickupEquipped
// 0x00B8 (0x00B8 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnPickupEquipped final
{
public:
	class AActor*                                 ActorRef;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainerName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  ToContainerUID;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRepItemInfo                           Info;                                              // 0x0030(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OverrideActor;                                     // 0x00B0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnPickupEquipped) == 0x000008, "Wrong alignment on Buildable_MASTER_C_JigMP_OnPickupEquipped");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnPickupEquipped) == 0x0000B8, "Wrong size on Buildable_MASTER_C_JigMP_OnPickupEquipped");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupEquipped, ActorRef) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnPickupEquipped::ActorRef' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupEquipped, ToContainerName) == 0x000008, "Member 'Buildable_MASTER_C_JigMP_OnPickupEquipped::ToContainerName' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupEquipped, UID) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnPickupEquipped::UID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupEquipped, ToContainerUID) == 0x000020, "Member 'Buildable_MASTER_C_JigMP_OnPickupEquipped::ToContainerUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupEquipped, Info) == 0x000030, "Member 'Buildable_MASTER_C_JigMP_OnPickupEquipped::Info' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupEquipped, Result) == 0x0000A8, "Member 'Buildable_MASTER_C_JigMP_OnPickupEquipped::Result' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnPickupEquipped, OverrideActor) == 0x0000B0, "Member 'Buildable_MASTER_C_JigMP_OnPickupEquipped::OverrideActor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnRequestDropItem
// 0x0150 (0x0150 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnRequestDropItem final
{
public:
	struct FRepItemInfo                           ItemInfo;                                          // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   ContainerName;                                     // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActorRef;                                          // 0x0080(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnRequestDropItem) == 0x000010, "Wrong alignment on Buildable_MASTER_C_JigMP_OnRequestDropItem");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnRequestDropItem) == 0x000150, "Wrong size on Buildable_MASTER_C_JigMP_OnRequestDropItem");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, ItemInfo) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, ContainerName) == 0x000078, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::ContainerName' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, ActorRef) == 0x000080, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::ActorRef' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000088, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000A8, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, CallFunc_MakeTransform_ReturnValue) == 0x0000D0, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000130, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000138, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnRequestDropItem, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000140, "Member 'Buildable_MASTER_C_JigMP_OnRequestDropItem::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnTwoContainersSwap
// 0x0014 (0x0014 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnTwoContainersSwap final
{
public:
	class FName                                   FromContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ToContainer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnTwoContainersSwap) == 0x000004, "Wrong alignment on Buildable_MASTER_C_JigMP_OnTwoContainersSwap");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnTwoContainersSwap) == 0x000014, "Wrong size on Buildable_MASTER_C_JigMP_OnTwoContainersSwap");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnTwoContainersSwap, FromContainer) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnTwoContainersSwap::FromContainer' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnTwoContainersSwap, ToContainer) == 0x000008, "Member 'Buildable_MASTER_C_JigMP_OnTwoContainersSwap::ToContainer' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnTwoContainersSwap, Result) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnTwoContainersSwap::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigMP_OnUpdateChamberUID
// 0x0014 (0x0014 - 0x0000)
struct Buildable_MASTER_C_JigMP_OnUpdateChamberUID final
{
public:
	struct FGuid                                  NewUID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigMP_OnUpdateChamberUID) == 0x000004, "Wrong alignment on Buildable_MASTER_C_JigMP_OnUpdateChamberUID");
static_assert(sizeof(Buildable_MASTER_C_JigMP_OnUpdateChamberUID) == 0x000014, "Wrong size on Buildable_MASTER_C_JigMP_OnUpdateChamberUID");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnUpdateChamberUID, NewUID) == 0x000000, "Member 'Buildable_MASTER_C_JigMP_OnUpdateChamberUID::NewUID' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigMP_OnUpdateChamberUID, Result) == 0x000010, "Member 'Buildable_MASTER_C_JigMP_OnUpdateChamberUID::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.JigSetCanInteract
// 0x0003 (0x0003 - 0x0000)
struct Buildable_MASTER_C_JigSetCanInteract final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnablePhysics;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_JigSetCanInteract) == 0x000001, "Wrong alignment on Buildable_MASTER_C_JigSetCanInteract");
static_assert(sizeof(Buildable_MASTER_C_JigSetCanInteract) == 0x000003, "Wrong size on Buildable_MASTER_C_JigSetCanInteract");
static_assert(offsetof(Buildable_MASTER_C_JigSetCanInteract, CanInteract) == 0x000000, "Member 'Buildable_MASTER_C_JigSetCanInteract::CanInteract' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigSetCanInteract, EnablePhysics) == 0x000001, "Member 'Buildable_MASTER_C_JigSetCanInteract::EnablePhysics' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_JigSetCanInteract, Result) == 0x000002, "Member 'Buildable_MASTER_C_JigSetCanInteract::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.MC_Destroy
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_MC_Destroy final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_MC_Destroy) == 0x000008, "Wrong alignment on Buildable_MASTER_C_MC_Destroy");
static_assert(sizeof(Buildable_MASTER_C_MC_Destroy) == 0x000008, "Wrong size on Buildable_MASTER_C_MC_Destroy");
static_assert(offsetof(Buildable_MASTER_C_MC_Destroy, Actor) == 0x000000, "Member 'Buildable_MASTER_C_MC_Destroy::Actor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.MC_OnInteractBuildable
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_MC_OnInteractBuildable final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_MC_OnInteractBuildable) == 0x000008, "Wrong alignment on Buildable_MASTER_C_MC_OnInteractBuildable");
static_assert(sizeof(Buildable_MASTER_C_MC_OnInteractBuildable) == 0x000008, "Wrong size on Buildable_MASTER_C_MC_OnInteractBuildable");
static_assert(offsetof(Buildable_MASTER_C_MC_OnInteractBuildable, Actor) == 0x000000, "Member 'Buildable_MASTER_C_MC_OnInteractBuildable::Actor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OnBeginInteract
// 0x0058 (0x0058 - 0x0000)
struct Buildable_MASTER_C_OnBeginInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class FText>        Options;                                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Buildable_MASTER_C_OnBeginInteract) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OnBeginInteract");
static_assert(sizeof(Buildable_MASTER_C_OnBeginInteract) == 0x000058, "Wrong size on Buildable_MASTER_C_OnBeginInteract");
static_assert(offsetof(Buildable_MASTER_C_OnBeginInteract, InteractingActor) == 0x000000, "Member 'Buildable_MASTER_C_OnBeginInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_OnBeginInteract, Options) == 0x000008, "Member 'Buildable_MASTER_C_OnBeginInteract::Options' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OnDestroy
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_OnDestroy final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_OnDestroy) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OnDestroy");
static_assert(sizeof(Buildable_MASTER_C_OnDestroy) == 0x000008, "Wrong size on Buildable_MASTER_C_OnDestroy");
static_assert(offsetof(Buildable_MASTER_C_OnDestroy, Actor) == 0x000000, "Member 'Buildable_MASTER_C_OnDestroy::Actor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OnExecuteInteract
// 0x0010 (0x0010 - 0x0000)
struct Buildable_MASTER_C_OnExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_OnExecuteInteract) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OnExecuteInteract");
static_assert(sizeof(Buildable_MASTER_C_OnExecuteInteract) == 0x000010, "Wrong size on Buildable_MASTER_C_OnExecuteInteract");
static_assert(offsetof(Buildable_MASTER_C_OnExecuteInteract, InteractingActor) == 0x000000, "Member 'Buildable_MASTER_C_OnExecuteInteract::InteractingActor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_OnExecuteInteract, Option) == 0x000008, "Member 'Buildable_MASTER_C_OnExecuteInteract::Option' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OnExecuteInteractDialogue
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_OnExecuteInteractDialogue final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_OnExecuteInteractDialogue) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OnExecuteInteractDialogue");
static_assert(sizeof(Buildable_MASTER_C_OnExecuteInteractDialogue) == 0x000008, "Wrong size on Buildable_MASTER_C_OnExecuteInteractDialogue");
static_assert(offsetof(Buildable_MASTER_C_OnExecuteInteractDialogue, InteractingActor) == 0x000000, "Member 'Buildable_MASTER_C_OnExecuteInteractDialogue::InteractingActor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OnInteractBuildable
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_OnInteractBuildable final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_OnInteractBuildable) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OnInteractBuildable");
static_assert(sizeof(Buildable_MASTER_C_OnInteractBuildable) == 0x000008, "Wrong size on Buildable_MASTER_C_OnInteractBuildable");
static_assert(offsetof(Buildable_MASTER_C_OnInteractBuildable, Actor) == 0x000000, "Member 'Buildable_MASTER_C_OnInteractBuildable::Actor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OnRequestServerInteract
// 0x0048 (0x0048 - 0x0000)
struct Buildable_MASTER_C_OnRequestServerInteract final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Option;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_OnRequestServerInteract) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OnRequestServerInteract");
static_assert(sizeof(Buildable_MASTER_C_OnRequestServerInteract) == 0x000048, "Wrong size on Buildable_MASTER_C_OnRequestServerInteract");
static_assert(offsetof(Buildable_MASTER_C_OnRequestServerInteract, Actor) == 0x000000, "Member 'Buildable_MASTER_C_OnRequestServerInteract::Actor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_OnRequestServerInteract, Option) == 0x000008, "Member 'Buildable_MASTER_C_OnRequestServerInteract::Option' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_OnRequestServerInteract, Payload) == 0x000010, "Member 'Buildable_MASTER_C_OnRequestServerInteract::Payload' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_OnRequestServerInteract, Result) == 0x000040, "Member 'Buildable_MASTER_C_OnRequestServerInteract::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OnServerExecuteInteract
// 0x0040 (0x0040 - 0x0000)
struct Buildable_MASTER_C_OnServerExecuteInteract final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ByActor;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_JigPayload                          Payload;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_OnServerExecuteInteract) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OnServerExecuteInteract");
static_assert(sizeof(Buildable_MASTER_C_OnServerExecuteInteract) == 0x000040, "Wrong size on Buildable_MASTER_C_OnServerExecuteInteract");
static_assert(offsetof(Buildable_MASTER_C_OnServerExecuteInteract, Option) == 0x000000, "Member 'Buildable_MASTER_C_OnServerExecuteInteract::Option' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_OnServerExecuteInteract, ByActor) == 0x000008, "Member 'Buildable_MASTER_C_OnServerExecuteInteract::ByActor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_OnServerExecuteInteract, Payload) == 0x000010, "Member 'Buildable_MASTER_C_OnServerExecuteInteract::Payload' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OnStopExecuteInteract
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_OnStopExecuteInteract final
{
public:
	class AActor*                                 InteractingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_OnStopExecuteInteract) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OnStopExecuteInteract");
static_assert(sizeof(Buildable_MASTER_C_OnStopExecuteInteract) == 0x000008, "Wrong size on Buildable_MASTER_C_OnStopExecuteInteract");
static_assert(offsetof(Buildable_MASTER_C_OnStopExecuteInteract, InteractingActor) == 0x000000, "Member 'Buildable_MASTER_C_OnStopExecuteInteract::InteractingActor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.OverrideBuildName
// 0x0018 (0x0018 - 0x0000)
struct Buildable_MASTER_C_OverrideBuildName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Buildable_MASTER_C_OverrideBuildName) == 0x000008, "Wrong alignment on Buildable_MASTER_C_OverrideBuildName");
static_assert(sizeof(Buildable_MASTER_C_OverrideBuildName) == 0x000018, "Wrong size on Buildable_MASTER_C_OverrideBuildName");
static_assert(offsetof(Buildable_MASTER_C_OverrideBuildName, Name_0) == 0x000000, "Member 'Buildable_MASTER_C_OverrideBuildName::Name_0' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.Pickup
// 0x0001 (0x0001 - 0x0000)
struct Buildable_MASTER_C_Pickup final
{
public:
	bool                                          Quick_;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_Pickup) == 0x000001, "Wrong alignment on Buildable_MASTER_C_Pickup");
static_assert(sizeof(Buildable_MASTER_C_Pickup) == 0x000001, "Wrong size on Buildable_MASTER_C_Pickup");
static_assert(offsetof(Buildable_MASTER_C_Pickup, Quick_) == 0x000000, "Member 'Buildable_MASTER_C_Pickup::Quick_' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.Power Off
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_Power_Off final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_Power_Off) == 0x000008, "Wrong alignment on Buildable_MASTER_C_Power_Off");
static_assert(sizeof(Buildable_MASTER_C_Power_Off) == 0x000008, "Wrong size on Buildable_MASTER_C_Power_Off");
static_assert(offsetof(Buildable_MASTER_C_Power_Off, Actor) == 0x000000, "Member 'Buildable_MASTER_C_Power_Off::Actor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.Power On
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_Power_On final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_Power_On) == 0x000008, "Wrong alignment on Buildable_MASTER_C_Power_On");
static_assert(sizeof(Buildable_MASTER_C_Power_On) == 0x000008, "Wrong size on Buildable_MASTER_C_Power_On");
static_assert(offsetof(Buildable_MASTER_C_Power_On, Actor) == 0x000000, "Member 'Buildable_MASTER_C_Power_On::Actor' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct Buildable_MASTER_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on Buildable_MASTER_C_ReceiveAnyDamage");
static_assert(sizeof(Buildable_MASTER_C_ReceiveAnyDamage) == 0x000020, "Wrong size on Buildable_MASTER_C_ReceiveAnyDamage");
static_assert(offsetof(Buildable_MASTER_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'Buildable_MASTER_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'Buildable_MASTER_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'Buildable_MASTER_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'Buildable_MASTER_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.RemoveFoliageComp
// 0x0220 (0x0220 - 0x0000)
struct Buildable_MASTER_C_RemoveFoliageComp final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFoliageInstancedStaticMeshComponent*   K2Node_DynamicCast_AsFoliage_Instanced_Static_Mesh_Component; // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInstance_ReturnValue;               // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_RemoveFoliageComp) == 0x000008, "Wrong alignment on Buildable_MASTER_C_RemoveFoliageComp");
static_assert(sizeof(Buildable_MASTER_C_RemoveFoliageComp) == 0x000220, "Wrong size on Buildable_MASTER_C_RemoveFoliageComp");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, Radius) == 0x000000, "Member 'Buildable_MASTER_C_RemoveFoliageComp::Radius' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Buildable_MASTER_C_RemoveFoliageComp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Buildable_MASTER_C_RemoveFoliageComp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, Temp_object_Variable) == 0x000010, "Member 'Buildable_MASTER_C_RemoveFoliageComp::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_SphereTraceMulti_OutHits) == 0x000038, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_SphereTraceMulti_ReturnValue) == 0x000048, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_Array_Get_Item) == 0x000050, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_bBlockingHit) == 0x000139, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_bInitialOverlap) == 0x00013A, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_Time) == 0x00013C, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_Distance) == 0x000140, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_Location) == 0x000148, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_ImpactPoint) == 0x000160, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_Normal) == 0x000178, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_ImpactNormal) == 0x000190, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_BoneName) == 0x0001C8, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_HitItem) == 0x0001D0, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_ElementIndex) == 0x0001D4, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_FaceIndex) == 0x0001D8, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_TraceStart) == 0x0001E0, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_BreakHitResult_TraceEnd) == 0x0001F8, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, K2Node_DynamicCast_AsFoliage_Instanced_Static_Mesh_Component) == 0x000210, "Member 'Buildable_MASTER_C_RemoveFoliageComp::K2Node_DynamicCast_AsFoliage_Instanced_Static_Mesh_Component' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'Buildable_MASTER_C_RemoveFoliageComp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_RemoveInstance_ReturnValue) == 0x000219, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_RemoveInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_RemoveFoliageComp, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00021A, "Member 'Buildable_MASTER_C_RemoveFoliageComp::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.ReplacingObject
// 0x0040 (0x0040 - 0x0000)
struct Buildable_MASTER_C_ReplacingObject final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBuildingComponent_C*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_RotationZ_ImplicitCast;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_ReplacingObject) == 0x000008, "Wrong alignment on Buildable_MASTER_C_ReplacingObject");
static_assert(sizeof(Buildable_MASTER_C_ReplacingObject) == 0x000040, "Wrong size on Buildable_MASTER_C_ReplacingObject");
static_assert(offsetof(Buildable_MASTER_C_ReplacingObject, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'Buildable_MASTER_C_ReplacingObject::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReplacingObject, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'Buildable_MASTER_C_ReplacingObject::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReplacingObject, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'Buildable_MASTER_C_ReplacingObject::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReplacingObject, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'Buildable_MASTER_C_ReplacingObject::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReplacingObject, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'Buildable_MASTER_C_ReplacingObject::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReplacingObject, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'Buildable_MASTER_C_ReplacingObject::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_ReplacingObject, K2Node_VariableSet_RotationZ_ImplicitCast) == 0x000038, "Member 'Buildable_MASTER_C_ReplacingObject::K2Node_VariableSet_RotationZ_ImplicitCast' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.Requires Power?
// 0x0001 (0x0001 - 0x0000)
struct Buildable_MASTER_C_Requires_Power_ final
{
public:
	bool                                          Required_;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_Requires_Power_) == 0x000001, "Wrong alignment on Buildable_MASTER_C_Requires_Power_");
static_assert(sizeof(Buildable_MASTER_C_Requires_Power_) == 0x000001, "Wrong size on Buildable_MASTER_C_Requires_Power_");
static_assert(offsetof(Buildable_MASTER_C_Requires_Power_, Required_) == 0x000000, "Member 'Buildable_MASTER_C_Requires_Power_::Required_' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.SetInteractDistance
// 0x0028 (0x0028 - 0x0000)
struct Buildable_MASTER_C_SetInteractDistance final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_SetInteractDistance) == 0x000008, "Wrong alignment on Buildable_MASTER_C_SetInteractDistance");
static_assert(sizeof(Buildable_MASTER_C_SetInteractDistance) == 0x000028, "Wrong size on Buildable_MASTER_C_SetInteractDistance");
static_assert(offsetof(Buildable_MASTER_C_SetInteractDistance, Target) == 0x000000, "Member 'Buildable_MASTER_C_SetInteractDistance::Target' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SetInteractDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Buildable_MASTER_C_SetInteractDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SetInteractDistance, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Buildable_MASTER_C_SetInteractDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.SetInteractOption
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_SetInteractOption final
{
public:
	struct FGameplayTag                           Option;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_SetInteractOption) == 0x000004, "Wrong alignment on Buildable_MASTER_C_SetInteractOption");
static_assert(sizeof(Buildable_MASTER_C_SetInteractOption) == 0x000008, "Wrong size on Buildable_MASTER_C_SetInteractOption");
static_assert(offsetof(Buildable_MASTER_C_SetInteractOption, Option) == 0x000000, "Member 'Buildable_MASTER_C_SetInteractOption::Option' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.SetPickupCount
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_SetPickupCount final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_SetPickupCount) == 0x000004, "Wrong alignment on Buildable_MASTER_C_SetPickupCount");
static_assert(sizeof(Buildable_MASTER_C_SetPickupCount) == 0x000008, "Wrong size on Buildable_MASTER_C_SetPickupCount");
static_assert(offsetof(Buildable_MASTER_C_SetPickupCount, NewCount) == 0x000000, "Member 'Buildable_MASTER_C_SetPickupCount::NewCount' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SetPickupCount, Result) == 0x000004, "Member 'Buildable_MASTER_C_SetPickupCount::Result' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.SpawnCraftingMaterials
// 0x0170 (0x0170 - 0x0000)
struct Buildable_MASTER_C_SpawnCraftingMaterials final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_SpawnCraftingMaterials) == 0x000010, "Wrong alignment on Buildable_MASTER_C_SpawnCraftingMaterials");
static_assert(sizeof(Buildable_MASTER_C_SpawnCraftingMaterials) == 0x000170, "Wrong size on Buildable_MASTER_C_SpawnCraftingMaterials");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_Array_Get_Item) == 0x000010, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_BreakTransform_Location) == 0x000080, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_BreakTransform_Scale) == 0x0000B0, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_BreakVector_X) == 0x0000C8, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_MakeVector_ReturnValue) == 0x0000E8, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000160, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnCraftingMaterials, CallFunc_FinishSpawningActor_ReturnValue) == 0x000168, "Member 'Buildable_MASTER_C_SpawnCraftingMaterials::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.SpawnItemOnDestroy
// 0x0160 (0x0160 - 0x0000)
struct Buildable_MASTER_C_SpawnItemOnDestroy final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_SpawnItemOnDestroy) == 0x000010, "Wrong alignment on Buildable_MASTER_C_SpawnItemOnDestroy");
static_assert(sizeof(Buildable_MASTER_C_SpawnItemOnDestroy) == 0x000160, "Wrong size on Buildable_MASTER_C_SpawnItemOnDestroy");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, Class_0) == 0x000000, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::Class_0' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_BreakTransform_Location) == 0x000070, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_BreakVector_X) == 0x0000B8, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_BreakVector_Y) == 0x0000C0, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000150, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Buildable_MASTER_C_SpawnItemOnDestroy, CallFunc_FinishSpawningActor_ReturnValue) == 0x000158, "Member 'Buildable_MASTER_C_SpawnItemOnDestroy::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function Buildable_MASTER.Buildable_MASTER_C.UpdateUIHealth
// 0x0008 (0x0008 - 0x0000)
struct Buildable_MASTER_C_UpdateUIHealth final
{
public:
	double                                        Health_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Buildable_MASTER_C_UpdateUIHealth) == 0x000008, "Wrong alignment on Buildable_MASTER_C_UpdateUIHealth");
static_assert(sizeof(Buildable_MASTER_C_UpdateUIHealth) == 0x000008, "Wrong size on Buildable_MASTER_C_UpdateUIHealth");
static_assert(offsetof(Buildable_MASTER_C_UpdateUIHealth, Health_0) == 0x000000, "Member 'Buildable_MASTER_C_UpdateUIHealth::Health_0' has a wrong offset!");

}

