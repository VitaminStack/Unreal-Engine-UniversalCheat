#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AISpawningVolume

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "S_AIRespawn_structs.hpp"
#include "S_AISpawner_structs.hpp"
#include "E_AIBehaviour_structs.hpp"


namespace SDK::Params
{

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.Add AI Respawn Timer
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawningVolume_C_Add_AI_Respawn_Timer final
{
public:
	class ACharacter*                             AI_Character;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_Add_AI_Respawn_Timer) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_Add_AI_Respawn_Timer");
static_assert(sizeof(BP_AISpawningVolume_C_Add_AI_Respawn_Timer) == 0x000008, "Wrong size on BP_AISpawningVolume_C_Add_AI_Respawn_Timer");
static_assert(offsetof(BP_AISpawningVolume_C_Add_AI_Respawn_Timer, AI_Character) == 0x000000, "Member 'BP_AISpawningVolume_C_Add_AI_Respawn_Timer::AI_Character' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.AI Respawn Timer Finished
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawningVolume_C_AI_Respawn_Timer_Finished final
{
public:
	class ACharacter*                             AI_Character;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_AI_Respawn_Timer_Finished) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_AI_Respawn_Timer_Finished");
static_assert(sizeof(BP_AISpawningVolume_C_AI_Respawn_Timer_Finished) == 0x000008, "Wrong size on BP_AISpawningVolume_C_AI_Respawn_Timer_Finished");
static_assert(offsetof(BP_AISpawningVolume_C_AI_Respawn_Timer_Finished, AI_Character) == 0x000000, "Member 'BP_AISpawningVolume_C_AI_Respawn_Timer_Finished::AI_Character' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.BndEvt__Proximity Activation Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Activation_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.BndEvt__Proximity Deactivation Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AISpawningVolume_C_BndEvt__Proximity_Deactivation_Sphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.ExecuteUbergraph_BP_AISpawningVolume
// 0x0340 (0x0340 - 0x0000)
struct BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_AI_Character_1;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_AI_Character;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Find_Spawn_Location_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Find_Spawn_Location_Hit_Result;           // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0160(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_266[0x2];                                      // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26E[0x2];                                      // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0280(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AISpawner                           CallFunc_Array_Get_Item;                           // 0x0290(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_AIBehaviour                                 CallFunc_Convert_To_Behaviour_Behaviour;           // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AIRespawn                           K2Node_MakeStruct_S_AIRespawn;                     // 0x0308(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AISpawner                           CallFunc_Array_Get_Item_1;                         // 0x0320(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast; // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume");
static_assert(sizeof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume) == 0x000340, "Wrong size on BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, EntryPoint) == 0x000000, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_HasAuthority_ReturnValue) == 0x000005, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_Variable) == 0x000006, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_int_Variable) == 0x000008, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_IsClosed_Variable) == 0x00000C, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_Has_Been_Initd_Variable) == 0x000015, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_HasAuthority_ReturnValue_1) == 0x000016, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_CustomEvent_AI_Character_1) == 0x000028, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_CustomEvent_AI_Character_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_name_Variable) == 0x000030, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_CustomEvent_AI_Character) == 0x000038, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_CustomEvent_AI_Character' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_K2_SetTimer_ReturnValue) == 0x000040, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Find_Spawn_Location_ReturnValue) == 0x000048, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Find_Spawn_Location_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Find_Spawn_Location_Hit_Result) == 0x000050, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Find_Spawn_Location_Hit_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_Has_Been_Initd_Variable_1) == 0x000138, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_IsClosed_Variable_1) == 0x000139, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000140, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000148, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000150, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000158, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x00015C, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x000160, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000248, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x000250, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x000258, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000260, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_Has_Been_Initd_Variable_2) == 0x000264, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Array_Contains_ReturnValue) == 0x000265, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_HasAuthority_ReturnValue_2) == 0x00026C, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00026D, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Array_Length_ReturnValue_1) == 0x000270, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_int_Variable_1) == 0x000274, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000278, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Add_IntInt_ReturnValue_2) == 0x00027C, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_name_Variable_1) == 0x000280, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_Variable_1) == 0x000288, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Array_Contains_ReturnValue_1) == 0x000289, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_int_Array_Index_Variable_1) == 0x00028C, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Array_Get_Item) == 0x000290, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_True_if_break_was_hit_Variable) == 0x0002A0, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Not_PreBool_ReturnValue) == 0x0002A1, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_int_Loop_Counter_Variable_1) == 0x0002A4, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002A8, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002AC, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_BooleanAND_ReturnValue) == 0x0002B0, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_CustomEvent_Pawn) == 0x0002B8, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_GetComponentByClass_ReturnValue) == 0x0002C0, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Convert_To_Behaviour_Behaviour) == 0x0002C8, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Convert_To_Behaviour_Behaviour' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002D0, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_RandomBool_ReturnValue) == 0x0002D8, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0002E0, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002E8, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002F0, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, Temp_bool_IsClosed_Variable_2) == 0x0002F8, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_Select_Default) == 0x000300, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_MakeStruct_S_AIRespawn) == 0x000308, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_MakeStruct_S_AIRespawn' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Array_AddUnique_ReturnValue) == 0x000318, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Array_Length_ReturnValue_2) == 0x00031C, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Array_Get_Item_1) == 0x000320, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Less_IntInt_ReturnValue_2) == 0x000330, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Add_IntInt_ReturnValue_4) == 0x000334, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, CallFunc_Delay_Duration_ImplicitCast) == 0x000338, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume, K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast) == 0x00033C, "Member 'BP_AISpawningVolume_C_ExecuteUbergraph_BP_AISpawningVolume::K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.Find Spawn Location
// 0x0368 (0x0368 - 0x0000)
struct BP_AISpawningVolume_C_Find_Spawn_Location final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit_Result;                                        // 0x0008(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Start_Location_L;                                  // 0x00F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0190(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue_1;         // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x01F0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0218(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast; // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_Find_Spawn_Location) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_Find_Spawn_Location");
static_assert(sizeof(BP_AISpawningVolume_C_Find_Spawn_Location) == 0x000368, "Wrong size on BP_AISpawningVolume_C_Find_Spawn_Location");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, ReturnValue) == 0x000000, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, Hit_Result) == 0x000008, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::Hit_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, Start_Location_L) == 0x0000F0, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::Start_Location_L' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000108, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_X) == 0x000120, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_Y) == 0x000128, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_Z) == 0x000130, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_X_1) == 0x000138, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_Y_1) == 0x000140, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_Z_1) == 0x000148, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000150, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000168, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_X_2) == 0x000170, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_Y_2) == 0x000178, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_Z_2) == 0x000180, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000188, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, Temp_object_Variable) == 0x000190, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001A0, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_MakeVector_ReturnValue) == 0x0001A8, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001C0, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_GetScaledBoxExtent_ReturnValue_1) == 0x0001D8, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_GetScaledBoxExtent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, K2Node_MakeArray_Array) == 0x0001F0, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_X_3) == 0x000200, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_Y_3) == 0x000208, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_BreakVector_Z_3) == 0x000210, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000218, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000300, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000308, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000310, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000318, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_RandomFloatInRange_ReturnValue) == 0x000320, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000328, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_MakeVector_ReturnValue_1) == 0x000330, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x000348, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Find_Spawn_Location, CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast) == 0x000360, "Member 'BP_AISpawningVolume_C_Find_Spawn_Location::CallFunc_SphereTraceSingleForObjects_Radius_ImplicitCast' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.PlayerInAreaCheck
// 0x0050 (0x0050 - 0x0000)
struct BP_AISpawningVolume_C_PlayerInAreaCheck final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_PlayerInAreaCheck) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_PlayerInAreaCheck");
static_assert(sizeof(BP_AISpawningVolume_C_PlayerInAreaCheck) == 0x000050, "Wrong size on BP_AISpawningVolume_C_PlayerInAreaCheck");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, Temp_name_Variable) == 0x000014, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000020, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_Array_Contains_ReturnValue) == 0x000041, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_PlayerInAreaCheck, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_AISpawningVolume_C_PlayerInAreaCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.Reset AI
// 0x0330 (0x0330 - 0x0000)
struct BP_AISpawningVolume_C_Reset_AI final
{
public:
	struct FHitResult                             Hit_Result;                                        // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             AI_Character;                                      // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0240(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_Reset_AI) == 0x000010, "Wrong alignment on BP_AISpawningVolume_C_Reset_AI");
static_assert(sizeof(BP_AISpawningVolume_C_Reset_AI) == 0x000330, "Wrong size on BP_AISpawningVolume_C_Reset_AI");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, Hit_Result) == 0x000000, "Member 'BP_AISpawningVolume_C_Reset_AI::Hit_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, AI_Character) == 0x0000E8, "Member 'BP_AISpawningVolume_C_Reset_AI::AI_Character' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F0, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F1, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_ImpactPoint) == 0x000118, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_BoneName) == 0x000180, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_Add_VectorVector_ReturnValue) == 0x0001C8, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_MakeTransform_ReturnValue) == 0x0001E0, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000240, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Reset_AI, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000328, "Member 'BP_AISpawningVolume_C_Reset_AI::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.Respawn Timer
// 0x0058 (0x0058 - 0x0000)
struct BP_AISpawningVolume_C_Respawn_Timer final
{
public:
	int32                                         Array_Index_L;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AIRespawn                           CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AIRespawn                           K2Node_MakeStruct_S_AIRespawn;                     // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_Respawn_Timer) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_Respawn_Timer");
static_assert(sizeof(BP_AISpawningVolume_C_Respawn_Timer) == 0x000058, "Wrong size on BP_AISpawningVolume_C_Respawn_Timer");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, Array_Index_L) == 0x000000, "Member 'BP_AISpawningVolume_C_Respawn_Timer::Array_Index_L' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AISpawningVolume_C_Respawn_Timer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_AISpawningVolume_C_Respawn_Timer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AISpawningVolume_C_Respawn_Timer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AISpawningVolume_C_Respawn_Timer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AISpawningVolume_C_Respawn_Timer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_AISpawningVolume_C_Respawn_Timer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_AISpawningVolume_C_Respawn_Timer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, K2Node_MakeStruct_S_AIRespawn) == 0x000030, "Member 'BP_AISpawningVolume_C_Respawn_Timer::K2Node_MakeStruct_S_AIRespawn' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_AISpawningVolume_C_Respawn_Timer::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'BP_AISpawningVolume_C_Respawn_Timer::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Respawn_Timer, K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast) == 0x000050, "Member 'BP_AISpawningVolume_C_Respawn_Timer::K2Node_MakeStruct_RespawnTime_6_8AF0BD5449A6D822BE0FD68EE7713725_ImplicitCast' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.RespawnAI
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawningVolume_C_RespawnAI final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_RespawnAI) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_RespawnAI");
static_assert(sizeof(BP_AISpawningVolume_C_RespawnAI) == 0x000008, "Wrong size on BP_AISpawningVolume_C_RespawnAI");
static_assert(offsetof(BP_AISpawningVolume_C_RespawnAI, Pawn) == 0x000000, "Member 'BP_AISpawningVolume_C_RespawnAI::Pawn' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.Spawn Location Trace
// 0x02D8 (0x02D8 - 0x0000)
struct BP_AISpawningVolume_C_Spawn_Location_Trace final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* AI_Character)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Find_Spawn_Location_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Find_Spawn_Location_Hit_Result;           // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable;                              // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_SpawnAIFromClass_ReturnValue;             // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CA[0x2];                                      // 0x02CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartAIComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_Spawn_Location_Trace) == 0x000008, "Wrong alignment on BP_AISpawningVolume_C_Spawn_Location_Trace");
static_assert(sizeof(BP_AISpawningVolume_C_Spawn_Location_Trace) == 0x0002D8, "Wrong size on BP_AISpawningVolume_C_Spawn_Location_Trace");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, Index_0) == 0x000000, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, Temp_bool_Variable) == 0x000004, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, Temp_int_Variable) == 0x000008, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, Temp_bool_Variable_1) == 0x00000C, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_RandomRotator_ReturnValue) == 0x000018, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00006D, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006E, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BooleanAND_ReturnValue) == 0x00006F, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Find_Spawn_Location_ReturnValue) == 0x000070, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Find_Spawn_Location_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Find_Spawn_Location_Hit_Result) == 0x000078, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Find_Spawn_Location_Hit_Result' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000160, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_bBlockingHit) == 0x000161, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000162, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_GetObjectClass_ReturnValue) == 0x000238, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakVector_X) == 0x000240, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakVector_Y) == 0x000248, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BreakVector_Z) == 0x000250, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000258, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000260, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000268, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_MakeVector_ReturnValue) == 0x000270, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_BooleanOR_ReturnValue) == 0x000288, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Subtract_IntInt_ReturnValue) == 0x00028C, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, Temp_struct_Variable) == 0x000290, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, K2Node_Select_Default) == 0x0002A8, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_SpawnAIFromClass_ReturnValue) == 0x0002C0, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_SpawnAIFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Array_Contains_ReturnValue) == 0x0002C8, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_IsValid_ReturnValue) == 0x0002C9, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_Array_Add_ReturnValue) == 0x0002CC, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_Spawn_Location_Trace, CallFunc_GetComponentByClass_ReturnValue) == 0x0002D0, "Member 'BP_AISpawningVolume_C_Spawn_Location_Trace::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AISpawningVolume.BP_AISpawningVolume_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_AISpawningVolume_C_UserConstructionScript final
{
public:
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AISpawningVolume_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_AISpawningVolume_C_UserConstructionScript");
static_assert(sizeof(BP_AISpawningVolume_C_UserConstructionScript) == 0x000008, "Wrong size on BP_AISpawningVolume_C_UserConstructionScript");
static_assert(offsetof(BP_AISpawningVolume_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000000, "Member 'BP_AISpawningVolume_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AISpawningVolume_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1) == 0x000004, "Member 'BP_AISpawningVolume_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1' has a wrong offset!");

}

